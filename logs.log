2024-05-17 19:53:33,365:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 19:53:33,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 19:53:33,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 19:53:33,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 19:53:33,676:INFO:PyCaret RegressionExperiment
2024-05-17 19:53:33,677:INFO:Logging name: reg-default-name
2024-05-17 19:53:33,677:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-17 19:53:33,677:INFO:version 3.3.2
2024-05-17 19:53:33,677:INFO:Initializing setup()
2024-05-17 19:53:33,677:INFO:self.USI: 7ca1
2024-05-17 19:53:33,677:INFO:self._variable_keys: {'exp_name_log', 'data', '_ml_usecase', 'html_param', 'memory', 'target_param', 'USI', '_available_plots', 'fold_generator', 'seed', 'gpu_n_jobs_param', 'X_test', 'y', 'y_test', 'exp_id', 'transform_target_param', 'y_train', 'pipeline', 'fold_shuffle_param', 'idx', 'X_train', 'logging_param', 'X', 'n_jobs_param', 'log_plots_param', 'gpu_param', 'fold_groups_param'}
2024-05-17 19:53:33,677:INFO:Checking environment
2024-05-17 19:53:33,677:INFO:python_version: 3.9.12
2024-05-17 19:53:33,677:INFO:python_build: ('main', 'Mar 24 2022 23:17:03')
2024-05-17 19:53:33,677:INFO:machine: AMD64
2024-05-17 19:53:33,703:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-17 19:53:33,712:INFO:Memory: svmem(total=16910155776, available=1876299776, percent=88.9, used=15033856000, free=1876299776)
2024-05-17 19:53:33,713:INFO:Physical Core: 4
2024-05-17 19:53:33,713:INFO:Logical Core: 8
2024-05-17 19:53:33,713:INFO:Checking libraries
2024-05-17 19:53:33,713:INFO:System:
2024-05-17 19:53:33,713:INFO:    python: 3.9.12 | packaged by conda-forge | (main, Mar 24 2022, 23:17:03) [MSC v.1929 64 bit (AMD64)]
2024-05-17 19:53:33,713:INFO:executable: c:\Program Files\Orange\python.exe
2024-05-17 19:53:33,713:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-17 19:53:33,713:INFO:PyCaret required dependencies:
2024-05-17 19:53:33,856:INFO:                 pip: 22.3.1
2024-05-17 19:53:33,856:INFO:          setuptools: 65.5.1
2024-05-17 19:53:33,857:INFO:             pycaret: 3.3.2
2024-05-17 19:53:33,857:INFO:             IPython: 8.4.0
2024-05-17 19:53:33,857:INFO:          ipywidgets: 7.7.1
2024-05-17 19:53:33,857:INFO:                tqdm: 4.66.2
2024-05-17 19:53:33,857:INFO:               numpy: 1.23.5
2024-05-17 19:53:33,857:INFO:              pandas: 1.4.4
2024-05-17 19:53:33,857:INFO:              jinja2: 3.1.2
2024-05-17 19:53:33,857:INFO:               scipy: 1.9.3
2024-05-17 19:53:33,857:INFO:              joblib: 1.2.0
2024-05-17 19:53:33,857:INFO:             sklearn: 1.1.3
2024-05-17 19:53:33,857:INFO:                pyod: 1.1.3
2024-05-17 19:53:33,857:INFO:            imblearn: 0.12.2
2024-05-17 19:53:33,857:INFO:   category_encoders: 2.6.3
2024-05-17 19:53:33,857:INFO:            lightgbm: 4.3.0
2024-05-17 19:53:33,857:INFO:               numba: 0.59.1
2024-05-17 19:53:33,857:INFO:            requests: 2.28.1
2024-05-17 19:53:33,857:INFO:          matplotlib: 3.6.2
2024-05-17 19:53:33,857:INFO:          scikitplot: 0.3.7
2024-05-17 19:53:33,857:INFO:         yellowbrick: 1.5
2024-05-17 19:53:33,857:INFO:              plotly: 5.11.0
2024-05-17 19:53:33,857:INFO:    plotly-resampler: Not installed
2024-05-17 19:53:33,857:INFO:             kaleido: 0.2.1
2024-05-17 19:53:33,858:INFO:           schemdraw: 0.15
2024-05-17 19:53:33,858:INFO:         statsmodels: 0.14.2
2024-05-17 19:53:33,858:INFO:              sktime: 0.26.0
2024-05-17 19:53:33,858:INFO:               tbats: 1.1.3
2024-05-17 19:53:33,858:INFO:            pmdarima: 2.0.4
2024-05-17 19:53:33,858:INFO:              psutil: 5.9.4
2024-05-17 19:53:33,858:INFO:          markupsafe: 2.1.2
2024-05-17 19:53:33,858:INFO:             pickle5: Not installed
2024-05-17 19:53:33,858:INFO:         cloudpickle: 3.0.0
2024-05-17 19:53:33,858:INFO:         deprecation: 2.1.0
2024-05-17 19:53:33,858:INFO:              xxhash: 3.4.1
2024-05-17 19:53:33,858:INFO:           wurlitzer: Not installed
2024-05-17 19:53:33,858:INFO:PyCaret optional dependencies:
2024-05-17 19:53:33,998:INFO:                shap: Not installed
2024-05-17 19:53:33,998:INFO:           interpret: Not installed
2024-05-17 19:53:33,998:INFO:                umap: Not installed
2024-05-17 19:53:33,998:INFO:     ydata_profiling: Not installed
2024-05-17 19:53:33,998:INFO:  explainerdashboard: Not installed
2024-05-17 19:53:33,998:INFO:             autoviz: Not installed
2024-05-17 19:53:33,998:INFO:           fairlearn: Not installed
2024-05-17 19:53:33,998:INFO:          deepchecks: Not installed
2024-05-17 19:53:33,999:INFO:             xgboost: 1.7.1
2024-05-17 19:53:33,999:INFO:            catboost: 1.1.1
2024-05-17 19:53:33,999:INFO:              kmodes: Not installed
2024-05-17 19:53:33,999:INFO:             mlxtend: Not installed
2024-05-17 19:53:33,999:INFO:       statsforecast: Not installed
2024-05-17 19:53:33,999:INFO:        tune_sklearn: Not installed
2024-05-17 19:53:33,999:INFO:                 ray: Not installed
2024-05-17 19:53:33,999:INFO:            hyperopt: Not installed
2024-05-17 19:53:33,999:INFO:              optuna: Not installed
2024-05-17 19:53:33,999:INFO:               skopt: Not installed
2024-05-17 19:53:33,999:INFO:              mlflow: Not installed
2024-05-17 19:53:33,999:INFO:              gradio: Not installed
2024-05-17 19:53:33,999:INFO:             fastapi: Not installed
2024-05-17 19:53:33,999:INFO:             uvicorn: Not installed
2024-05-17 19:53:33,999:INFO:              m2cgen: Not installed
2024-05-17 19:53:33,999:INFO:           evidently: Not installed
2024-05-17 19:53:33,999:INFO:               fugue: Not installed
2024-05-17 19:53:33,999:INFO:           streamlit: Not installed
2024-05-17 19:53:34,000:INFO:             prophet: Not installed
2024-05-17 19:53:34,000:INFO:None
2024-05-17 19:53:34,000:INFO:Set up data.
2024-05-17 19:53:34,017:INFO:Set up folding strategy.
2024-05-17 19:53:34,017:INFO:Set up train/test split.
2024-05-17 19:53:34,025:INFO:Set up index.
2024-05-17 19:53:34,026:INFO:Assigning column types.
2024-05-17 19:53:34,032:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-17 19:53:34,032:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-17 19:53:34,038:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 19:53:34,044:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:53:34,121:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:53:34,175:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:53:34,177:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:34,181:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:34,996:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,001:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,006:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,072:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,129:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,130:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:35,135:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:35,136:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-17 19:53:35,144:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,149:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,226:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,273:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,274:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:35,276:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:35,283:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,288:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,348:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,401:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,402:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:35,406:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:35,407:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-17 19:53:35,425:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,487:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,546:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,547:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:35,549:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:35,559:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,653:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,712:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,713:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:35,720:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:35,721:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-17 19:53:35,792:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,835:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:53:35,836:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:35,839:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:35,989:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:53:36,034:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:53:36,035:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:36,037:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:36,038:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-17 19:53:36,106:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:53:36,151:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:36,153:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:36,228:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:53:36,278:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:36,281:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:36,281:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-17 19:53:36,417:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:36,419:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:36,536:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:36,539:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:36,542:INFO:Preparing preprocessing pipeline...
2024-05-17 19:53:36,542:INFO:Set up simple imputation.
2024-05-17 19:53:36,549:INFO:Set up encoding of categorical features.
2024-05-17 19:53:36,613:INFO:Finished creating preprocessing pipeline.
2024-05-17 19:53:36,620:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'closeTime', 'count', 'openPrice',
                                             'openTime'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['symbol'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['symbol'],
                                    transformer=OneHotEncoder(cols=['symbol'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2024-05-17 19:53:36,620:INFO:Creating final display dataframe.
2024-05-17 19:53:36,825:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         lastPrice
2                   Target type        Regression
3           Original data shape         (9563, 9)
4        Transformed data shape         (9563, 9)
5   Transformed train set shape         (6694, 9)
6    Transformed test set shape         (2869, 9)
7              Numeric features                 7
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              7ca1
2024-05-17 19:53:36,986:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:36,990:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:37,138:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:53:37,143:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:53:37,144:INFO:setup() successfully completed in 3.47s...............
2024-05-17 19:54:08,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 19:54:08,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 19:54:08,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 19:54:08,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 19:54:08,935:INFO:PyCaret RegressionExperiment
2024-05-17 19:54:08,936:INFO:Logging name: reg-default-name
2024-05-17 19:54:08,936:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-17 19:54:08,936:INFO:version 3.3.2
2024-05-17 19:54:08,936:INFO:Initializing setup()
2024-05-17 19:54:08,936:INFO:self.USI: 4d1c
2024-05-17 19:54:08,936:INFO:self._variable_keys: {'data', 'n_jobs_param', 'log_plots_param', 'html_param', 'y_test', 'X_test', 'gpu_param', 'pipeline', 'USI', '_ml_usecase', 'fold_generator', 'fold_groups_param', 'y', 'exp_id', '_available_plots', 'fold_shuffle_param', 'transform_target_param', 'target_param', 'y_train', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'logging_param', 'idx', 'X', 'memory', 'seed'}
2024-05-17 19:54:08,936:INFO:Checking environment
2024-05-17 19:54:08,936:INFO:python_version: 3.9.12
2024-05-17 19:54:08,936:INFO:python_build: ('main', 'Mar 24 2022 23:17:03')
2024-05-17 19:54:08,936:INFO:machine: AMD64
2024-05-17 19:54:08,948:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-17 19:54:08,955:INFO:Memory: svmem(total=16910155776, available=2217979904, percent=86.9, used=14692175872, free=2217979904)
2024-05-17 19:54:08,955:INFO:Physical Core: 4
2024-05-17 19:54:08,955:INFO:Logical Core: 8
2024-05-17 19:54:08,955:INFO:Checking libraries
2024-05-17 19:54:08,955:INFO:System:
2024-05-17 19:54:08,955:INFO:    python: 3.9.12 | packaged by conda-forge | (main, Mar 24 2022, 23:17:03) [MSC v.1929 64 bit (AMD64)]
2024-05-17 19:54:08,956:INFO:executable: c:\Program Files\Orange\python.exe
2024-05-17 19:54:08,956:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-17 19:54:08,956:INFO:PyCaret required dependencies:
2024-05-17 19:54:09,044:INFO:                 pip: 22.3.1
2024-05-17 19:54:09,044:INFO:          setuptools: 65.5.1
2024-05-17 19:54:09,044:INFO:             pycaret: 3.3.2
2024-05-17 19:54:09,044:INFO:             IPython: 8.4.0
2024-05-17 19:54:09,044:INFO:          ipywidgets: 7.7.1
2024-05-17 19:54:09,044:INFO:                tqdm: 4.66.2
2024-05-17 19:54:09,044:INFO:               numpy: 1.23.5
2024-05-17 19:54:09,044:INFO:              pandas: 1.4.4
2024-05-17 19:54:09,044:INFO:              jinja2: 3.1.2
2024-05-17 19:54:09,044:INFO:               scipy: 1.9.3
2024-05-17 19:54:09,044:INFO:              joblib: 1.2.0
2024-05-17 19:54:09,044:INFO:             sklearn: 1.1.3
2024-05-17 19:54:09,044:INFO:                pyod: 1.1.3
2024-05-17 19:54:09,045:INFO:            imblearn: 0.12.2
2024-05-17 19:54:09,045:INFO:   category_encoders: 2.6.3
2024-05-17 19:54:09,045:INFO:            lightgbm: 4.3.0
2024-05-17 19:54:09,045:INFO:               numba: 0.59.1
2024-05-17 19:54:09,045:INFO:            requests: 2.28.1
2024-05-17 19:54:09,045:INFO:          matplotlib: 3.6.2
2024-05-17 19:54:09,045:INFO:          scikitplot: 0.3.7
2024-05-17 19:54:09,045:INFO:         yellowbrick: 1.5
2024-05-17 19:54:09,045:INFO:              plotly: 5.11.0
2024-05-17 19:54:09,045:INFO:    plotly-resampler: Not installed
2024-05-17 19:54:09,045:INFO:             kaleido: 0.2.1
2024-05-17 19:54:09,045:INFO:           schemdraw: 0.15
2024-05-17 19:54:09,045:INFO:         statsmodels: 0.14.2
2024-05-17 19:54:09,045:INFO:              sktime: 0.26.0
2024-05-17 19:54:09,045:INFO:               tbats: 1.1.3
2024-05-17 19:54:09,045:INFO:            pmdarima: 2.0.4
2024-05-17 19:54:09,046:INFO:              psutil: 5.9.4
2024-05-17 19:54:09,046:INFO:          markupsafe: 2.1.2
2024-05-17 19:54:09,046:INFO:             pickle5: Not installed
2024-05-17 19:54:09,046:INFO:         cloudpickle: 3.0.0
2024-05-17 19:54:09,046:INFO:         deprecation: 2.1.0
2024-05-17 19:54:09,046:INFO:              xxhash: 3.4.1
2024-05-17 19:54:09,046:INFO:           wurlitzer: Not installed
2024-05-17 19:54:09,046:INFO:PyCaret optional dependencies:
2024-05-17 19:54:09,090:INFO:                shap: Not installed
2024-05-17 19:54:09,091:INFO:           interpret: Not installed
2024-05-17 19:54:09,091:INFO:                umap: Not installed
2024-05-17 19:54:09,091:INFO:     ydata_profiling: Not installed
2024-05-17 19:54:09,091:INFO:  explainerdashboard: Not installed
2024-05-17 19:54:09,091:INFO:             autoviz: Not installed
2024-05-17 19:54:09,091:INFO:           fairlearn: Not installed
2024-05-17 19:54:09,091:INFO:          deepchecks: Not installed
2024-05-17 19:54:09,091:INFO:             xgboost: 1.7.1
2024-05-17 19:54:09,091:INFO:            catboost: 1.1.1
2024-05-17 19:54:09,091:INFO:              kmodes: Not installed
2024-05-17 19:54:09,091:INFO:             mlxtend: Not installed
2024-05-17 19:54:09,091:INFO:       statsforecast: Not installed
2024-05-17 19:54:09,091:INFO:        tune_sklearn: Not installed
2024-05-17 19:54:09,091:INFO:                 ray: Not installed
2024-05-17 19:54:09,092:INFO:            hyperopt: Not installed
2024-05-17 19:54:09,092:INFO:              optuna: Not installed
2024-05-17 19:54:09,092:INFO:               skopt: Not installed
2024-05-17 19:54:09,092:INFO:              mlflow: Not installed
2024-05-17 19:54:09,092:INFO:              gradio: Not installed
2024-05-17 19:54:09,092:INFO:             fastapi: Not installed
2024-05-17 19:54:09,092:INFO:             uvicorn: Not installed
2024-05-17 19:54:09,092:INFO:              m2cgen: Not installed
2024-05-17 19:54:09,092:INFO:           evidently: Not installed
2024-05-17 19:54:09,092:INFO:               fugue: Not installed
2024-05-17 19:54:09,092:INFO:           streamlit: Not installed
2024-05-17 19:54:09,092:INFO:             prophet: Not installed
2024-05-17 19:54:09,092:INFO:None
2024-05-17 19:54:09,092:INFO:Set up data.
2024-05-17 19:54:09,101:INFO:Set up folding strategy.
2024-05-17 19:54:09,101:INFO:Set up train/test split.
2024-05-17 19:54:09,106:INFO:Set up index.
2024-05-17 19:54:09,106:INFO:Assigning column types.
2024-05-17 19:54:09,113:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-17 19:54:09,113:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,118:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,124:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,189:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,240:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,242:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:09,245:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:09,272:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,279:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,285:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,372:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,446:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,447:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:09,453:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:09,454:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-17 19:54:09,460:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,467:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,537:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,587:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,588:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:09,591:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:09,596:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,601:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,670:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,745:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,746:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:09,750:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:09,751:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-17 19:54:09,765:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,841:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,896:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,896:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:09,899:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:09,910:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:54:09,978:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:54:10,051:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:54:10,052:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:10,059:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:10,060:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-17 19:54:10,136:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:54:10,184:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:54:10,185:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:10,187:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:10,335:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:54:10,379:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:54:10,380:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:10,383:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:10,383:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-17 19:54:10,468:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:54:10,521:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:10,524:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:10,597:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:54:10,644:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:10,649:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:10,650:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-17 19:54:10,789:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:10,791:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:10,912:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:10,915:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:10,917:INFO:Preparing preprocessing pipeline...
2024-05-17 19:54:10,917:INFO:Set up simple imputation.
2024-05-17 19:54:10,919:INFO:Set up encoding of categorical features.
2024-05-17 19:54:10,996:INFO:Finished creating preprocessing pipeline.
2024-05-17 19:54:11,004:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'closeTime', 'count', 'openPrice',
                                             'openTime'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['symbol'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['symbol'],
                                    transformer=OneHotEncoder(cols=['symbol'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2024-05-17 19:54:11,005:INFO:Creating final display dataframe.
2024-05-17 19:54:11,194:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         lastPrice
2                   Target type        Regression
3           Original data shape         (9563, 9)
4        Transformed data shape         (9563, 9)
5   Transformed train set shape         (6694, 9)
6    Transformed test set shape         (2869, 9)
7              Numeric features                 7
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              4d1c
2024-05-17 19:54:11,351:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:11,356:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:11,478:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:54:11,482:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:54:11,483:INFO:setup() successfully completed in 2.55s...............
2024-05-17 19:54:11,483:INFO:Initializing compare_models()
2024-05-17 19:54:11,483:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-05-17 19:54:11,483:INFO:Checking exceptions
2024-05-17 19:54:11,485:INFO:Preparing display monitor
2024-05-17 19:54:11,492:INFO:Initializing Linear Regression
2024-05-17 19:54:11,492:INFO:Total runtime is 0.0 minutes
2024-05-17 19:54:11,492:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:11,494:INFO:Initializing create_model()
2024-05-17 19:54:11,494:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:11,494:INFO:Checking exceptions
2024-05-17 19:54:11,494:INFO:Importing libraries
2024-05-17 19:54:11,494:INFO:Copying training dataset
2024-05-17 19:54:11,498:INFO:Defining folds
2024-05-17 19:54:11,499:INFO:Declaring metric variables
2024-05-17 19:54:11,499:INFO:Importing untrained model
2024-05-17 19:54:11,499:INFO:Linear Regression Imported successfully
2024-05-17 19:54:11,499:INFO:Starting cross validation
2024-05-17 19:54:11,511:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:22,582:INFO:Calculating mean and std
2024-05-17 19:54:22,583:INFO:Creating metrics dataframe
2024-05-17 19:54:22,588:INFO:Uploading results into container
2024-05-17 19:54:22,589:INFO:Uploading model into container now
2024-05-17 19:54:22,589:INFO:_master_model_container: 1
2024-05-17 19:54:22,590:INFO:_display_container: 2
2024-05-17 19:54:22,590:INFO:LinearRegression(n_jobs=-1)
2024-05-17 19:54:22,590:INFO:create_model() successfully completed......................................
2024-05-17 19:54:22,695:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:22,696:INFO:Creating metrics dataframe
2024-05-17 19:54:22,701:INFO:Initializing Lasso Regression
2024-05-17 19:54:22,701:INFO:Total runtime is 0.18680687745412192 minutes
2024-05-17 19:54:22,702:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:22,702:INFO:Initializing create_model()
2024-05-17 19:54:22,702:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:22,702:INFO:Checking exceptions
2024-05-17 19:54:22,702:INFO:Importing libraries
2024-05-17 19:54:22,702:INFO:Copying training dataset
2024-05-17 19:54:22,707:INFO:Defining folds
2024-05-17 19:54:22,707:INFO:Declaring metric variables
2024-05-17 19:54:22,707:INFO:Importing untrained model
2024-05-17 19:54:22,707:INFO:Lasso Regression Imported successfully
2024-05-17 19:54:22,708:INFO:Starting cross validation
2024-05-17 19:54:22,709:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:23,131:INFO:Calculating mean and std
2024-05-17 19:54:23,132:INFO:Creating metrics dataframe
2024-05-17 19:54:23,136:INFO:Uploading results into container
2024-05-17 19:54:23,136:INFO:Uploading model into container now
2024-05-17 19:54:23,137:INFO:_master_model_container: 2
2024-05-17 19:54:23,137:INFO:_display_container: 2
2024-05-17 19:54:23,137:INFO:Lasso(random_state=123)
2024-05-17 19:54:23,137:INFO:create_model() successfully completed......................................
2024-05-17 19:54:23,230:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:23,230:INFO:Creating metrics dataframe
2024-05-17 19:54:23,237:INFO:Initializing Ridge Regression
2024-05-17 19:54:23,237:INFO:Total runtime is 0.1957491119702657 minutes
2024-05-17 19:54:23,237:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:23,237:INFO:Initializing create_model()
2024-05-17 19:54:23,238:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:23,238:INFO:Checking exceptions
2024-05-17 19:54:23,238:INFO:Importing libraries
2024-05-17 19:54:23,238:INFO:Copying training dataset
2024-05-17 19:54:23,243:INFO:Defining folds
2024-05-17 19:54:23,243:INFO:Declaring metric variables
2024-05-17 19:54:23,243:INFO:Importing untrained model
2024-05-17 19:54:23,243:INFO:Ridge Regression Imported successfully
2024-05-17 19:54:23,244:INFO:Starting cross validation
2024-05-17 19:54:23,246:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:23,375:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.51522e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:54:23,381:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.52789e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:54:23,382:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.53513e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:54:23,388:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.52494e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:54:23,396:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.53013e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:54:23,409:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.53037e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:54:23,427:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.51185e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:54:23,477:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.50199e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:54:23,506:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.5354e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:54:23,518:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.5029e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:54:23,564:INFO:Calculating mean and std
2024-05-17 19:54:23,565:INFO:Creating metrics dataframe
2024-05-17 19:54:23,569:INFO:Uploading results into container
2024-05-17 19:54:23,570:INFO:Uploading model into container now
2024-05-17 19:54:23,571:INFO:_master_model_container: 3
2024-05-17 19:54:23,571:INFO:_display_container: 2
2024-05-17 19:54:23,571:INFO:Ridge(random_state=123)
2024-05-17 19:54:23,571:INFO:create_model() successfully completed......................................
2024-05-17 19:54:23,663:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:23,663:INFO:Creating metrics dataframe
2024-05-17 19:54:23,671:INFO:Initializing Elastic Net
2024-05-17 19:54:23,672:INFO:Total runtime is 0.20299638907114664 minutes
2024-05-17 19:54:23,672:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:23,672:INFO:Initializing create_model()
2024-05-17 19:54:23,673:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:23,673:INFO:Checking exceptions
2024-05-17 19:54:23,673:INFO:Importing libraries
2024-05-17 19:54:23,673:INFO:Copying training dataset
2024-05-17 19:54:23,678:INFO:Defining folds
2024-05-17 19:54:23,679:INFO:Declaring metric variables
2024-05-17 19:54:23,679:INFO:Importing untrained model
2024-05-17 19:54:23,680:INFO:Elastic Net Imported successfully
2024-05-17 19:54:23,680:INFO:Starting cross validation
2024-05-17 19:54:23,681:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:24,062:INFO:Calculating mean and std
2024-05-17 19:54:24,065:INFO:Creating metrics dataframe
2024-05-17 19:54:24,070:INFO:Uploading results into container
2024-05-17 19:54:24,071:INFO:Uploading model into container now
2024-05-17 19:54:24,071:INFO:_master_model_container: 4
2024-05-17 19:54:24,071:INFO:_display_container: 2
2024-05-17 19:54:24,072:INFO:ElasticNet(random_state=123)
2024-05-17 19:54:24,072:INFO:create_model() successfully completed......................................
2024-05-17 19:54:24,184:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:24,184:INFO:Creating metrics dataframe
2024-05-17 19:54:24,193:INFO:Initializing Least Angle Regression
2024-05-17 19:54:24,193:INFO:Total runtime is 0.21168191035588582 minutes
2024-05-17 19:54:24,193:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:24,195:INFO:Initializing create_model()
2024-05-17 19:54:24,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:24,195:INFO:Checking exceptions
2024-05-17 19:54:24,196:INFO:Importing libraries
2024-05-17 19:54:24,196:INFO:Copying training dataset
2024-05-17 19:54:24,205:INFO:Defining folds
2024-05-17 19:54:24,205:INFO:Declaring metric variables
2024-05-17 19:54:24,205:INFO:Importing untrained model
2024-05-17 19:54:24,206:INFO:Least Angle Regression Imported successfully
2024-05-17 19:54:24,206:INFO:Starting cross validation
2024-05-17 19:54:24,208:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:24,512:INFO:Calculating mean and std
2024-05-17 19:54:24,513:INFO:Creating metrics dataframe
2024-05-17 19:54:24,517:INFO:Uploading results into container
2024-05-17 19:54:24,518:INFO:Uploading model into container now
2024-05-17 19:54:24,519:INFO:_master_model_container: 5
2024-05-17 19:54:24,519:INFO:_display_container: 2
2024-05-17 19:54:24,519:INFO:Lars(random_state=123)
2024-05-17 19:54:24,519:INFO:create_model() successfully completed......................................
2024-05-17 19:54:24,624:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:24,624:INFO:Creating metrics dataframe
2024-05-17 19:54:24,632:INFO:Initializing Lasso Least Angle Regression
2024-05-17 19:54:24,632:INFO:Total runtime is 0.21899486382802327 minutes
2024-05-17 19:54:24,633:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:24,633:INFO:Initializing create_model()
2024-05-17 19:54:24,633:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:24,633:INFO:Checking exceptions
2024-05-17 19:54:24,633:INFO:Importing libraries
2024-05-17 19:54:24,633:INFO:Copying training dataset
2024-05-17 19:54:24,641:INFO:Defining folds
2024-05-17 19:54:24,641:INFO:Declaring metric variables
2024-05-17 19:54:24,641:INFO:Importing untrained model
2024-05-17 19:54:24,642:INFO:Lasso Least Angle Regression Imported successfully
2024-05-17 19:54:24,642:INFO:Starting cross validation
2024-05-17 19:54:24,643:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:24,906:INFO:Calculating mean and std
2024-05-17 19:54:24,907:INFO:Creating metrics dataframe
2024-05-17 19:54:24,911:INFO:Uploading results into container
2024-05-17 19:54:24,911:INFO:Uploading model into container now
2024-05-17 19:54:24,912:INFO:_master_model_container: 6
2024-05-17 19:54:24,912:INFO:_display_container: 2
2024-05-17 19:54:24,912:INFO:LassoLars(random_state=123)
2024-05-17 19:54:24,913:INFO:create_model() successfully completed......................................
2024-05-17 19:54:25,016:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:25,016:INFO:Creating metrics dataframe
2024-05-17 19:54:25,025:INFO:Initializing Orthogonal Matching Pursuit
2024-05-17 19:54:25,026:INFO:Total runtime is 0.22557185093561807 minutes
2024-05-17 19:54:25,026:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:25,026:INFO:Initializing create_model()
2024-05-17 19:54:25,027:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:25,027:INFO:Checking exceptions
2024-05-17 19:54:25,027:INFO:Importing libraries
2024-05-17 19:54:25,027:INFO:Copying training dataset
2024-05-17 19:54:25,035:INFO:Defining folds
2024-05-17 19:54:25,036:INFO:Declaring metric variables
2024-05-17 19:54:25,036:INFO:Importing untrained model
2024-05-17 19:54:25,036:INFO:Orthogonal Matching Pursuit Imported successfully
2024-05-17 19:54:25,037:INFO:Starting cross validation
2024-05-17 19:54:25,038:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:25,292:INFO:Calculating mean and std
2024-05-17 19:54:25,293:INFO:Creating metrics dataframe
2024-05-17 19:54:25,297:INFO:Uploading results into container
2024-05-17 19:54:25,298:INFO:Uploading model into container now
2024-05-17 19:54:25,298:INFO:_master_model_container: 7
2024-05-17 19:54:25,298:INFO:_display_container: 2
2024-05-17 19:54:25,298:INFO:OrthogonalMatchingPursuit()
2024-05-17 19:54:25,298:INFO:create_model() successfully completed......................................
2024-05-17 19:54:25,381:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:25,381:INFO:Creating metrics dataframe
2024-05-17 19:54:25,386:INFO:Initializing Bayesian Ridge
2024-05-17 19:54:25,386:INFO:Total runtime is 0.2315662860870361 minutes
2024-05-17 19:54:25,386:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:25,386:INFO:Initializing create_model()
2024-05-17 19:54:25,387:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:25,387:INFO:Checking exceptions
2024-05-17 19:54:25,387:INFO:Importing libraries
2024-05-17 19:54:25,387:INFO:Copying training dataset
2024-05-17 19:54:25,391:INFO:Defining folds
2024-05-17 19:54:25,392:INFO:Declaring metric variables
2024-05-17 19:54:25,393:INFO:Importing untrained model
2024-05-17 19:54:25,394:INFO:Bayesian Ridge Imported successfully
2024-05-17 19:54:25,395:INFO:Starting cross validation
2024-05-17 19:54:25,397:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:25,656:INFO:Calculating mean and std
2024-05-17 19:54:25,657:INFO:Creating metrics dataframe
2024-05-17 19:54:25,661:INFO:Uploading results into container
2024-05-17 19:54:25,661:INFO:Uploading model into container now
2024-05-17 19:54:25,662:INFO:_master_model_container: 8
2024-05-17 19:54:25,662:INFO:_display_container: 2
2024-05-17 19:54:25,663:INFO:BayesianRidge()
2024-05-17 19:54:25,663:INFO:create_model() successfully completed......................................
2024-05-17 19:54:25,748:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:25,749:INFO:Creating metrics dataframe
2024-05-17 19:54:25,753:INFO:Initializing Passive Aggressive Regressor
2024-05-17 19:54:25,754:INFO:Total runtime is 0.2376957297325134 minutes
2024-05-17 19:54:25,754:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:25,754:INFO:Initializing create_model()
2024-05-17 19:54:25,754:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:25,754:INFO:Checking exceptions
2024-05-17 19:54:25,754:INFO:Importing libraries
2024-05-17 19:54:25,754:INFO:Copying training dataset
2024-05-17 19:54:25,758:INFO:Defining folds
2024-05-17 19:54:25,759:INFO:Declaring metric variables
2024-05-17 19:54:25,759:INFO:Importing untrained model
2024-05-17 19:54:25,759:INFO:Passive Aggressive Regressor Imported successfully
2024-05-17 19:54:25,759:INFO:Starting cross validation
2024-05-17 19:54:25,760:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:26,016:INFO:Calculating mean and std
2024-05-17 19:54:26,017:INFO:Creating metrics dataframe
2024-05-17 19:54:26,021:INFO:Uploading results into container
2024-05-17 19:54:26,022:INFO:Uploading model into container now
2024-05-17 19:54:26,022:INFO:_master_model_container: 9
2024-05-17 19:54:26,022:INFO:_display_container: 2
2024-05-17 19:54:26,023:INFO:PassiveAggressiveRegressor(random_state=123)
2024-05-17 19:54:26,023:INFO:create_model() successfully completed......................................
2024-05-17 19:54:26,110:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:26,110:INFO:Creating metrics dataframe
2024-05-17 19:54:26,116:INFO:Initializing Huber Regressor
2024-05-17 19:54:26,116:INFO:Total runtime is 0.24373302062352495 minutes
2024-05-17 19:54:26,117:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:26,117:INFO:Initializing create_model()
2024-05-17 19:54:26,117:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:26,117:INFO:Checking exceptions
2024-05-17 19:54:26,117:INFO:Importing libraries
2024-05-17 19:54:26,117:INFO:Copying training dataset
2024-05-17 19:54:26,122:INFO:Defining folds
2024-05-17 19:54:26,122:INFO:Declaring metric variables
2024-05-17 19:54:26,122:INFO:Importing untrained model
2024-05-17 19:54:26,123:INFO:Huber Regressor Imported successfully
2024-05-17 19:54:26,123:INFO:Starting cross validation
2024-05-17 19:54:26,124:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:26,352:WARNING:create_model() for huber raised an exception or returned all 0.0, trying without fit_kwargs:
2024-05-17 19:54:26,354:WARNING:Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Orange\lib\site-packages\joblib\memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py", line 338, in fit
    raise ValueError(
ValueError: HuberRegressor convergence failed: l-BFGS-b solver terminated with ABNORMAL_TERMINATION_IN_LNSRCH


2024-05-17 19:54:26,354:INFO:Initializing create_model()
2024-05-17 19:54:26,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:26,354:INFO:Checking exceptions
2024-05-17 19:54:26,354:INFO:Importing libraries
2024-05-17 19:54:26,355:INFO:Copying training dataset
2024-05-17 19:54:26,360:INFO:Defining folds
2024-05-17 19:54:26,360:INFO:Declaring metric variables
2024-05-17 19:54:26,360:INFO:Importing untrained model
2024-05-17 19:54:26,361:INFO:Huber Regressor Imported successfully
2024-05-17 19:54:26,361:INFO:Starting cross validation
2024-05-17 19:54:26,362:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:26,604:ERROR:create_model() for huber raised an exception or returned all 0.0:
2024-05-17 19:54:26,605:ERROR:Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Orange\lib\site-packages\joblib\memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py", line 338, in fit
    raise ValueError(
ValueError: HuberRegressor convergence failed: l-BFGS-b solver terminated with ABNORMAL_TERMINATION_IN_LNSRCH


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Orange\lib\site-packages\joblib\memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py", line 338, in fit
    raise ValueError(
ValueError: HuberRegressor convergence failed: l-BFGS-b solver terminated with ABNORMAL_TERMINATION_IN_LNSRCH


2024-05-17 19:54:26,605:INFO:Initializing K Neighbors Regressor
2024-05-17 19:54:26,605:INFO:Total runtime is 0.25187659263610834 minutes
2024-05-17 19:54:26,606:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:26,606:INFO:Initializing create_model()
2024-05-17 19:54:26,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:26,606:INFO:Checking exceptions
2024-05-17 19:54:26,606:INFO:Importing libraries
2024-05-17 19:54:26,606:INFO:Copying training dataset
2024-05-17 19:54:26,611:INFO:Defining folds
2024-05-17 19:54:26,611:INFO:Declaring metric variables
2024-05-17 19:54:26,612:INFO:Importing untrained model
2024-05-17 19:54:26,613:INFO:K Neighbors Regressor Imported successfully
2024-05-17 19:54:26,613:INFO:Starting cross validation
2024-05-17 19:54:26,615:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:26,978:INFO:Calculating mean and std
2024-05-17 19:54:26,979:INFO:Creating metrics dataframe
2024-05-17 19:54:26,984:INFO:Uploading results into container
2024-05-17 19:54:26,984:INFO:Uploading model into container now
2024-05-17 19:54:26,985:INFO:_master_model_container: 10
2024-05-17 19:54:26,985:INFO:_display_container: 2
2024-05-17 19:54:26,985:INFO:KNeighborsRegressor(n_jobs=-1)
2024-05-17 19:54:26,985:INFO:create_model() successfully completed......................................
2024-05-17 19:54:27,092:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:27,092:INFO:Creating metrics dataframe
2024-05-17 19:54:27,101:INFO:Initializing Decision Tree Regressor
2024-05-17 19:54:27,101:INFO:Total runtime is 0.26014307737350456 minutes
2024-05-17 19:54:27,101:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:27,101:INFO:Initializing create_model()
2024-05-17 19:54:27,101:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:27,101:INFO:Checking exceptions
2024-05-17 19:54:27,101:INFO:Importing libraries
2024-05-17 19:54:27,102:INFO:Copying training dataset
2024-05-17 19:54:27,108:INFO:Defining folds
2024-05-17 19:54:27,108:INFO:Declaring metric variables
2024-05-17 19:54:27,108:INFO:Importing untrained model
2024-05-17 19:54:27,109:INFO:Decision Tree Regressor Imported successfully
2024-05-17 19:54:27,109:INFO:Starting cross validation
2024-05-17 19:54:27,111:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:27,487:INFO:Calculating mean and std
2024-05-17 19:54:27,488:INFO:Creating metrics dataframe
2024-05-17 19:54:27,491:INFO:Uploading results into container
2024-05-17 19:54:27,492:INFO:Uploading model into container now
2024-05-17 19:54:27,493:INFO:_master_model_container: 11
2024-05-17 19:54:27,493:INFO:_display_container: 2
2024-05-17 19:54:27,493:INFO:DecisionTreeRegressor(random_state=123)
2024-05-17 19:54:27,493:INFO:create_model() successfully completed......................................
2024-05-17 19:54:27,585:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:27,585:INFO:Creating metrics dataframe
2024-05-17 19:54:27,590:INFO:Initializing Random Forest Regressor
2024-05-17 19:54:27,591:INFO:Total runtime is 0.26831279198328645 minutes
2024-05-17 19:54:27,591:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:27,591:INFO:Initializing create_model()
2024-05-17 19:54:27,591:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:27,591:INFO:Checking exceptions
2024-05-17 19:54:27,591:INFO:Importing libraries
2024-05-17 19:54:27,591:INFO:Copying training dataset
2024-05-17 19:54:27,596:INFO:Defining folds
2024-05-17 19:54:27,597:INFO:Declaring metric variables
2024-05-17 19:54:27,597:INFO:Importing untrained model
2024-05-17 19:54:27,597:INFO:Random Forest Regressor Imported successfully
2024-05-17 19:54:27,598:INFO:Starting cross validation
2024-05-17 19:54:27,599:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:34,682:INFO:Calculating mean and std
2024-05-17 19:54:34,684:INFO:Creating metrics dataframe
2024-05-17 19:54:34,689:INFO:Uploading results into container
2024-05-17 19:54:34,690:INFO:Uploading model into container now
2024-05-17 19:54:34,691:INFO:_master_model_container: 12
2024-05-17 19:54:34,691:INFO:_display_container: 2
2024-05-17 19:54:34,691:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-05-17 19:54:34,691:INFO:create_model() successfully completed......................................
2024-05-17 19:54:34,803:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:34,803:INFO:Creating metrics dataframe
2024-05-17 19:54:34,810:INFO:Initializing Extra Trees Regressor
2024-05-17 19:54:34,811:INFO:Total runtime is 0.3886267662048339 minutes
2024-05-17 19:54:34,811:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:34,811:INFO:Initializing create_model()
2024-05-17 19:54:34,811:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:34,812:INFO:Checking exceptions
2024-05-17 19:54:34,812:INFO:Importing libraries
2024-05-17 19:54:34,812:INFO:Copying training dataset
2024-05-17 19:54:34,825:INFO:Defining folds
2024-05-17 19:54:34,826:INFO:Declaring metric variables
2024-05-17 19:54:34,826:INFO:Importing untrained model
2024-05-17 19:54:34,827:INFO:Extra Trees Regressor Imported successfully
2024-05-17 19:54:34,828:INFO:Starting cross validation
2024-05-17 19:54:34,831:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:38,985:INFO:Calculating mean and std
2024-05-17 19:54:38,987:INFO:Creating metrics dataframe
2024-05-17 19:54:38,996:INFO:Uploading results into container
2024-05-17 19:54:38,998:INFO:Uploading model into container now
2024-05-17 19:54:39,000:INFO:_master_model_container: 13
2024-05-17 19:54:39,000:INFO:_display_container: 2
2024-05-17 19:54:39,001:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 19:54:39,001:INFO:create_model() successfully completed......................................
2024-05-17 19:54:39,174:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:39,175:INFO:Creating metrics dataframe
2024-05-17 19:54:39,188:INFO:Initializing AdaBoost Regressor
2024-05-17 19:54:39,188:INFO:Total runtime is 0.46160434484481805 minutes
2024-05-17 19:54:39,189:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:39,189:INFO:Initializing create_model()
2024-05-17 19:54:39,189:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:39,190:INFO:Checking exceptions
2024-05-17 19:54:39,190:INFO:Importing libraries
2024-05-17 19:54:39,190:INFO:Copying training dataset
2024-05-17 19:54:39,197:INFO:Defining folds
2024-05-17 19:54:39,197:INFO:Declaring metric variables
2024-05-17 19:54:39,198:INFO:Importing untrained model
2024-05-17 19:54:39,198:INFO:AdaBoost Regressor Imported successfully
2024-05-17 19:54:39,199:INFO:Starting cross validation
2024-05-17 19:54:39,202:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:41,458:INFO:Calculating mean and std
2024-05-17 19:54:41,460:INFO:Creating metrics dataframe
2024-05-17 19:54:41,472:INFO:Uploading results into container
2024-05-17 19:54:41,473:INFO:Uploading model into container now
2024-05-17 19:54:41,473:INFO:_master_model_container: 14
2024-05-17 19:54:41,474:INFO:_display_container: 2
2024-05-17 19:54:41,474:INFO:AdaBoostRegressor(random_state=123)
2024-05-17 19:54:41,474:INFO:create_model() successfully completed......................................
2024-05-17 19:54:41,601:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:41,601:INFO:Creating metrics dataframe
2024-05-17 19:54:41,615:INFO:Initializing Gradient Boosting Regressor
2024-05-17 19:54:41,616:INFO:Total runtime is 0.5020587722460428 minutes
2024-05-17 19:54:41,616:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:41,616:INFO:Initializing create_model()
2024-05-17 19:54:41,616:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:41,616:INFO:Checking exceptions
2024-05-17 19:54:41,616:INFO:Importing libraries
2024-05-17 19:54:41,616:INFO:Copying training dataset
2024-05-17 19:54:41,627:INFO:Defining folds
2024-05-17 19:54:41,627:INFO:Declaring metric variables
2024-05-17 19:54:41,627:INFO:Importing untrained model
2024-05-17 19:54:41,628:INFO:Gradient Boosting Regressor Imported successfully
2024-05-17 19:54:41,628:INFO:Starting cross validation
2024-05-17 19:54:41,631:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:45,845:INFO:Calculating mean and std
2024-05-17 19:54:45,848:INFO:Creating metrics dataframe
2024-05-17 19:54:45,853:INFO:Uploading results into container
2024-05-17 19:54:45,854:INFO:Uploading model into container now
2024-05-17 19:54:45,855:INFO:_master_model_container: 15
2024-05-17 19:54:45,855:INFO:_display_container: 2
2024-05-17 19:54:45,856:INFO:GradientBoostingRegressor(random_state=123)
2024-05-17 19:54:45,856:INFO:create_model() successfully completed......................................
2024-05-17 19:54:45,990:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:45,990:INFO:Creating metrics dataframe
2024-05-17 19:54:46,005:INFO:Initializing Extreme Gradient Boosting
2024-05-17 19:54:46,005:INFO:Total runtime is 0.5752210974693297 minutes
2024-05-17 19:54:46,006:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:46,006:INFO:Initializing create_model()
2024-05-17 19:54:46,007:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:46,007:INFO:Checking exceptions
2024-05-17 19:54:46,007:INFO:Importing libraries
2024-05-17 19:54:46,007:INFO:Copying training dataset
2024-05-17 19:54:46,016:INFO:Defining folds
2024-05-17 19:54:46,017:INFO:Declaring metric variables
2024-05-17 19:54:46,017:INFO:Importing untrained model
2024-05-17 19:54:46,018:INFO:Extreme Gradient Boosting Imported successfully
2024-05-17 19:54:46,019:INFO:Starting cross validation
2024-05-17 19:54:46,020:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:49,320:INFO:Calculating mean and std
2024-05-17 19:54:49,322:INFO:Creating metrics dataframe
2024-05-17 19:54:49,334:INFO:Uploading results into container
2024-05-17 19:54:49,335:INFO:Uploading model into container now
2024-05-17 19:54:49,336:INFO:_master_model_container: 16
2024-05-17 19:54:49,336:INFO:_display_container: 2
2024-05-17 19:54:49,341:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             predictor=None, random_state=123, ...)
2024-05-17 19:54:49,341:INFO:create_model() successfully completed......................................
2024-05-17 19:54:49,459:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:49,459:INFO:Creating metrics dataframe
2024-05-17 19:54:49,471:INFO:Initializing Light Gradient Boosting Machine
2024-05-17 19:54:49,471:INFO:Total runtime is 0.6329847375551858 minutes
2024-05-17 19:54:49,472:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:49,472:INFO:Initializing create_model()
2024-05-17 19:54:49,473:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:49,473:INFO:Checking exceptions
2024-05-17 19:54:49,473:INFO:Importing libraries
2024-05-17 19:54:49,473:INFO:Copying training dataset
2024-05-17 19:54:49,487:INFO:Defining folds
2024-05-17 19:54:49,487:INFO:Declaring metric variables
2024-05-17 19:54:49,488:INFO:Importing untrained model
2024-05-17 19:54:49,490:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-17 19:54:49,492:INFO:Starting cross validation
2024-05-17 19:54:49,497:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:54:52,721:INFO:Calculating mean and std
2024-05-17 19:54:52,723:INFO:Creating metrics dataframe
2024-05-17 19:54:52,727:INFO:Uploading results into container
2024-05-17 19:54:52,728:INFO:Uploading model into container now
2024-05-17 19:54:52,729:INFO:_master_model_container: 17
2024-05-17 19:54:52,729:INFO:_display_container: 2
2024-05-17 19:54:52,730:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-05-17 19:54:52,730:INFO:create_model() successfully completed......................................
2024-05-17 19:54:52,849:INFO:SubProcess create_model() end ==================================
2024-05-17 19:54:52,849:INFO:Creating metrics dataframe
2024-05-17 19:54:52,860:INFO:Initializing CatBoost Regressor
2024-05-17 19:54:52,860:INFO:Total runtime is 0.6894680420557656 minutes
2024-05-17 19:54:52,862:INFO:SubProcess create_model() called ==================================
2024-05-17 19:54:52,863:INFO:Initializing create_model()
2024-05-17 19:54:52,863:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:54:52,864:INFO:Checking exceptions
2024-05-17 19:54:52,864:INFO:Importing libraries
2024-05-17 19:54:52,864:INFO:Copying training dataset
2024-05-17 19:54:52,873:INFO:Defining folds
2024-05-17 19:54:52,874:INFO:Declaring metric variables
2024-05-17 19:54:52,874:INFO:Importing untrained model
2024-05-17 19:54:52,876:INFO:CatBoost Regressor Imported successfully
2024-05-17 19:54:52,877:INFO:Starting cross validation
2024-05-17 19:54:52,879:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:55:13,342:INFO:Calculating mean and std
2024-05-17 19:55:13,344:INFO:Creating metrics dataframe
2024-05-17 19:55:13,353:INFO:Uploading results into container
2024-05-17 19:55:13,353:INFO:Uploading model into container now
2024-05-17 19:55:13,354:INFO:_master_model_container: 18
2024-05-17 19:55:13,354:INFO:_display_container: 2
2024-05-17 19:55:13,354:INFO:<catboost.core.CatBoostRegressor object at 0x000001A93643D190>
2024-05-17 19:55:13,354:INFO:create_model() successfully completed......................................
2024-05-17 19:55:13,484:INFO:SubProcess create_model() end ==================================
2024-05-17 19:55:13,485:INFO:Creating metrics dataframe
2024-05-17 19:55:13,500:INFO:Initializing Dummy Regressor
2024-05-17 19:55:13,501:INFO:Total runtime is 1.033488047122955 minutes
2024-05-17 19:55:13,501:INFO:SubProcess create_model() called ==================================
2024-05-17 19:55:13,502:INFO:Initializing create_model()
2024-05-17 19:55:13,503:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A9369989D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:55:13,503:INFO:Checking exceptions
2024-05-17 19:55:13,503:INFO:Importing libraries
2024-05-17 19:55:13,503:INFO:Copying training dataset
2024-05-17 19:55:13,516:INFO:Defining folds
2024-05-17 19:55:13,517:INFO:Declaring metric variables
2024-05-17 19:55:13,517:INFO:Importing untrained model
2024-05-17 19:55:13,517:INFO:Dummy Regressor Imported successfully
2024-05-17 19:55:13,517:INFO:Starting cross validation
2024-05-17 19:55:13,520:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:55:13,895:INFO:Calculating mean and std
2024-05-17 19:55:13,896:INFO:Creating metrics dataframe
2024-05-17 19:55:13,901:INFO:Uploading results into container
2024-05-17 19:55:13,902:INFO:Uploading model into container now
2024-05-17 19:55:13,903:INFO:_master_model_container: 19
2024-05-17 19:55:13,903:INFO:_display_container: 2
2024-05-17 19:55:13,903:INFO:DummyRegressor()
2024-05-17 19:55:13,903:INFO:create_model() successfully completed......................................
2024-05-17 19:55:14,015:INFO:SubProcess create_model() end ==================================
2024-05-17 19:55:14,015:INFO:Creating metrics dataframe
2024-05-17 19:55:14,029:INFO:Initializing create_model()
2024-05-17 19:55:14,030:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A8F1E4DE50>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:55:14,030:INFO:Checking exceptions
2024-05-17 19:55:14,031:INFO:Importing libraries
2024-05-17 19:55:14,032:INFO:Copying training dataset
2024-05-17 19:55:14,040:INFO:Defining folds
2024-05-17 19:55:14,040:INFO:Declaring metric variables
2024-05-17 19:55:14,040:INFO:Importing untrained model
2024-05-17 19:55:14,041:INFO:Declaring custom model
2024-05-17 19:55:14,042:INFO:Extra Trees Regressor Imported successfully
2024-05-17 19:55:14,045:INFO:Cross validation set to False
2024-05-17 19:55:14,045:INFO:Fitting Model
2024-05-17 19:55:14,619:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 19:55:14,619:INFO:create_model() successfully completed......................................
2024-05-17 19:55:14,808:INFO:_master_model_container: 19
2024-05-17 19:55:14,808:INFO:_display_container: 2
2024-05-17 19:55:14,809:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 19:55:14,809:INFO:compare_models() successfully completed......................................
2024-05-17 19:56:54,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 19:56:54,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 19:56:54,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 19:56:54,522:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 19:56:55,085:INFO:PyCaret RegressionExperiment
2024-05-17 19:56:55,085:INFO:Logging name: reg-default-name
2024-05-17 19:56:55,085:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-17 19:56:55,085:INFO:version 3.3.2
2024-05-17 19:56:55,085:INFO:Initializing setup()
2024-05-17 19:56:55,085:INFO:self.USI: 84bc
2024-05-17 19:56:55,085:INFO:self._variable_keys: {'target_param', 'gpu_param', 'logging_param', 'memory', 'y_train', 'exp_name_log', 'X_test', 'X', 'y', 'USI', 'y_test', 'transform_target_param', 'fold_groups_param', 'seed', 'X_train', 'idx', 'fold_shuffle_param', 'html_param', 'exp_id', 'gpu_n_jobs_param', 'log_plots_param', 'data', 'n_jobs_param', 'pipeline', 'fold_generator', '_available_plots', '_ml_usecase'}
2024-05-17 19:56:55,086:INFO:Checking environment
2024-05-17 19:56:55,086:INFO:python_version: 3.9.12
2024-05-17 19:56:55,086:INFO:python_build: ('main', 'Mar 24 2022 23:17:03')
2024-05-17 19:56:55,086:INFO:machine: AMD64
2024-05-17 19:56:55,087:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-17 19:56:55,105:INFO:Memory: svmem(total=16910155776, available=2483728384, percent=85.3, used=14426427392, free=2483728384)
2024-05-17 19:56:55,106:INFO:Physical Core: 4
2024-05-17 19:56:55,106:INFO:Logical Core: 8
2024-05-17 19:56:55,106:INFO:Checking libraries
2024-05-17 19:56:55,106:INFO:System:
2024-05-17 19:56:55,106:INFO:    python: 3.9.12 | packaged by conda-forge | (main, Mar 24 2022, 23:17:03) [MSC v.1929 64 bit (AMD64)]
2024-05-17 19:56:55,106:INFO:executable: c:\Program Files\Orange\python.exe
2024-05-17 19:56:55,106:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-17 19:56:55,106:INFO:PyCaret required dependencies:
2024-05-17 19:56:55,240:INFO:                 pip: 22.3.1
2024-05-17 19:56:55,240:INFO:          setuptools: 65.5.1
2024-05-17 19:56:55,240:INFO:             pycaret: 3.3.2
2024-05-17 19:56:55,240:INFO:             IPython: 8.4.0
2024-05-17 19:56:55,241:INFO:          ipywidgets: 7.7.1
2024-05-17 19:56:55,241:INFO:                tqdm: 4.66.2
2024-05-17 19:56:55,241:INFO:               numpy: 1.23.5
2024-05-17 19:56:55,241:INFO:              pandas: 1.4.4
2024-05-17 19:56:55,241:INFO:              jinja2: 3.1.2
2024-05-17 19:56:55,241:INFO:               scipy: 1.9.3
2024-05-17 19:56:55,241:INFO:              joblib: 1.2.0
2024-05-17 19:56:55,241:INFO:             sklearn: 1.1.3
2024-05-17 19:56:55,241:INFO:                pyod: 1.1.3
2024-05-17 19:56:55,241:INFO:            imblearn: 0.12.2
2024-05-17 19:56:55,241:INFO:   category_encoders: 2.6.3
2024-05-17 19:56:55,241:INFO:            lightgbm: 4.3.0
2024-05-17 19:56:55,243:INFO:               numba: 0.59.1
2024-05-17 19:56:55,243:INFO:            requests: 2.28.1
2024-05-17 19:56:55,243:INFO:          matplotlib: 3.6.2
2024-05-17 19:56:55,243:INFO:          scikitplot: 0.3.7
2024-05-17 19:56:55,243:INFO:         yellowbrick: 1.5
2024-05-17 19:56:55,243:INFO:              plotly: 5.11.0
2024-05-17 19:56:55,243:INFO:    plotly-resampler: Not installed
2024-05-17 19:56:55,243:INFO:             kaleido: 0.2.1
2024-05-17 19:56:55,243:INFO:           schemdraw: 0.15
2024-05-17 19:56:55,244:INFO:         statsmodels: 0.14.2
2024-05-17 19:56:55,244:INFO:              sktime: 0.26.0
2024-05-17 19:56:55,244:INFO:               tbats: 1.1.3
2024-05-17 19:56:55,244:INFO:            pmdarima: 2.0.4
2024-05-17 19:56:55,244:INFO:              psutil: 5.9.4
2024-05-17 19:56:55,244:INFO:          markupsafe: 2.1.2
2024-05-17 19:56:55,244:INFO:             pickle5: Not installed
2024-05-17 19:56:55,244:INFO:         cloudpickle: 3.0.0
2024-05-17 19:56:55,244:INFO:         deprecation: 2.1.0
2024-05-17 19:56:55,245:INFO:              xxhash: 3.4.1
2024-05-17 19:56:55,245:INFO:           wurlitzer: Not installed
2024-05-17 19:56:55,245:INFO:PyCaret optional dependencies:
2024-05-17 19:56:55,325:INFO:                shap: Not installed
2024-05-17 19:56:55,325:INFO:           interpret: Not installed
2024-05-17 19:56:55,325:INFO:                umap: Not installed
2024-05-17 19:56:55,325:INFO:     ydata_profiling: Not installed
2024-05-17 19:56:55,325:INFO:  explainerdashboard: Not installed
2024-05-17 19:56:55,326:INFO:             autoviz: Not installed
2024-05-17 19:56:55,331:INFO:           fairlearn: Not installed
2024-05-17 19:56:55,331:INFO:          deepchecks: Not installed
2024-05-17 19:56:55,332:INFO:             xgboost: 1.7.1
2024-05-17 19:56:55,332:INFO:            catboost: 1.1.1
2024-05-17 19:56:55,332:INFO:              kmodes: Not installed
2024-05-17 19:56:55,332:INFO:             mlxtend: Not installed
2024-05-17 19:56:55,332:INFO:       statsforecast: Not installed
2024-05-17 19:56:55,332:INFO:        tune_sklearn: Not installed
2024-05-17 19:56:55,333:INFO:                 ray: Not installed
2024-05-17 19:56:55,333:INFO:            hyperopt: Not installed
2024-05-17 19:56:55,333:INFO:              optuna: Not installed
2024-05-17 19:56:55,333:INFO:               skopt: Not installed
2024-05-17 19:56:55,334:INFO:              mlflow: Not installed
2024-05-17 19:56:55,334:INFO:              gradio: Not installed
2024-05-17 19:56:55,334:INFO:             fastapi: Not installed
2024-05-17 19:56:55,334:INFO:             uvicorn: Not installed
2024-05-17 19:56:55,334:INFO:              m2cgen: Not installed
2024-05-17 19:56:55,334:INFO:           evidently: Not installed
2024-05-17 19:56:55,334:INFO:               fugue: Not installed
2024-05-17 19:56:55,334:INFO:           streamlit: Not installed
2024-05-17 19:56:55,334:INFO:             prophet: Not installed
2024-05-17 19:56:55,334:INFO:None
2024-05-17 19:56:55,334:INFO:Set up data.
2024-05-17 19:56:55,368:INFO:Set up folding strategy.
2024-05-17 19:56:55,368:INFO:Set up train/test split.
2024-05-17 19:56:55,383:INFO:Set up index.
2024-05-17 19:56:55,384:INFO:Assigning column types.
2024-05-17 19:56:55,392:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-17 19:56:55,393:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-17 19:56:55,406:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 19:56:55,416:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:56:55,561:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:56:55,657:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:56:55,658:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:55,666:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:55,719:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-17 19:56:55,731:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 19:56:55,737:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:56:55,864:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:56:55,940:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:56:55,942:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:55,950:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:55,951:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-17 19:56:55,958:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 19:56:55,968:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:56:56,073:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:56:56,167:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:56:56,169:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:56,173:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:56,187:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 19:56:56,196:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:56:56,309:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:56:56,396:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:56:56,399:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:56,403:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:56,404:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-17 19:56:56,422:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:56:56,547:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:56:56,642:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:56:56,643:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:56,652:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:56,669:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 19:56:56,789:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:56:56,874:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:56:56,875:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:56,878:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:56,880:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-17 19:56:56,982:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:56:57,056:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:56:57,057:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:57,062:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:57,166:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:56:57,227:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 19:56:57,228:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:57,234:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:57,239:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-17 19:56:57,326:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:56:57,393:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:57,397:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:57,508:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 19:56:57,589:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:57,592:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:57,593:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-17 19:56:57,767:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:57,770:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:57,975:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:57,982:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:57,986:INFO:Preparing preprocessing pipeline...
2024-05-17 19:56:57,986:INFO:Set up simple imputation.
2024-05-17 19:56:57,989:INFO:Set up encoding of categorical features.
2024-05-17 19:56:58,065:INFO:Finished creating preprocessing pipeline.
2024-05-17 19:56:58,077:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'closeTime', 'count', 'openPrice',
                                             'openTime'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['symbol'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['symbol'],
                                    transformer=OneHotEncoder(cols=['symbol'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2024-05-17 19:56:58,077:INFO:Creating final display dataframe.
2024-05-17 19:56:58,383:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         lastPrice
2                   Target type        Regression
3           Original data shape         (9563, 9)
4        Transformed data shape         (9563, 9)
5   Transformed train set shape         (6694, 9)
6    Transformed test set shape         (2869, 9)
7              Numeric features                 7
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              84bc
2024-05-17 19:56:58,749:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:58,756:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:59,004:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 19:56:59,011:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 19:56:59,014:INFO:setup() successfully completed in 3.93s...............
2024-05-17 19:56:59,015:INFO:Initializing compare_models()
2024-05-17 19:56:59,016:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-05-17 19:56:59,017:INFO:Checking exceptions
2024-05-17 19:56:59,023:INFO:Preparing display monitor
2024-05-17 19:56:59,164:INFO:Initializing Linear Regression
2024-05-17 19:56:59,165:INFO:Total runtime is 8.43207041422526e-06 minutes
2024-05-17 19:56:59,174:INFO:SubProcess create_model() called ==================================
2024-05-17 19:56:59,175:INFO:Initializing create_model()
2024-05-17 19:56:59,175:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:56:59,177:INFO:Checking exceptions
2024-05-17 19:56:59,178:INFO:Importing libraries
2024-05-17 19:56:59,178:INFO:Copying training dataset
2024-05-17 19:56:59,193:INFO:Defining folds
2024-05-17 19:56:59,194:INFO:Declaring metric variables
2024-05-17 19:56:59,201:INFO:Importing untrained model
2024-05-17 19:56:59,221:INFO:Linear Regression Imported successfully
2024-05-17 19:56:59,241:INFO:Starting cross validation
2024-05-17 19:56:59,259:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:14,216:INFO:Calculating mean and std
2024-05-17 19:57:14,221:INFO:Creating metrics dataframe
2024-05-17 19:57:14,227:INFO:Uploading results into container
2024-05-17 19:57:14,228:INFO:Uploading model into container now
2024-05-17 19:57:14,229:INFO:_master_model_container: 1
2024-05-17 19:57:14,229:INFO:_display_container: 2
2024-05-17 19:57:14,230:INFO:LinearRegression(n_jobs=-1)
2024-05-17 19:57:14,231:INFO:create_model() successfully completed......................................
2024-05-17 19:57:14,366:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:14,367:INFO:Creating metrics dataframe
2024-05-17 19:57:14,397:INFO:Initializing Lasso Regression
2024-05-17 19:57:14,397:INFO:Total runtime is 0.2538758357365926 minutes
2024-05-17 19:57:14,411:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:14,413:INFO:Initializing create_model()
2024-05-17 19:57:14,414:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:14,416:INFO:Checking exceptions
2024-05-17 19:57:14,416:INFO:Importing libraries
2024-05-17 19:57:14,416:INFO:Copying training dataset
2024-05-17 19:57:14,455:INFO:Defining folds
2024-05-17 19:57:14,455:INFO:Declaring metric variables
2024-05-17 19:57:14,491:INFO:Importing untrained model
2024-05-17 19:57:14,545:INFO:Lasso Regression Imported successfully
2024-05-17 19:57:14,566:INFO:Starting cross validation
2024-05-17 19:57:14,593:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:15,117:INFO:Calculating mean and std
2024-05-17 19:57:15,121:INFO:Creating metrics dataframe
2024-05-17 19:57:15,125:INFO:Uploading results into container
2024-05-17 19:57:15,126:INFO:Uploading model into container now
2024-05-17 19:57:15,127:INFO:_master_model_container: 2
2024-05-17 19:57:15,127:INFO:_display_container: 2
2024-05-17 19:57:15,127:INFO:Lasso(random_state=123)
2024-05-17 19:57:15,127:INFO:create_model() successfully completed......................................
2024-05-17 19:57:15,226:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:15,226:INFO:Creating metrics dataframe
2024-05-17 19:57:15,243:INFO:Initializing Ridge Regression
2024-05-17 19:57:15,243:INFO:Total runtime is 0.26798133850097655 minutes
2024-05-17 19:57:15,251:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:15,252:INFO:Initializing create_model()
2024-05-17 19:57:15,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:15,253:INFO:Checking exceptions
2024-05-17 19:57:15,253:INFO:Importing libraries
2024-05-17 19:57:15,253:INFO:Copying training dataset
2024-05-17 19:57:15,259:INFO:Defining folds
2024-05-17 19:57:15,260:INFO:Declaring metric variables
2024-05-17 19:57:15,270:INFO:Importing untrained model
2024-05-17 19:57:15,277:INFO:Ridge Regression Imported successfully
2024-05-17 19:57:15,291:INFO:Starting cross validation
2024-05-17 19:57:15,294:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:15,441:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.52789e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:57:15,448:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.51185e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:57:15,454:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.51522e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:57:15,487:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.53513e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:57:15,508:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.52494e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:57:15,536:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.53013e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:57:15,567:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.50199e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:57:15,590:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.53037e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:57:15,631:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.5354e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:57:15,649:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.5029e-19): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 19:57:15,686:INFO:Calculating mean and std
2024-05-17 19:57:15,689:INFO:Creating metrics dataframe
2024-05-17 19:57:15,695:INFO:Uploading results into container
2024-05-17 19:57:15,697:INFO:Uploading model into container now
2024-05-17 19:57:15,697:INFO:_master_model_container: 3
2024-05-17 19:57:15,698:INFO:_display_container: 2
2024-05-17 19:57:15,698:INFO:Ridge(random_state=123)
2024-05-17 19:57:15,699:INFO:create_model() successfully completed......................................
2024-05-17 19:57:15,815:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:15,816:INFO:Creating metrics dataframe
2024-05-17 19:57:15,830:INFO:Initializing Elastic Net
2024-05-17 19:57:15,830:INFO:Total runtime is 0.277767550945282 minutes
2024-05-17 19:57:15,838:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:15,839:INFO:Initializing create_model()
2024-05-17 19:57:15,839:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:15,839:INFO:Checking exceptions
2024-05-17 19:57:15,839:INFO:Importing libraries
2024-05-17 19:57:15,839:INFO:Copying training dataset
2024-05-17 19:57:15,851:INFO:Defining folds
2024-05-17 19:57:15,851:INFO:Declaring metric variables
2024-05-17 19:57:15,857:INFO:Importing untrained model
2024-05-17 19:57:15,865:INFO:Elastic Net Imported successfully
2024-05-17 19:57:15,884:INFO:Starting cross validation
2024-05-17 19:57:15,887:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:16,588:INFO:Calculating mean and std
2024-05-17 19:57:16,590:INFO:Creating metrics dataframe
2024-05-17 19:57:16,598:INFO:Uploading results into container
2024-05-17 19:57:16,600:INFO:Uploading model into container now
2024-05-17 19:57:16,601:INFO:_master_model_container: 4
2024-05-17 19:57:16,602:INFO:_display_container: 2
2024-05-17 19:57:16,603:INFO:ElasticNet(random_state=123)
2024-05-17 19:57:16,604:INFO:create_model() successfully completed......................................
2024-05-17 19:57:16,816:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:16,816:INFO:Creating metrics dataframe
2024-05-17 19:57:16,856:INFO:Initializing Least Angle Regression
2024-05-17 19:57:16,856:INFO:Total runtime is 0.294861114025116 minutes
2024-05-17 19:57:16,868:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:16,869:INFO:Initializing create_model()
2024-05-17 19:57:16,873:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:16,875:INFO:Checking exceptions
2024-05-17 19:57:16,875:INFO:Importing libraries
2024-05-17 19:57:16,876:INFO:Copying training dataset
2024-05-17 19:57:16,894:INFO:Defining folds
2024-05-17 19:57:16,894:INFO:Declaring metric variables
2024-05-17 19:57:16,927:INFO:Importing untrained model
2024-05-17 19:57:16,940:INFO:Least Angle Regression Imported successfully
2024-05-17 19:57:16,963:INFO:Starting cross validation
2024-05-17 19:57:16,968:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:17,470:INFO:Calculating mean and std
2024-05-17 19:57:17,474:INFO:Creating metrics dataframe
2024-05-17 19:57:17,480:INFO:Uploading results into container
2024-05-17 19:57:17,482:INFO:Uploading model into container now
2024-05-17 19:57:17,483:INFO:_master_model_container: 5
2024-05-17 19:57:17,483:INFO:_display_container: 2
2024-05-17 19:57:17,484:INFO:Lars(random_state=123)
2024-05-17 19:57:17,484:INFO:create_model() successfully completed......................................
2024-05-17 19:57:17,682:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:17,682:INFO:Creating metrics dataframe
2024-05-17 19:57:17,710:INFO:Initializing Lasso Least Angle Regression
2024-05-17 19:57:17,711:INFO:Total runtime is 0.30910778840382896 minutes
2024-05-17 19:57:17,720:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:17,721:INFO:Initializing create_model()
2024-05-17 19:57:17,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:17,722:INFO:Checking exceptions
2024-05-17 19:57:17,722:INFO:Importing libraries
2024-05-17 19:57:17,722:INFO:Copying training dataset
2024-05-17 19:57:17,737:INFO:Defining folds
2024-05-17 19:57:17,738:INFO:Declaring metric variables
2024-05-17 19:57:17,752:INFO:Importing untrained model
2024-05-17 19:57:17,764:INFO:Lasso Least Angle Regression Imported successfully
2024-05-17 19:57:17,788:INFO:Starting cross validation
2024-05-17 19:57:17,793:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:18,274:INFO:Calculating mean and std
2024-05-17 19:57:18,276:INFO:Creating metrics dataframe
2024-05-17 19:57:18,283:INFO:Uploading results into container
2024-05-17 19:57:18,285:INFO:Uploading model into container now
2024-05-17 19:57:18,286:INFO:_master_model_container: 6
2024-05-17 19:57:18,287:INFO:_display_container: 2
2024-05-17 19:57:18,288:INFO:LassoLars(random_state=123)
2024-05-17 19:57:18,289:INFO:create_model() successfully completed......................................
2024-05-17 19:57:18,422:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:18,422:INFO:Creating metrics dataframe
2024-05-17 19:57:18,445:INFO:Initializing Orthogonal Matching Pursuit
2024-05-17 19:57:18,445:INFO:Total runtime is 0.32134307622909547 minutes
2024-05-17 19:57:18,456:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:18,457:INFO:Initializing create_model()
2024-05-17 19:57:18,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:18,457:INFO:Checking exceptions
2024-05-17 19:57:18,457:INFO:Importing libraries
2024-05-17 19:57:18,458:INFO:Copying training dataset
2024-05-17 19:57:18,478:INFO:Defining folds
2024-05-17 19:57:18,478:INFO:Declaring metric variables
2024-05-17 19:57:18,490:INFO:Importing untrained model
2024-05-17 19:57:18,503:INFO:Orthogonal Matching Pursuit Imported successfully
2024-05-17 19:57:18,526:INFO:Starting cross validation
2024-05-17 19:57:18,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:18,976:INFO:Calculating mean and std
2024-05-17 19:57:18,980:INFO:Creating metrics dataframe
2024-05-17 19:57:18,989:INFO:Uploading results into container
2024-05-17 19:57:18,990:INFO:Uploading model into container now
2024-05-17 19:57:18,991:INFO:_master_model_container: 7
2024-05-17 19:57:18,991:INFO:_display_container: 2
2024-05-17 19:57:18,992:INFO:OrthogonalMatchingPursuit()
2024-05-17 19:57:18,992:INFO:create_model() successfully completed......................................
2024-05-17 19:57:19,221:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:19,221:INFO:Creating metrics dataframe
2024-05-17 19:57:19,303:INFO:Initializing Bayesian Ridge
2024-05-17 19:57:19,304:INFO:Total runtime is 0.33566948572794597 minutes
2024-05-17 19:57:19,338:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:19,339:INFO:Initializing create_model()
2024-05-17 19:57:19,339:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:19,340:INFO:Checking exceptions
2024-05-17 19:57:19,340:INFO:Importing libraries
2024-05-17 19:57:19,341:INFO:Copying training dataset
2024-05-17 19:57:19,373:INFO:Defining folds
2024-05-17 19:57:19,373:INFO:Declaring metric variables
2024-05-17 19:57:19,388:INFO:Importing untrained model
2024-05-17 19:57:19,401:INFO:Bayesian Ridge Imported successfully
2024-05-17 19:57:19,433:INFO:Starting cross validation
2024-05-17 19:57:19,436:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:19,940:INFO:Calculating mean and std
2024-05-17 19:57:19,943:INFO:Creating metrics dataframe
2024-05-17 19:57:19,956:INFO:Uploading results into container
2024-05-17 19:57:19,957:INFO:Uploading model into container now
2024-05-17 19:57:19,958:INFO:_master_model_container: 8
2024-05-17 19:57:19,958:INFO:_display_container: 2
2024-05-17 19:57:19,959:INFO:BayesianRidge()
2024-05-17 19:57:19,960:INFO:create_model() successfully completed......................................
2024-05-17 19:57:20,137:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:20,138:INFO:Creating metrics dataframe
2024-05-17 19:57:20,177:INFO:Initializing Passive Aggressive Regressor
2024-05-17 19:57:20,178:INFO:Total runtime is 0.35023855765660605 minutes
2024-05-17 19:57:20,190:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:20,191:INFO:Initializing create_model()
2024-05-17 19:57:20,191:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:20,192:INFO:Checking exceptions
2024-05-17 19:57:20,192:INFO:Importing libraries
2024-05-17 19:57:20,192:INFO:Copying training dataset
2024-05-17 19:57:20,209:INFO:Defining folds
2024-05-17 19:57:20,210:INFO:Declaring metric variables
2024-05-17 19:57:20,231:INFO:Importing untrained model
2024-05-17 19:57:20,245:INFO:Passive Aggressive Regressor Imported successfully
2024-05-17 19:57:20,268:INFO:Starting cross validation
2024-05-17 19:57:20,273:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:20,716:INFO:Calculating mean and std
2024-05-17 19:57:20,721:INFO:Creating metrics dataframe
2024-05-17 19:57:20,728:INFO:Uploading results into container
2024-05-17 19:57:20,731:INFO:Uploading model into container now
2024-05-17 19:57:20,733:INFO:_master_model_container: 9
2024-05-17 19:57:20,738:INFO:_display_container: 2
2024-05-17 19:57:20,740:INFO:PassiveAggressiveRegressor(random_state=123)
2024-05-17 19:57:20,740:INFO:create_model() successfully completed......................................
2024-05-17 19:57:20,936:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:20,936:INFO:Creating metrics dataframe
2024-05-17 19:57:20,991:INFO:Initializing Huber Regressor
2024-05-17 19:57:20,991:INFO:Total runtime is 0.36377528111139934 minutes
2024-05-17 19:57:21,029:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:21,030:INFO:Initializing create_model()
2024-05-17 19:57:21,030:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:21,030:INFO:Checking exceptions
2024-05-17 19:57:21,031:INFO:Importing libraries
2024-05-17 19:57:21,031:INFO:Copying training dataset
2024-05-17 19:57:21,048:INFO:Defining folds
2024-05-17 19:57:21,049:INFO:Declaring metric variables
2024-05-17 19:57:21,064:INFO:Importing untrained model
2024-05-17 19:57:21,077:INFO:Huber Regressor Imported successfully
2024-05-17 19:57:21,098:INFO:Starting cross validation
2024-05-17 19:57:21,101:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:21,456:WARNING:create_model() for huber raised an exception or returned all 0.0, trying without fit_kwargs:
2024-05-17 19:57:21,458:WARNING:Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Orange\lib\site-packages\joblib\memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py", line 338, in fit
    raise ValueError(
ValueError: HuberRegressor convergence failed: l-BFGS-b solver terminated with ABNORMAL_TERMINATION_IN_LNSRCH


2024-05-17 19:57:21,459:INFO:Initializing create_model()
2024-05-17 19:57:21,459:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:21,459:INFO:Checking exceptions
2024-05-17 19:57:21,459:INFO:Importing libraries
2024-05-17 19:57:21,459:INFO:Copying training dataset
2024-05-17 19:57:21,469:INFO:Defining folds
2024-05-17 19:57:21,470:INFO:Declaring metric variables
2024-05-17 19:57:21,477:INFO:Importing untrained model
2024-05-17 19:57:21,490:INFO:Huber Regressor Imported successfully
2024-05-17 19:57:21,514:INFO:Starting cross validation
2024-05-17 19:57:21,518:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:21,885:ERROR:create_model() for huber raised an exception or returned all 0.0:
2024-05-17 19:57:21,886:ERROR:Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Orange\lib\site-packages\joblib\memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py", line 338, in fit
    raise ValueError(
ValueError: HuberRegressor convergence failed: l-BFGS-b solver terminated with ABNORMAL_TERMINATION_IN_LNSRCH


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Orange\lib\site-packages\joblib\memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py", line 338, in fit
    raise ValueError(
ValueError: HuberRegressor convergence failed: l-BFGS-b solver terminated with ABNORMAL_TERMINATION_IN_LNSRCH


2024-05-17 19:57:21,887:INFO:Initializing K Neighbors Regressor
2024-05-17 19:57:21,887:INFO:Total runtime is 0.3787113308906555 minutes
2024-05-17 19:57:21,894:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:21,895:INFO:Initializing create_model()
2024-05-17 19:57:21,895:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:21,896:INFO:Checking exceptions
2024-05-17 19:57:21,896:INFO:Importing libraries
2024-05-17 19:57:21,896:INFO:Copying training dataset
2024-05-17 19:57:21,910:INFO:Defining folds
2024-05-17 19:57:21,910:INFO:Declaring metric variables
2024-05-17 19:57:21,922:INFO:Importing untrained model
2024-05-17 19:57:21,939:INFO:K Neighbors Regressor Imported successfully
2024-05-17 19:57:21,962:INFO:Starting cross validation
2024-05-17 19:57:21,968:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:22,732:INFO:Calculating mean and std
2024-05-17 19:57:22,737:INFO:Creating metrics dataframe
2024-05-17 19:57:22,747:INFO:Uploading results into container
2024-05-17 19:57:22,751:INFO:Uploading model into container now
2024-05-17 19:57:22,752:INFO:_master_model_container: 10
2024-05-17 19:57:22,752:INFO:_display_container: 2
2024-05-17 19:57:22,753:INFO:KNeighborsRegressor(n_jobs=-1)
2024-05-17 19:57:22,753:INFO:create_model() successfully completed......................................
2024-05-17 19:57:22,910:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:22,911:INFO:Creating metrics dataframe
2024-05-17 19:57:22,940:INFO:Initializing Decision Tree Regressor
2024-05-17 19:57:22,940:INFO:Total runtime is 0.3962564945220947 minutes
2024-05-17 19:57:22,947:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:22,948:INFO:Initializing create_model()
2024-05-17 19:57:22,949:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:22,949:INFO:Checking exceptions
2024-05-17 19:57:22,949:INFO:Importing libraries
2024-05-17 19:57:22,949:INFO:Copying training dataset
2024-05-17 19:57:22,968:INFO:Defining folds
2024-05-17 19:57:22,968:INFO:Declaring metric variables
2024-05-17 19:57:22,986:INFO:Importing untrained model
2024-05-17 19:57:22,997:INFO:Decision Tree Regressor Imported successfully
2024-05-17 19:57:23,019:INFO:Starting cross validation
2024-05-17 19:57:23,024:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:23,820:INFO:Calculating mean and std
2024-05-17 19:57:23,834:INFO:Creating metrics dataframe
2024-05-17 19:57:23,855:INFO:Uploading results into container
2024-05-17 19:57:23,856:INFO:Uploading model into container now
2024-05-17 19:57:23,858:INFO:_master_model_container: 11
2024-05-17 19:57:23,858:INFO:_display_container: 2
2024-05-17 19:57:23,859:INFO:DecisionTreeRegressor(random_state=123)
2024-05-17 19:57:23,860:INFO:create_model() successfully completed......................................
2024-05-17 19:57:24,158:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:24,159:INFO:Creating metrics dataframe
2024-05-17 19:57:24,276:INFO:Initializing Random Forest Regressor
2024-05-17 19:57:24,276:INFO:Total runtime is 0.4185308535893758 minutes
2024-05-17 19:57:24,302:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:24,303:INFO:Initializing create_model()
2024-05-17 19:57:24,303:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:24,304:INFO:Checking exceptions
2024-05-17 19:57:24,304:INFO:Importing libraries
2024-05-17 19:57:24,304:INFO:Copying training dataset
2024-05-17 19:57:24,388:INFO:Defining folds
2024-05-17 19:57:24,388:INFO:Declaring metric variables
2024-05-17 19:57:24,410:INFO:Importing untrained model
2024-05-17 19:57:24,429:INFO:Random Forest Regressor Imported successfully
2024-05-17 19:57:24,552:INFO:Starting cross validation
2024-05-17 19:57:24,556:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:35,030:INFO:Calculating mean and std
2024-05-17 19:57:35,047:INFO:Creating metrics dataframe
2024-05-17 19:57:35,075:INFO:Uploading results into container
2024-05-17 19:57:35,076:INFO:Uploading model into container now
2024-05-17 19:57:35,077:INFO:_master_model_container: 12
2024-05-17 19:57:35,077:INFO:_display_container: 2
2024-05-17 19:57:35,078:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-05-17 19:57:35,078:INFO:create_model() successfully completed......................................
2024-05-17 19:57:35,294:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:35,295:INFO:Creating metrics dataframe
2024-05-17 19:57:35,336:INFO:Initializing Extra Trees Regressor
2024-05-17 19:57:35,337:INFO:Total runtime is 0.6028790672620137 minutes
2024-05-17 19:57:35,346:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:35,347:INFO:Initializing create_model()
2024-05-17 19:57:35,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:35,348:INFO:Checking exceptions
2024-05-17 19:57:35,348:INFO:Importing libraries
2024-05-17 19:57:35,349:INFO:Copying training dataset
2024-05-17 19:57:35,379:INFO:Defining folds
2024-05-17 19:57:35,382:INFO:Declaring metric variables
2024-05-17 19:57:35,400:INFO:Importing untrained model
2024-05-17 19:57:35,424:INFO:Extra Trees Regressor Imported successfully
2024-05-17 19:57:35,471:INFO:Starting cross validation
2024-05-17 19:57:35,476:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:40,992:INFO:Calculating mean and std
2024-05-17 19:57:40,997:INFO:Creating metrics dataframe
2024-05-17 19:57:41,007:INFO:Uploading results into container
2024-05-17 19:57:41,009:INFO:Uploading model into container now
2024-05-17 19:57:41,010:INFO:_master_model_container: 13
2024-05-17 19:57:41,010:INFO:_display_container: 2
2024-05-17 19:57:41,011:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 19:57:41,011:INFO:create_model() successfully completed......................................
2024-05-17 19:57:41,166:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:41,166:INFO:Creating metrics dataframe
2024-05-17 19:57:41,196:INFO:Initializing AdaBoost Regressor
2024-05-17 19:57:41,197:INFO:Total runtime is 0.7005509217580159 minutes
2024-05-17 19:57:41,209:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:41,209:INFO:Initializing create_model()
2024-05-17 19:57:41,210:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:41,210:INFO:Checking exceptions
2024-05-17 19:57:41,210:INFO:Importing libraries
2024-05-17 19:57:41,210:INFO:Copying training dataset
2024-05-17 19:57:41,224:INFO:Defining folds
2024-05-17 19:57:41,225:INFO:Declaring metric variables
2024-05-17 19:57:41,234:INFO:Importing untrained model
2024-05-17 19:57:41,248:INFO:AdaBoost Regressor Imported successfully
2024-05-17 19:57:41,265:INFO:Starting cross validation
2024-05-17 19:57:41,271:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:43,821:INFO:Calculating mean and std
2024-05-17 19:57:43,825:INFO:Creating metrics dataframe
2024-05-17 19:57:43,831:INFO:Uploading results into container
2024-05-17 19:57:43,832:INFO:Uploading model into container now
2024-05-17 19:57:43,833:INFO:_master_model_container: 14
2024-05-17 19:57:43,834:INFO:_display_container: 2
2024-05-17 19:57:43,835:INFO:AdaBoostRegressor(random_state=123)
2024-05-17 19:57:43,836:INFO:create_model() successfully completed......................................
2024-05-17 19:57:43,966:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:43,967:INFO:Creating metrics dataframe
2024-05-17 19:57:43,995:INFO:Initializing Gradient Boosting Regressor
2024-05-17 19:57:43,996:INFO:Total runtime is 0.7471957166989645 minutes
2024-05-17 19:57:44,005:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:44,005:INFO:Initializing create_model()
2024-05-17 19:57:44,006:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:44,006:INFO:Checking exceptions
2024-05-17 19:57:44,006:INFO:Importing libraries
2024-05-17 19:57:44,006:INFO:Copying training dataset
2024-05-17 19:57:44,023:INFO:Defining folds
2024-05-17 19:57:44,024:INFO:Declaring metric variables
2024-05-17 19:57:44,038:INFO:Importing untrained model
2024-05-17 19:57:44,052:INFO:Gradient Boosting Regressor Imported successfully
2024-05-17 19:57:44,076:INFO:Starting cross validation
2024-05-17 19:57:44,080:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:47,912:INFO:Calculating mean and std
2024-05-17 19:57:47,916:INFO:Creating metrics dataframe
2024-05-17 19:57:47,920:INFO:Uploading results into container
2024-05-17 19:57:47,922:INFO:Uploading model into container now
2024-05-17 19:57:47,924:INFO:_master_model_container: 15
2024-05-17 19:57:47,924:INFO:_display_container: 2
2024-05-17 19:57:47,926:INFO:GradientBoostingRegressor(random_state=123)
2024-05-17 19:57:47,926:INFO:create_model() successfully completed......................................
2024-05-17 19:57:48,031:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:48,031:INFO:Creating metrics dataframe
2024-05-17 19:57:48,053:INFO:Initializing Extreme Gradient Boosting
2024-05-17 19:57:48,054:INFO:Total runtime is 0.8148251374562582 minutes
2024-05-17 19:57:48,067:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:48,068:INFO:Initializing create_model()
2024-05-17 19:57:48,068:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:48,069:INFO:Checking exceptions
2024-05-17 19:57:48,069:INFO:Importing libraries
2024-05-17 19:57:48,069:INFO:Copying training dataset
2024-05-17 19:57:48,083:INFO:Defining folds
2024-05-17 19:57:48,083:INFO:Declaring metric variables
2024-05-17 19:57:48,093:INFO:Importing untrained model
2024-05-17 19:57:48,101:INFO:Extreme Gradient Boosting Imported successfully
2024-05-17 19:57:48,120:INFO:Starting cross validation
2024-05-17 19:57:48,126:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:51,087:INFO:Calculating mean and std
2024-05-17 19:57:51,090:INFO:Creating metrics dataframe
2024-05-17 19:57:51,101:INFO:Uploading results into container
2024-05-17 19:57:51,102:INFO:Uploading model into container now
2024-05-17 19:57:51,103:INFO:_master_model_container: 16
2024-05-17 19:57:51,103:INFO:_display_container: 2
2024-05-17 19:57:51,106:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             predictor=None, random_state=123, ...)
2024-05-17 19:57:51,106:INFO:create_model() successfully completed......................................
2024-05-17 19:57:51,258:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:51,258:INFO:Creating metrics dataframe
2024-05-17 19:57:51,294:INFO:Initializing Light Gradient Boosting Machine
2024-05-17 19:57:51,295:INFO:Total runtime is 0.868849511941274 minutes
2024-05-17 19:57:51,303:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:51,304:INFO:Initializing create_model()
2024-05-17 19:57:51,304:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:51,304:INFO:Checking exceptions
2024-05-17 19:57:51,304:INFO:Importing libraries
2024-05-17 19:57:51,304:INFO:Copying training dataset
2024-05-17 19:57:51,322:INFO:Defining folds
2024-05-17 19:57:51,322:INFO:Declaring metric variables
2024-05-17 19:57:51,334:INFO:Importing untrained model
2024-05-17 19:57:51,345:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-17 19:57:51,364:INFO:Starting cross validation
2024-05-17 19:57:51,368:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:57:56,986:INFO:Calculating mean and std
2024-05-17 19:57:56,990:INFO:Creating metrics dataframe
2024-05-17 19:57:56,999:INFO:Uploading results into container
2024-05-17 19:57:57,000:INFO:Uploading model into container now
2024-05-17 19:57:57,001:INFO:_master_model_container: 17
2024-05-17 19:57:57,001:INFO:_display_container: 2
2024-05-17 19:57:57,003:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-05-17 19:57:57,003:INFO:create_model() successfully completed......................................
2024-05-17 19:57:57,148:INFO:SubProcess create_model() end ==================================
2024-05-17 19:57:57,148:INFO:Creating metrics dataframe
2024-05-17 19:57:57,175:INFO:Initializing CatBoost Regressor
2024-05-17 19:57:57,176:INFO:Total runtime is 0.9668445507685344 minutes
2024-05-17 19:57:57,185:INFO:SubProcess create_model() called ==================================
2024-05-17 19:57:57,185:INFO:Initializing create_model()
2024-05-17 19:57:57,186:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:57:57,186:INFO:Checking exceptions
2024-05-17 19:57:57,186:INFO:Importing libraries
2024-05-17 19:57:57,186:INFO:Copying training dataset
2024-05-17 19:57:57,200:INFO:Defining folds
2024-05-17 19:57:57,201:INFO:Declaring metric variables
2024-05-17 19:57:57,212:INFO:Importing untrained model
2024-05-17 19:57:57,225:INFO:CatBoost Regressor Imported successfully
2024-05-17 19:57:57,255:INFO:Starting cross validation
2024-05-17 19:57:57,258:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:58:18,366:INFO:Calculating mean and std
2024-05-17 19:58:18,369:INFO:Creating metrics dataframe
2024-05-17 19:58:18,374:INFO:Uploading results into container
2024-05-17 19:58:18,377:INFO:Uploading model into container now
2024-05-17 19:58:18,378:INFO:_master_model_container: 18
2024-05-17 19:58:18,378:INFO:_display_container: 2
2024-05-17 19:58:18,378:INFO:<catboost.core.CatBoostRegressor object at 0x000001B8BC4C2790>
2024-05-17 19:58:18,379:INFO:create_model() successfully completed......................................
2024-05-17 19:58:18,534:INFO:SubProcess create_model() end ==================================
2024-05-17 19:58:18,534:INFO:Creating metrics dataframe
2024-05-17 19:58:18,555:INFO:Initializing Dummy Regressor
2024-05-17 19:58:18,555:INFO:Total runtime is 1.3231841325759888 minutes
2024-05-17 19:58:18,561:INFO:SubProcess create_model() called ==================================
2024-05-17 19:58:18,562:INFO:Initializing create_model()
2024-05-17 19:58:18,562:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B8BB0E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:58:18,562:INFO:Checking exceptions
2024-05-17 19:58:18,563:INFO:Importing libraries
2024-05-17 19:58:18,563:INFO:Copying training dataset
2024-05-17 19:58:18,571:INFO:Defining folds
2024-05-17 19:58:18,571:INFO:Declaring metric variables
2024-05-17 19:58:18,579:INFO:Importing untrained model
2024-05-17 19:58:18,587:INFO:Dummy Regressor Imported successfully
2024-05-17 19:58:18,609:INFO:Starting cross validation
2024-05-17 19:58:18,615:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 19:58:19,015:INFO:Calculating mean and std
2024-05-17 19:58:19,018:INFO:Creating metrics dataframe
2024-05-17 19:58:19,023:INFO:Uploading results into container
2024-05-17 19:58:19,024:INFO:Uploading model into container now
2024-05-17 19:58:19,026:INFO:_master_model_container: 19
2024-05-17 19:58:19,026:INFO:_display_container: 2
2024-05-17 19:58:19,027:INFO:DummyRegressor()
2024-05-17 19:58:19,027:INFO:create_model() successfully completed......................................
2024-05-17 19:58:19,149:INFO:SubProcess create_model() end ==================================
2024-05-17 19:58:19,149:INFO:Creating metrics dataframe
2024-05-17 19:58:19,196:INFO:Initializing create_model()
2024-05-17 19:58:19,197:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 19:58:19,197:INFO:Checking exceptions
2024-05-17 19:58:19,202:INFO:Importing libraries
2024-05-17 19:58:19,203:INFO:Copying training dataset
2024-05-17 19:58:19,212:INFO:Defining folds
2024-05-17 19:58:19,212:INFO:Declaring metric variables
2024-05-17 19:58:19,213:INFO:Importing untrained model
2024-05-17 19:58:19,214:INFO:Declaring custom model
2024-05-17 19:58:19,215:INFO:Extra Trees Regressor Imported successfully
2024-05-17 19:58:19,216:INFO:Cross validation set to False
2024-05-17 19:58:19,216:INFO:Fitting Model
2024-05-17 19:58:19,662:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 19:58:19,662:INFO:create_model() successfully completed......................................
2024-05-17 19:58:19,841:INFO:_master_model_container: 19
2024-05-17 19:58:19,841:INFO:_display_container: 2
2024-05-17 19:58:19,842:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 19:58:19,843:INFO:compare_models() successfully completed......................................
2024-05-17 19:59:43,759:INFO:Initializing evaluate_model()
2024-05-17 19:59:43,759:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-17 19:59:43,837:INFO:Initializing plot_model()
2024-05-17 19:59:43,837:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, system=True)
2024-05-17 19:59:43,837:INFO:Checking exceptions
2024-05-17 19:59:44,022:INFO:Preloading libraries
2024-05-17 19:59:44,563:INFO:Copying training dataset
2024-05-17 19:59:44,565:INFO:Plot type: pipeline
2024-05-17 19:59:44,903:INFO:Visual Rendered Successfully
2024-05-17 19:59:45,040:INFO:plot_model() successfully completed......................................
2024-05-17 19:59:54,661:INFO:Initializing plot_model()
2024-05-17 19:59:54,661:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, system=True)
2024-05-17 19:59:54,662:INFO:Checking exceptions
2024-05-17 19:59:54,700:INFO:Preloading libraries
2024-05-17 19:59:54,894:INFO:Copying training dataset
2024-05-17 19:59:54,894:INFO:Plot type: parameter
2024-05-17 19:59:54,901:INFO:Visual Rendered Successfully
2024-05-17 19:59:54,994:INFO:plot_model() successfully completed......................................
2024-05-17 19:59:59,837:INFO:Initializing plot_model()
2024-05-17 19:59:59,838:INFO:plot_model(plot=rfe, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, system=True)
2024-05-17 19:59:59,838:INFO:Checking exceptions
2024-05-17 19:59:59,887:INFO:Preloading libraries
2024-05-17 20:00:00,094:INFO:Copying training dataset
2024-05-17 20:00:00,094:INFO:Plot type: rfe
2024-05-17 20:00:00,308:INFO:Fitting Model
2024-05-17 20:02:56,519:INFO:Initializing plot_model()
2024-05-17 20:02:56,519:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, system=True)
2024-05-17 20:02:56,519:INFO:Checking exceptions
2024-05-17 20:02:56,558:INFO:Preloading libraries
2024-05-17 20:02:56,716:INFO:Copying training dataset
2024-05-17 20:02:56,716:INFO:Plot type: residuals
2024-05-17 20:02:57,017:INFO:Fitting Model
2024-05-17 20:02:57,017:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names
  warnings.warn(

2024-05-17 20:02:57,224:INFO:Scoring test/hold-out set
2024-05-17 20:02:58,809:INFO:Visual Rendered Successfully
2024-05-17 20:02:58,948:INFO:plot_model() successfully completed......................................
2024-05-17 20:02:59,344:INFO:Initializing plot_model()
2024-05-17 20:02:59,345:INFO:plot_model(plot=residuals_interactive, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B8325E1DC0>, system=True)
2024-05-17 20:02:59,345:INFO:Checking exceptions
2024-05-17 20:02:59,381:INFO:Preloading libraries
2024-05-17 20:02:59,476:INFO:Copying training dataset
2024-05-17 20:02:59,477:INFO:Plot type: residuals_interactive
2024-05-17 20:03:00,018:INFO:Calculated model residuals
2024-05-17 20:03:39,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 20:03:39,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 20:03:39,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 20:03:39,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 20:03:40,289:INFO:PyCaret RegressionExperiment
2024-05-17 20:03:40,289:INFO:Logging name: reg-default-name
2024-05-17 20:03:40,289:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-17 20:03:40,289:INFO:version 3.3.2
2024-05-17 20:03:40,289:INFO:Initializing setup()
2024-05-17 20:03:40,289:INFO:self.USI: 075d
2024-05-17 20:03:40,289:INFO:self._variable_keys: {'exp_id', 'fold_groups_param', 'gpu_param', 'n_jobs_param', 'y_train', 'fold_shuffle_param', '_available_plots', 'seed', 'pipeline', 'target_param', 'data', 'log_plots_param', 'X', 'X_train', 'logging_param', 'y_test', 'gpu_n_jobs_param', 'transform_target_param', 'idx', '_ml_usecase', 'exp_name_log', 'fold_generator', 'X_test', 'USI', 'y', 'html_param', 'memory'}
2024-05-17 20:03:40,289:INFO:Checking environment
2024-05-17 20:03:40,289:INFO:python_version: 3.9.12
2024-05-17 20:03:40,289:INFO:python_build: ('main', 'Mar 24 2022 23:17:03')
2024-05-17 20:03:40,290:INFO:machine: AMD64
2024-05-17 20:03:40,290:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-17 20:03:40,301:INFO:Memory: svmem(total=16910155776, available=3437654016, percent=79.7, used=13472501760, free=3437654016)
2024-05-17 20:03:40,301:INFO:Physical Core: 4
2024-05-17 20:03:40,301:INFO:Logical Core: 8
2024-05-17 20:03:40,301:INFO:Checking libraries
2024-05-17 20:03:40,301:INFO:System:
2024-05-17 20:03:40,301:INFO:    python: 3.9.12 | packaged by conda-forge | (main, Mar 24 2022, 23:17:03) [MSC v.1929 64 bit (AMD64)]
2024-05-17 20:03:40,301:INFO:executable: c:\Program Files\Orange\python.exe
2024-05-17 20:03:40,301:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-17 20:03:40,301:INFO:PyCaret required dependencies:
2024-05-17 20:03:40,374:INFO:                 pip: 22.3.1
2024-05-17 20:03:40,374:INFO:          setuptools: 65.5.1
2024-05-17 20:03:40,374:INFO:             pycaret: 3.3.2
2024-05-17 20:03:40,374:INFO:             IPython: 8.4.0
2024-05-17 20:03:40,374:INFO:          ipywidgets: 7.7.1
2024-05-17 20:03:40,374:INFO:                tqdm: 4.66.2
2024-05-17 20:03:40,374:INFO:               numpy: 1.23.5
2024-05-17 20:03:40,374:INFO:              pandas: 1.4.4
2024-05-17 20:03:40,374:INFO:              jinja2: 3.1.2
2024-05-17 20:03:40,374:INFO:               scipy: 1.9.3
2024-05-17 20:03:40,374:INFO:              joblib: 1.2.0
2024-05-17 20:03:40,374:INFO:             sklearn: 1.1.3
2024-05-17 20:03:40,375:INFO:                pyod: 1.1.3
2024-05-17 20:03:40,375:INFO:            imblearn: 0.12.2
2024-05-17 20:03:40,375:INFO:   category_encoders: 2.6.3
2024-05-17 20:03:40,375:INFO:            lightgbm: 4.3.0
2024-05-17 20:03:40,375:INFO:               numba: 0.59.1
2024-05-17 20:03:40,375:INFO:            requests: 2.28.1
2024-05-17 20:03:40,375:INFO:          matplotlib: 3.6.2
2024-05-17 20:03:40,375:INFO:          scikitplot: 0.3.7
2024-05-17 20:03:40,375:INFO:         yellowbrick: 1.5
2024-05-17 20:03:40,375:INFO:              plotly: 5.11.0
2024-05-17 20:03:40,375:INFO:    plotly-resampler: Not installed
2024-05-17 20:03:40,375:INFO:             kaleido: 0.2.1
2024-05-17 20:03:40,375:INFO:           schemdraw: 0.15
2024-05-17 20:03:40,375:INFO:         statsmodels: 0.14.2
2024-05-17 20:03:40,375:INFO:              sktime: 0.26.0
2024-05-17 20:03:40,375:INFO:               tbats: 1.1.3
2024-05-17 20:03:40,376:INFO:            pmdarima: 2.0.4
2024-05-17 20:03:40,376:INFO:              psutil: 5.9.4
2024-05-17 20:03:40,376:INFO:          markupsafe: 2.1.2
2024-05-17 20:03:40,376:INFO:             pickle5: Not installed
2024-05-17 20:03:40,376:INFO:         cloudpickle: 3.0.0
2024-05-17 20:03:40,376:INFO:         deprecation: 2.1.0
2024-05-17 20:03:40,376:INFO:              xxhash: 3.4.1
2024-05-17 20:03:40,376:INFO:           wurlitzer: Not installed
2024-05-17 20:03:40,376:INFO:PyCaret optional dependencies:
2024-05-17 20:03:40,442:INFO:                shap: Not installed
2024-05-17 20:03:40,442:INFO:           interpret: Not installed
2024-05-17 20:03:40,442:INFO:                umap: Not installed
2024-05-17 20:03:40,442:INFO:     ydata_profiling: Not installed
2024-05-17 20:03:40,442:INFO:  explainerdashboard: Not installed
2024-05-17 20:03:40,442:INFO:             autoviz: Not installed
2024-05-17 20:03:40,442:INFO:           fairlearn: Not installed
2024-05-17 20:03:40,442:INFO:          deepchecks: Not installed
2024-05-17 20:03:40,443:INFO:             xgboost: 1.7.1
2024-05-17 20:03:40,443:INFO:            catboost: 1.1.1
2024-05-17 20:03:40,443:INFO:              kmodes: Not installed
2024-05-17 20:03:40,443:INFO:             mlxtend: Not installed
2024-05-17 20:03:40,443:INFO:       statsforecast: Not installed
2024-05-17 20:03:40,443:INFO:        tune_sklearn: Not installed
2024-05-17 20:03:40,443:INFO:                 ray: Not installed
2024-05-17 20:03:40,443:INFO:            hyperopt: Not installed
2024-05-17 20:03:40,443:INFO:              optuna: Not installed
2024-05-17 20:03:40,443:INFO:               skopt: Not installed
2024-05-17 20:03:40,443:INFO:              mlflow: Not installed
2024-05-17 20:03:40,443:INFO:              gradio: Not installed
2024-05-17 20:03:40,443:INFO:             fastapi: Not installed
2024-05-17 20:03:40,443:INFO:             uvicorn: Not installed
2024-05-17 20:03:40,443:INFO:              m2cgen: Not installed
2024-05-17 20:03:40,443:INFO:           evidently: Not installed
2024-05-17 20:03:40,443:INFO:               fugue: Not installed
2024-05-17 20:03:40,443:INFO:           streamlit: Not installed
2024-05-17 20:03:40,443:INFO:             prophet: Not installed
2024-05-17 20:03:40,443:INFO:None
2024-05-17 20:03:40,444:INFO:Set up data.
2024-05-17 20:03:40,455:INFO:Set up folding strategy.
2024-05-17 20:03:40,455:INFO:Set up train/test split.
2024-05-17 20:03:40,461:INFO:Set up index.
2024-05-17 20:03:40,461:INFO:Assigning column types.
2024-05-17 20:03:40,469:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-17 20:03:40,470:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-17 20:03:40,486:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 20:03:40,506:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:03:40,755:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:03:40,933:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:03:40,935:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:40,945:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:40,984:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-17 20:03:40,990:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 20:03:40,999:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,085:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,142:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,143:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:41,146:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:41,148:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-17 20:03:41,153:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,158:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,231:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,296:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,299:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:41,305:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:41,313:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,320:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,411:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,493:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,495:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:41,499:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:41,500:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-17 20:03:41,513:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,598:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,667:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,669:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:41,673:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:41,686:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,772:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,837:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:03:41,839:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:41,844:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:41,845:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-17 20:03:41,948:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:03:42,012:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:03:42,014:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:42,017:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:42,112:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:03:42,175:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:03:42,176:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:42,181:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:42,184:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-17 20:03:42,272:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:03:42,333:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:42,336:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:42,433:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:03:42,496:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:42,500:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:42,501:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-17 20:03:42,651:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:42,654:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:42,829:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:42,834:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:42,837:INFO:Preparing preprocessing pipeline...
2024-05-17 20:03:42,837:INFO:Set up simple imputation.
2024-05-17 20:03:42,861:INFO:Finished creating preprocessing pipeline.
2024-05-17 20:03:42,871:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lowPrice', 'highPrice',
                                             'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-05-17 20:03:42,871:INFO:Creating final display dataframe.
2024-05-17 20:03:42,961:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         lastPrice
2                   Target type        Regression
3           Original data shape         (9563, 9)
4        Transformed data shape         (9563, 4)
5   Transformed train set shape         (6694, 4)
6    Transformed test set shape         (2869, 4)
7               Ignore features                 5
8              Numeric features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              075d
2024-05-17 20:03:43,128:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:43,131:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:43,291:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:03:43,295:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:03:43,296:INFO:setup() successfully completed in 3.01s...............
2024-05-17 20:03:43,297:INFO:Initializing compare_models()
2024-05-17 20:03:43,297:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-05-17 20:03:43,297:INFO:Checking exceptions
2024-05-17 20:03:43,301:INFO:Preparing display monitor
2024-05-17 20:03:43,361:INFO:Initializing Linear Regression
2024-05-17 20:03:43,361:INFO:Total runtime is 0.0 minutes
2024-05-17 20:03:43,370:INFO:SubProcess create_model() called ==================================
2024-05-17 20:03:43,370:INFO:Initializing create_model()
2024-05-17 20:03:43,370:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:03:43,370:INFO:Checking exceptions
2024-05-17 20:03:43,370:INFO:Importing libraries
2024-05-17 20:03:43,371:INFO:Copying training dataset
2024-05-17 20:03:43,378:INFO:Defining folds
2024-05-17 20:03:43,379:INFO:Declaring metric variables
2024-05-17 20:03:43,388:INFO:Importing untrained model
2024-05-17 20:03:43,393:INFO:Linear Regression Imported successfully
2024-05-17 20:03:43,413:INFO:Starting cross validation
2024-05-17 20:03:43,478:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:03:55,062:INFO:Calculating mean and std
2024-05-17 20:03:55,067:INFO:Creating metrics dataframe
2024-05-17 20:03:55,077:INFO:Uploading results into container
2024-05-17 20:03:55,077:INFO:Uploading model into container now
2024-05-17 20:03:55,079:INFO:_master_model_container: 1
2024-05-17 20:03:55,081:INFO:_display_container: 2
2024-05-17 20:03:55,082:INFO:LinearRegression(n_jobs=-1)
2024-05-17 20:03:55,082:INFO:create_model() successfully completed......................................
2024-05-17 20:03:55,246:INFO:SubProcess create_model() end ==================================
2024-05-17 20:03:55,247:INFO:Creating metrics dataframe
2024-05-17 20:03:55,269:INFO:Initializing Lasso Regression
2024-05-17 20:03:55,269:INFO:Total runtime is 0.19846355120340983 minutes
2024-05-17 20:03:55,277:INFO:SubProcess create_model() called ==================================
2024-05-17 20:03:55,281:INFO:Initializing create_model()
2024-05-17 20:03:55,281:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:03:55,281:INFO:Checking exceptions
2024-05-17 20:03:55,281:INFO:Importing libraries
2024-05-17 20:03:55,281:INFO:Copying training dataset
2024-05-17 20:03:55,293:INFO:Defining folds
2024-05-17 20:03:55,293:INFO:Declaring metric variables
2024-05-17 20:03:55,305:INFO:Importing untrained model
2024-05-17 20:03:55,320:INFO:Lasso Regression Imported successfully
2024-05-17 20:03:55,340:INFO:Starting cross validation
2024-05-17 20:03:55,343:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:03:55,518:INFO:Calculating mean and std
2024-05-17 20:03:55,522:INFO:Creating metrics dataframe
2024-05-17 20:03:55,533:INFO:Uploading results into container
2024-05-17 20:03:55,535:INFO:Uploading model into container now
2024-05-17 20:03:55,537:INFO:_master_model_container: 2
2024-05-17 20:03:55,538:INFO:_display_container: 2
2024-05-17 20:03:55,539:INFO:Lasso(random_state=123)
2024-05-17 20:03:55,539:INFO:create_model() successfully completed......................................
2024-05-17 20:03:55,687:INFO:SubProcess create_model() end ==================================
2024-05-17 20:03:55,688:INFO:Creating metrics dataframe
2024-05-17 20:03:55,710:INFO:Initializing Ridge Regression
2024-05-17 20:03:55,710:INFO:Total runtime is 0.20581536690394084 minutes
2024-05-17 20:03:55,720:INFO:SubProcess create_model() called ==================================
2024-05-17 20:03:55,720:INFO:Initializing create_model()
2024-05-17 20:03:55,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:03:55,721:INFO:Checking exceptions
2024-05-17 20:03:55,721:INFO:Importing libraries
2024-05-17 20:03:55,722:INFO:Copying training dataset
2024-05-17 20:03:55,732:INFO:Defining folds
2024-05-17 20:03:55,733:INFO:Declaring metric variables
2024-05-17 20:03:55,742:INFO:Importing untrained model
2024-05-17 20:03:55,753:INFO:Ridge Regression Imported successfully
2024-05-17 20:03:55,781:INFO:Starting cross validation
2024-05-17 20:03:55,785:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:03:55,931:INFO:Calculating mean and std
2024-05-17 20:03:55,935:INFO:Creating metrics dataframe
2024-05-17 20:03:55,942:INFO:Uploading results into container
2024-05-17 20:03:55,944:INFO:Uploading model into container now
2024-05-17 20:03:55,947:INFO:_master_model_container: 3
2024-05-17 20:03:55,947:INFO:_display_container: 2
2024-05-17 20:03:55,948:INFO:Ridge(random_state=123)
2024-05-17 20:03:55,948:INFO:create_model() successfully completed......................................
2024-05-17 20:03:56,063:INFO:SubProcess create_model() end ==================================
2024-05-17 20:03:56,064:INFO:Creating metrics dataframe
2024-05-17 20:03:56,079:INFO:Initializing Elastic Net
2024-05-17 20:03:56,079:INFO:Total runtime is 0.21197220881779988 minutes
2024-05-17 20:03:56,085:INFO:SubProcess create_model() called ==================================
2024-05-17 20:03:56,085:INFO:Initializing create_model()
2024-05-17 20:03:56,085:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:03:56,085:INFO:Checking exceptions
2024-05-17 20:03:56,086:INFO:Importing libraries
2024-05-17 20:03:56,086:INFO:Copying training dataset
2024-05-17 20:03:56,103:INFO:Defining folds
2024-05-17 20:03:56,103:INFO:Declaring metric variables
2024-05-17 20:03:56,110:INFO:Importing untrained model
2024-05-17 20:03:56,121:INFO:Elastic Net Imported successfully
2024-05-17 20:03:56,137:INFO:Starting cross validation
2024-05-17 20:03:56,138:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:03:56,256:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.522e+04, tolerance: 1.725e+04
  model = cd_fast.enet_coordinate_descent(

2024-05-17 20:03:56,288:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.031e+04, tolerance: 1.733e+04
  model = cd_fast.enet_coordinate_descent(

2024-05-17 20:03:56,305:INFO:Calculating mean and std
2024-05-17 20:03:56,307:INFO:Creating metrics dataframe
2024-05-17 20:03:56,312:INFO:Uploading results into container
2024-05-17 20:03:56,315:INFO:Uploading model into container now
2024-05-17 20:03:56,316:INFO:_master_model_container: 4
2024-05-17 20:03:56,316:INFO:_display_container: 2
2024-05-17 20:03:56,317:INFO:ElasticNet(random_state=123)
2024-05-17 20:03:56,318:INFO:create_model() successfully completed......................................
2024-05-17 20:03:56,423:INFO:SubProcess create_model() end ==================================
2024-05-17 20:03:56,423:INFO:Creating metrics dataframe
2024-05-17 20:03:56,438:INFO:Initializing Least Angle Regression
2024-05-17 20:03:56,438:INFO:Total runtime is 0.21794577836990356 minutes
2024-05-17 20:03:56,443:INFO:SubProcess create_model() called ==================================
2024-05-17 20:03:56,443:INFO:Initializing create_model()
2024-05-17 20:03:56,443:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:03:56,444:INFO:Checking exceptions
2024-05-17 20:03:56,444:INFO:Importing libraries
2024-05-17 20:03:56,444:INFO:Copying training dataset
2024-05-17 20:03:56,453:INFO:Defining folds
2024-05-17 20:03:56,453:INFO:Declaring metric variables
2024-05-17 20:03:56,460:INFO:Importing untrained model
2024-05-17 20:03:56,469:INFO:Least Angle Regression Imported successfully
2024-05-17 20:03:56,482:INFO:Starting cross validation
2024-05-17 20:03:56,485:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:03:56,609:INFO:Calculating mean and std
2024-05-17 20:03:56,611:INFO:Creating metrics dataframe
2024-05-17 20:03:56,619:INFO:Uploading results into container
2024-05-17 20:03:56,620:INFO:Uploading model into container now
2024-05-17 20:03:56,620:INFO:_master_model_container: 5
2024-05-17 20:03:56,621:INFO:_display_container: 2
2024-05-17 20:03:56,621:INFO:Lars(random_state=123)
2024-05-17 20:03:56,621:INFO:create_model() successfully completed......................................
2024-05-17 20:03:56,721:INFO:SubProcess create_model() end ==================================
2024-05-17 20:03:56,721:INFO:Creating metrics dataframe
2024-05-17 20:03:56,736:INFO:Initializing Lasso Least Angle Regression
2024-05-17 20:03:56,736:INFO:Total runtime is 0.22292022307713827 minutes
2024-05-17 20:03:56,740:INFO:SubProcess create_model() called ==================================
2024-05-17 20:03:56,740:INFO:Initializing create_model()
2024-05-17 20:03:56,741:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:03:56,741:INFO:Checking exceptions
2024-05-17 20:03:56,741:INFO:Importing libraries
2024-05-17 20:03:56,741:INFO:Copying training dataset
2024-05-17 20:03:56,751:INFO:Defining folds
2024-05-17 20:03:56,752:INFO:Declaring metric variables
2024-05-17 20:03:56,792:INFO:Importing untrained model
2024-05-17 20:03:56,803:INFO:Lasso Least Angle Regression Imported successfully
2024-05-17 20:03:56,821:INFO:Starting cross validation
2024-05-17 20:03:56,823:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:03:56,955:INFO:Calculating mean and std
2024-05-17 20:03:56,956:INFO:Creating metrics dataframe
2024-05-17 20:03:56,961:INFO:Uploading results into container
2024-05-17 20:03:56,963:INFO:Uploading model into container now
2024-05-17 20:03:56,965:INFO:_master_model_container: 6
2024-05-17 20:03:56,966:INFO:_display_container: 2
2024-05-17 20:03:56,967:INFO:LassoLars(random_state=123)
2024-05-17 20:03:56,967:INFO:create_model() successfully completed......................................
2024-05-17 20:03:57,067:INFO:SubProcess create_model() end ==================================
2024-05-17 20:03:57,067:INFO:Creating metrics dataframe
2024-05-17 20:03:57,081:INFO:Initializing Orthogonal Matching Pursuit
2024-05-17 20:03:57,082:INFO:Total runtime is 0.22868909041086832 minutes
2024-05-17 20:03:57,086:INFO:SubProcess create_model() called ==================================
2024-05-17 20:03:57,087:INFO:Initializing create_model()
2024-05-17 20:03:57,087:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:03:57,087:INFO:Checking exceptions
2024-05-17 20:03:57,087:INFO:Importing libraries
2024-05-17 20:03:57,087:INFO:Copying training dataset
2024-05-17 20:03:57,093:INFO:Defining folds
2024-05-17 20:03:57,093:INFO:Declaring metric variables
2024-05-17 20:03:57,102:INFO:Importing untrained model
2024-05-17 20:03:57,109:INFO:Orthogonal Matching Pursuit Imported successfully
2024-05-17 20:03:57,124:INFO:Starting cross validation
2024-05-17 20:03:57,126:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:03:57,267:INFO:Calculating mean and std
2024-05-17 20:03:57,270:INFO:Creating metrics dataframe
2024-05-17 20:03:57,279:INFO:Uploading results into container
2024-05-17 20:03:57,281:INFO:Uploading model into container now
2024-05-17 20:03:57,283:INFO:_master_model_container: 7
2024-05-17 20:03:57,284:INFO:_display_container: 2
2024-05-17 20:03:57,285:INFO:OrthogonalMatchingPursuit()
2024-05-17 20:03:57,285:INFO:create_model() successfully completed......................................
2024-05-17 20:03:57,410:INFO:SubProcess create_model() end ==================================
2024-05-17 20:03:57,410:INFO:Creating metrics dataframe
2024-05-17 20:03:57,424:INFO:Initializing Bayesian Ridge
2024-05-17 20:03:57,425:INFO:Total runtime is 0.23439262708028158 minutes
2024-05-17 20:03:57,431:INFO:SubProcess create_model() called ==================================
2024-05-17 20:03:57,431:INFO:Initializing create_model()
2024-05-17 20:03:57,431:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:03:57,431:INFO:Checking exceptions
2024-05-17 20:03:57,432:INFO:Importing libraries
2024-05-17 20:03:57,432:INFO:Copying training dataset
2024-05-17 20:03:57,440:INFO:Defining folds
2024-05-17 20:03:57,440:INFO:Declaring metric variables
2024-05-17 20:03:57,449:INFO:Importing untrained model
2024-05-17 20:03:57,456:INFO:Bayesian Ridge Imported successfully
2024-05-17 20:03:57,470:INFO:Starting cross validation
2024-05-17 20:03:57,472:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:03:57,593:INFO:Calculating mean and std
2024-05-17 20:03:57,597:INFO:Creating metrics dataframe
2024-05-17 20:03:57,601:INFO:Uploading results into container
2024-05-17 20:03:57,602:INFO:Uploading model into container now
2024-05-17 20:03:57,603:INFO:_master_model_container: 8
2024-05-17 20:03:57,603:INFO:_display_container: 2
2024-05-17 20:03:57,604:INFO:BayesianRidge()
2024-05-17 20:03:57,604:INFO:create_model() successfully completed......................................
2024-05-17 20:03:57,717:INFO:SubProcess create_model() end ==================================
2024-05-17 20:03:57,718:INFO:Creating metrics dataframe
2024-05-17 20:03:57,736:INFO:Initializing Passive Aggressive Regressor
2024-05-17 20:03:57,736:INFO:Total runtime is 0.23958688974380493 minutes
2024-05-17 20:03:57,741:INFO:SubProcess create_model() called ==================================
2024-05-17 20:03:57,741:INFO:Initializing create_model()
2024-05-17 20:03:57,742:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:03:57,742:INFO:Checking exceptions
2024-05-17 20:03:57,742:INFO:Importing libraries
2024-05-17 20:03:57,742:INFO:Copying training dataset
2024-05-17 20:03:57,753:INFO:Defining folds
2024-05-17 20:03:57,753:INFO:Declaring metric variables
2024-05-17 20:03:57,759:INFO:Importing untrained model
2024-05-17 20:03:57,771:INFO:Passive Aggressive Regressor Imported successfully
2024-05-17 20:03:57,787:INFO:Starting cross validation
2024-05-17 20:03:57,789:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:03:57,957:INFO:Calculating mean and std
2024-05-17 20:03:57,959:INFO:Creating metrics dataframe
2024-05-17 20:03:57,966:INFO:Uploading results into container
2024-05-17 20:03:57,967:INFO:Uploading model into container now
2024-05-17 20:03:57,967:INFO:_master_model_container: 9
2024-05-17 20:03:57,968:INFO:_display_container: 2
2024-05-17 20:03:57,969:INFO:PassiveAggressiveRegressor(random_state=123)
2024-05-17 20:03:57,969:INFO:create_model() successfully completed......................................
2024-05-17 20:03:58,076:INFO:SubProcess create_model() end ==================================
2024-05-17 20:03:58,076:INFO:Creating metrics dataframe
2024-05-17 20:03:58,092:INFO:Initializing Huber Regressor
2024-05-17 20:03:58,092:INFO:Total runtime is 0.245510999361674 minutes
2024-05-17 20:03:58,098:INFO:SubProcess create_model() called ==================================
2024-05-17 20:03:58,099:INFO:Initializing create_model()
2024-05-17 20:03:58,099:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:03:58,100:INFO:Checking exceptions
2024-05-17 20:03:58,100:INFO:Importing libraries
2024-05-17 20:03:58,100:INFO:Copying training dataset
2024-05-17 20:03:58,110:INFO:Defining folds
2024-05-17 20:03:58,111:INFO:Declaring metric variables
2024-05-17 20:03:58,119:INFO:Importing untrained model
2024-05-17 20:03:58,125:INFO:Huber Regressor Imported successfully
2024-05-17 20:03:58,143:INFO:Starting cross validation
2024-05-17 20:03:58,144:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:03:58,391:INFO:Calculating mean and std
2024-05-17 20:03:58,393:INFO:Creating metrics dataframe
2024-05-17 20:03:58,402:INFO:Uploading results into container
2024-05-17 20:03:58,403:INFO:Uploading model into container now
2024-05-17 20:03:58,404:INFO:_master_model_container: 10
2024-05-17 20:03:58,404:INFO:_display_container: 2
2024-05-17 20:03:58,405:INFO:HuberRegressor()
2024-05-17 20:03:58,405:INFO:create_model() successfully completed......................................
2024-05-17 20:03:58,538:INFO:SubProcess create_model() end ==================================
2024-05-17 20:03:58,538:INFO:Creating metrics dataframe
2024-05-17 20:03:58,559:INFO:Initializing K Neighbors Regressor
2024-05-17 20:03:58,559:INFO:Total runtime is 0.25329976876576743 minutes
2024-05-17 20:03:58,568:INFO:SubProcess create_model() called ==================================
2024-05-17 20:03:58,568:INFO:Initializing create_model()
2024-05-17 20:03:58,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:03:58,569:INFO:Checking exceptions
2024-05-17 20:03:58,569:INFO:Importing libraries
2024-05-17 20:03:58,569:INFO:Copying training dataset
2024-05-17 20:03:58,575:INFO:Defining folds
2024-05-17 20:03:58,576:INFO:Declaring metric variables
2024-05-17 20:03:58,584:INFO:Importing untrained model
2024-05-17 20:03:58,593:INFO:K Neighbors Regressor Imported successfully
2024-05-17 20:03:58,606:INFO:Starting cross validation
2024-05-17 20:03:58,608:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:03:58,876:INFO:Calculating mean and std
2024-05-17 20:03:58,878:INFO:Creating metrics dataframe
2024-05-17 20:03:58,888:INFO:Uploading results into container
2024-05-17 20:03:58,890:INFO:Uploading model into container now
2024-05-17 20:03:58,890:INFO:_master_model_container: 11
2024-05-17 20:03:58,891:INFO:_display_container: 2
2024-05-17 20:03:58,891:INFO:KNeighborsRegressor(n_jobs=-1)
2024-05-17 20:03:58,891:INFO:create_model() successfully completed......................................
2024-05-17 20:03:59,005:INFO:SubProcess create_model() end ==================================
2024-05-17 20:03:59,005:INFO:Creating metrics dataframe
2024-05-17 20:03:59,023:INFO:Initializing Decision Tree Regressor
2024-05-17 20:03:59,023:INFO:Total runtime is 0.2610403974850973 minutes
2024-05-17 20:03:59,028:INFO:SubProcess create_model() called ==================================
2024-05-17 20:03:59,030:INFO:Initializing create_model()
2024-05-17 20:03:59,030:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:03:59,030:INFO:Checking exceptions
2024-05-17 20:03:59,031:INFO:Importing libraries
2024-05-17 20:03:59,031:INFO:Copying training dataset
2024-05-17 20:03:59,039:INFO:Defining folds
2024-05-17 20:03:59,039:INFO:Declaring metric variables
2024-05-17 20:03:59,047:INFO:Importing untrained model
2024-05-17 20:03:59,055:INFO:Decision Tree Regressor Imported successfully
2024-05-17 20:03:59,066:INFO:Starting cross validation
2024-05-17 20:03:59,068:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:03:59,222:INFO:Calculating mean and std
2024-05-17 20:03:59,224:INFO:Creating metrics dataframe
2024-05-17 20:03:59,235:INFO:Uploading results into container
2024-05-17 20:03:59,236:INFO:Uploading model into container now
2024-05-17 20:03:59,238:INFO:_master_model_container: 12
2024-05-17 20:03:59,238:INFO:_display_container: 2
2024-05-17 20:03:59,239:INFO:DecisionTreeRegressor(random_state=123)
2024-05-17 20:03:59,239:INFO:create_model() successfully completed......................................
2024-05-17 20:03:59,351:INFO:SubProcess create_model() end ==================================
2024-05-17 20:03:59,352:INFO:Creating metrics dataframe
2024-05-17 20:03:59,369:INFO:Initializing Random Forest Regressor
2024-05-17 20:03:59,369:INFO:Total runtime is 0.26680628856023153 minutes
2024-05-17 20:03:59,375:INFO:SubProcess create_model() called ==================================
2024-05-17 20:03:59,375:INFO:Initializing create_model()
2024-05-17 20:03:59,375:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:03:59,376:INFO:Checking exceptions
2024-05-17 20:03:59,376:INFO:Importing libraries
2024-05-17 20:03:59,376:INFO:Copying training dataset
2024-05-17 20:03:59,388:INFO:Defining folds
2024-05-17 20:03:59,388:INFO:Declaring metric variables
2024-05-17 20:03:59,396:INFO:Importing untrained model
2024-05-17 20:03:59,406:INFO:Random Forest Regressor Imported successfully
2024-05-17 20:03:59,418:INFO:Starting cross validation
2024-05-17 20:03:59,420:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:04:01,662:INFO:Calculating mean and std
2024-05-17 20:04:01,668:INFO:Creating metrics dataframe
2024-05-17 20:04:01,677:INFO:Uploading results into container
2024-05-17 20:04:01,678:INFO:Uploading model into container now
2024-05-17 20:04:01,681:INFO:_master_model_container: 13
2024-05-17 20:04:01,683:INFO:_display_container: 2
2024-05-17 20:04:01,684:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:04:01,684:INFO:create_model() successfully completed......................................
2024-05-17 20:04:01,838:INFO:SubProcess create_model() end ==================================
2024-05-17 20:04:01,839:INFO:Creating metrics dataframe
2024-05-17 20:04:01,872:INFO:Initializing Extra Trees Regressor
2024-05-17 20:04:01,872:INFO:Total runtime is 0.3085194110870361 minutes
2024-05-17 20:04:01,881:INFO:SubProcess create_model() called ==================================
2024-05-17 20:04:01,882:INFO:Initializing create_model()
2024-05-17 20:04:01,882:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:04:01,883:INFO:Checking exceptions
2024-05-17 20:04:01,883:INFO:Importing libraries
2024-05-17 20:04:01,883:INFO:Copying training dataset
2024-05-17 20:04:01,895:INFO:Defining folds
2024-05-17 20:04:01,897:INFO:Declaring metric variables
2024-05-17 20:04:01,907:INFO:Importing untrained model
2024-05-17 20:04:01,918:INFO:Extra Trees Regressor Imported successfully
2024-05-17 20:04:01,934:INFO:Starting cross validation
2024-05-17 20:04:01,937:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:04:03,341:INFO:Calculating mean and std
2024-05-17 20:04:03,345:INFO:Creating metrics dataframe
2024-05-17 20:04:03,354:INFO:Uploading results into container
2024-05-17 20:04:03,356:INFO:Uploading model into container now
2024-05-17 20:04:03,356:INFO:_master_model_container: 14
2024-05-17 20:04:03,357:INFO:_display_container: 2
2024-05-17 20:04:03,358:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:04:03,358:INFO:create_model() successfully completed......................................
2024-05-17 20:04:03,530:INFO:SubProcess create_model() end ==================================
2024-05-17 20:04:03,531:INFO:Creating metrics dataframe
2024-05-17 20:04:03,576:INFO:Initializing AdaBoost Regressor
2024-05-17 20:04:03,577:INFO:Total runtime is 0.3369316299756368 minutes
2024-05-17 20:04:03,595:INFO:SubProcess create_model() called ==================================
2024-05-17 20:04:03,597:INFO:Initializing create_model()
2024-05-17 20:04:03,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:04:03,599:INFO:Checking exceptions
2024-05-17 20:04:03,599:INFO:Importing libraries
2024-05-17 20:04:03,599:INFO:Copying training dataset
2024-05-17 20:04:03,617:INFO:Defining folds
2024-05-17 20:04:03,618:INFO:Declaring metric variables
2024-05-17 20:04:03,630:INFO:Importing untrained model
2024-05-17 20:04:03,643:INFO:AdaBoost Regressor Imported successfully
2024-05-17 20:04:03,666:INFO:Starting cross validation
2024-05-17 20:04:03,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:04:04,404:INFO:Calculating mean and std
2024-05-17 20:04:04,408:INFO:Creating metrics dataframe
2024-05-17 20:04:04,423:INFO:Uploading results into container
2024-05-17 20:04:04,425:INFO:Uploading model into container now
2024-05-17 20:04:04,426:INFO:_master_model_container: 15
2024-05-17 20:04:04,426:INFO:_display_container: 2
2024-05-17 20:04:04,426:INFO:AdaBoostRegressor(random_state=123)
2024-05-17 20:04:04,427:INFO:create_model() successfully completed......................................
2024-05-17 20:04:04,623:INFO:SubProcess create_model() end ==================================
2024-05-17 20:04:04,625:INFO:Creating metrics dataframe
2024-05-17 20:04:04,668:INFO:Initializing Gradient Boosting Regressor
2024-05-17 20:04:04,668:INFO:Total runtime is 0.3551135897636414 minutes
2024-05-17 20:04:04,678:INFO:SubProcess create_model() called ==================================
2024-05-17 20:04:04,680:INFO:Initializing create_model()
2024-05-17 20:04:04,680:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:04:04,682:INFO:Checking exceptions
2024-05-17 20:04:04,682:INFO:Importing libraries
2024-05-17 20:04:04,682:INFO:Copying training dataset
2024-05-17 20:04:04,697:INFO:Defining folds
2024-05-17 20:04:04,698:INFO:Declaring metric variables
2024-05-17 20:04:04,709:INFO:Importing untrained model
2024-05-17 20:04:04,725:INFO:Gradient Boosting Regressor Imported successfully
2024-05-17 20:04:04,748:INFO:Starting cross validation
2024-05-17 20:04:04,751:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:04:06,158:INFO:Calculating mean and std
2024-05-17 20:04:06,162:INFO:Creating metrics dataframe
2024-05-17 20:04:06,173:INFO:Uploading results into container
2024-05-17 20:04:06,175:INFO:Uploading model into container now
2024-05-17 20:04:06,176:INFO:_master_model_container: 16
2024-05-17 20:04:06,177:INFO:_display_container: 2
2024-05-17 20:04:06,178:INFO:GradientBoostingRegressor(random_state=123)
2024-05-17 20:04:06,178:INFO:create_model() successfully completed......................................
2024-05-17 20:04:06,343:INFO:SubProcess create_model() end ==================================
2024-05-17 20:04:06,343:INFO:Creating metrics dataframe
2024-05-17 20:04:06,376:INFO:Initializing Extreme Gradient Boosting
2024-05-17 20:04:06,376:INFO:Total runtime is 0.38358876307805384 minutes
2024-05-17 20:04:06,389:INFO:SubProcess create_model() called ==================================
2024-05-17 20:04:06,390:INFO:Initializing create_model()
2024-05-17 20:04:06,391:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:04:06,391:INFO:Checking exceptions
2024-05-17 20:04:06,391:INFO:Importing libraries
2024-05-17 20:04:06,391:INFO:Copying training dataset
2024-05-17 20:04:06,406:INFO:Defining folds
2024-05-17 20:04:06,407:INFO:Declaring metric variables
2024-05-17 20:04:06,421:INFO:Importing untrained model
2024-05-17 20:04:06,439:INFO:Extreme Gradient Boosting Imported successfully
2024-05-17 20:04:06,469:INFO:Starting cross validation
2024-05-17 20:04:06,471:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:04:07,922:INFO:Calculating mean and std
2024-05-17 20:04:07,927:INFO:Creating metrics dataframe
2024-05-17 20:04:07,941:INFO:Uploading results into container
2024-05-17 20:04:07,942:INFO:Uploading model into container now
2024-05-17 20:04:07,943:INFO:_master_model_container: 17
2024-05-17 20:04:07,944:INFO:_display_container: 2
2024-05-17 20:04:07,946:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             predictor=None, random_state=123, ...)
2024-05-17 20:04:07,948:INFO:create_model() successfully completed......................................
2024-05-17 20:04:08,107:INFO:SubProcess create_model() end ==================================
2024-05-17 20:04:08,107:INFO:Creating metrics dataframe
2024-05-17 20:04:08,139:INFO:Initializing Light Gradient Boosting Machine
2024-05-17 20:04:08,140:INFO:Total runtime is 0.4129852215449016 minutes
2024-05-17 20:04:08,151:INFO:SubProcess create_model() called ==================================
2024-05-17 20:04:08,153:INFO:Initializing create_model()
2024-05-17 20:04:08,153:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:04:08,154:INFO:Checking exceptions
2024-05-17 20:04:08,154:INFO:Importing libraries
2024-05-17 20:04:08,154:INFO:Copying training dataset
2024-05-17 20:04:08,167:INFO:Defining folds
2024-05-17 20:04:08,168:INFO:Declaring metric variables
2024-05-17 20:04:08,178:INFO:Importing untrained model
2024-05-17 20:04:08,192:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-17 20:04:08,222:INFO:Starting cross validation
2024-05-17 20:04:08,224:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:04:12,260:INFO:Calculating mean and std
2024-05-17 20:04:12,265:INFO:Creating metrics dataframe
2024-05-17 20:04:12,275:INFO:Uploading results into container
2024-05-17 20:04:12,276:INFO:Uploading model into container now
2024-05-17 20:04:12,277:INFO:_master_model_container: 18
2024-05-17 20:04:12,277:INFO:_display_container: 2
2024-05-17 20:04:12,277:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:04:12,278:INFO:create_model() successfully completed......................................
2024-05-17 20:04:12,418:INFO:SubProcess create_model() end ==================================
2024-05-17 20:04:12,418:INFO:Creating metrics dataframe
2024-05-17 20:04:12,449:INFO:Initializing CatBoost Regressor
2024-05-17 20:04:12,450:INFO:Total runtime is 0.48481278419494633 minutes
2024-05-17 20:04:12,459:INFO:SubProcess create_model() called ==================================
2024-05-17 20:04:12,460:INFO:Initializing create_model()
2024-05-17 20:04:12,460:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:04:12,460:INFO:Checking exceptions
2024-05-17 20:04:12,460:INFO:Importing libraries
2024-05-17 20:04:12,460:INFO:Copying training dataset
2024-05-17 20:04:12,476:INFO:Defining folds
2024-05-17 20:04:12,476:INFO:Declaring metric variables
2024-05-17 20:04:12,487:INFO:Importing untrained model
2024-05-17 20:04:12,502:INFO:CatBoost Regressor Imported successfully
2024-05-17 20:04:12,528:INFO:Starting cross validation
2024-05-17 20:04:12,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:04:32,433:INFO:Calculating mean and std
2024-05-17 20:04:32,436:INFO:Creating metrics dataframe
2024-05-17 20:04:32,441:INFO:Uploading results into container
2024-05-17 20:04:32,443:INFO:Uploading model into container now
2024-05-17 20:04:32,444:INFO:_master_model_container: 19
2024-05-17 20:04:32,444:INFO:_display_container: 2
2024-05-17 20:04:32,444:INFO:<catboost.core.CatBoostRegressor object at 0x00000247B61BEEE0>
2024-05-17 20:04:32,445:INFO:create_model() successfully completed......................................
2024-05-17 20:04:32,575:INFO:SubProcess create_model() end ==================================
2024-05-17 20:04:32,575:INFO:Creating metrics dataframe
2024-05-17 20:04:32,600:INFO:Initializing Dummy Regressor
2024-05-17 20:04:32,601:INFO:Total runtime is 0.8206555565198264 minutes
2024-05-17 20:04:32,608:INFO:SubProcess create_model() called ==================================
2024-05-17 20:04:32,609:INFO:Initializing create_model()
2024-05-17 20:04:32,610:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000247B6663A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:04:32,610:INFO:Checking exceptions
2024-05-17 20:04:32,611:INFO:Importing libraries
2024-05-17 20:04:32,611:INFO:Copying training dataset
2024-05-17 20:04:32,623:INFO:Defining folds
2024-05-17 20:04:32,623:INFO:Declaring metric variables
2024-05-17 20:04:32,631:INFO:Importing untrained model
2024-05-17 20:04:32,641:INFO:Dummy Regressor Imported successfully
2024-05-17 20:04:32,666:INFO:Starting cross validation
2024-05-17 20:04:32,669:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:04:32,801:INFO:Calculating mean and std
2024-05-17 20:04:32,803:INFO:Creating metrics dataframe
2024-05-17 20:04:32,808:INFO:Uploading results into container
2024-05-17 20:04:32,809:INFO:Uploading model into container now
2024-05-17 20:04:32,810:INFO:_master_model_container: 20
2024-05-17 20:04:32,811:INFO:_display_container: 2
2024-05-17 20:04:32,811:INFO:DummyRegressor()
2024-05-17 20:04:32,812:INFO:create_model() successfully completed......................................
2024-05-17 20:04:32,929:INFO:SubProcess create_model() end ==================================
2024-05-17 20:04:32,930:INFO:Creating metrics dataframe
2024-05-17 20:04:32,992:INFO:Initializing create_model()
2024-05-17 20:04:32,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:04:32,993:INFO:Checking exceptions
2024-05-17 20:04:32,999:INFO:Importing libraries
2024-05-17 20:04:33,019:INFO:Copying training dataset
2024-05-17 20:04:33,093:INFO:Defining folds
2024-05-17 20:04:33,093:INFO:Declaring metric variables
2024-05-17 20:04:33,094:INFO:Importing untrained model
2024-05-17 20:04:33,095:INFO:Declaring custom model
2024-05-17 20:04:33,108:INFO:Extra Trees Regressor Imported successfully
2024-05-17 20:04:33,110:INFO:Cross validation set to False
2024-05-17 20:04:33,110:INFO:Fitting Model
2024-05-17 20:04:33,340:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:04:33,340:INFO:create_model() successfully completed......................................
2024-05-17 20:04:33,515:INFO:_master_model_container: 20
2024-05-17 20:04:33,515:INFO:_display_container: 2
2024-05-17 20:04:33,516:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:04:33,516:INFO:compare_models() successfully completed......................................
2024-05-17 20:04:46,373:INFO:Initializing evaluate_model()
2024-05-17 20:04:46,373:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-17 20:04:46,415:INFO:Initializing plot_model()
2024-05-17 20:04:46,415:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, system=True)
2024-05-17 20:04:46,415:INFO:Checking exceptions
2024-05-17 20:04:46,454:INFO:Preloading libraries
2024-05-17 20:04:46,506:INFO:Copying training dataset
2024-05-17 20:04:46,506:INFO:Plot type: pipeline
2024-05-17 20:04:46,750:INFO:Visual Rendered Successfully
2024-05-17 20:04:46,858:INFO:plot_model() successfully completed......................................
2024-05-17 20:04:51,515:INFO:Initializing plot_model()
2024-05-17 20:04:51,515:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, system=True)
2024-05-17 20:04:51,515:INFO:Checking exceptions
2024-05-17 20:04:51,556:INFO:Preloading libraries
2024-05-17 20:04:51,590:INFO:Copying training dataset
2024-05-17 20:04:51,591:INFO:Plot type: feature
2024-05-17 20:04:51,591:WARNING:No coef_ found. Trying feature_importances_
2024-05-17 20:04:51,761:INFO:Visual Rendered Successfully
2024-05-17 20:04:51,864:INFO:plot_model() successfully completed......................................
2024-05-17 20:04:57,617:INFO:Initializing plot_model()
2024-05-17 20:04:57,618:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, system=True)
2024-05-17 20:04:57,619:INFO:Checking exceptions
2024-05-17 20:04:57,656:INFO:Preloading libraries
2024-05-17 20:04:57,677:INFO:Copying training dataset
2024-05-17 20:04:57,677:INFO:Plot type: feature_all
2024-05-17 20:04:57,694:WARNING:No coef_ found. Trying feature_importances_
2024-05-17 20:04:57,856:WARNING:c:\Program Files\Orange\lib\site-packages\matplotlib\_tight_bbox.py:67: RuntimeWarning: divide by zero encountered in double_scalars
  fig.patch.set_bounds(x0 / w1, y0 / h1,

2024-05-17 20:04:57,857:WARNING:c:\Program Files\Orange\lib\site-packages\matplotlib\_tight_bbox.py:68: RuntimeWarning: divide by zero encountered in double_scalars
  fig.bbox.width / w1, fig.bbox.height / h1)

2024-05-17 20:04:57,900:WARNING:c:\Program Files\Orange\lib\site-packages\matplotlib\patches.py:737: RuntimeWarning: invalid value encountered in double_scalars
  y1 = self.convert_yunits(self._y0 + self._height)

2024-05-17 20:04:57,930:WARNING:c:\Program Files\Orange\lib\site-packages\matplotlib\transforms.py:2047: RuntimeWarning: invalid value encountered in double_scalars
  self._mtx[1, 2] += ty

2024-05-17 20:04:57,965:INFO:Visual Rendered Successfully
2024-05-17 20:04:58,048:INFO:plot_model() successfully completed......................................
2024-05-17 20:05:01,645:INFO:Initializing plot_model()
2024-05-17 20:05:01,645:INFO:plot_model(plot=tree, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, system=True)
2024-05-17 20:05:01,646:INFO:Checking exceptions
2024-05-17 20:05:01,681:INFO:Preloading libraries
2024-05-17 20:05:01,716:INFO:Copying training dataset
2024-05-17 20:05:01,716:INFO:Plot type: tree
2024-05-17 20:05:03,372:INFO:Plotting decision trees
2024-05-17 20:05:03,393:INFO:Plotting tree 0
2024-05-17 20:05:12,152:INFO:Plotting tree 1
2024-05-17 20:05:20,680:INFO:Plotting tree 2
2024-05-17 20:05:30,898:INFO:Plotting tree 3
2024-05-17 20:05:39,317:INFO:Plotting tree 4
2024-05-17 20:06:52,675:INFO:Initializing predict_model()
2024-05-17 20:06:52,675:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024828F8B0D0>)
2024-05-17 20:06:52,675:INFO:Checking exceptions
2024-05-17 20:06:52,676:INFO:Preloading libraries
2024-05-17 20:06:52,833:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-05-17 20:06:53,541:INFO:Initializing predict_model()
2024-05-17 20:06:53,541:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000247B61A7040>)
2024-05-17 20:06:53,541:INFO:Checking exceptions
2024-05-17 20:06:53,542:INFO:Preloading libraries
2024-05-17 20:06:53,652:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-05-17 20:06:54,326:INFO:Initializing predict_model()
2024-05-17 20:06:54,326:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024826543AF0>)
2024-05-17 20:06:54,326:INFO:Checking exceptions
2024-05-17 20:06:54,327:INFO:Preloading libraries
2024-05-17 20:06:54,431:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-05-17 20:06:55,048:INFO:Initializing plot_model()
2024-05-17 20:06:55,049:INFO:plot_model(plot=vc, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024725A33B80>, system=True)
2024-05-17 20:06:55,050:INFO:Checking exceptions
2024-05-17 20:06:55,082:INFO:Preloading libraries
2024-05-17 20:06:55,110:INFO:Copying training dataset
2024-05-17 20:06:55,110:INFO:Plot type: vc
2024-05-17 20:06:55,111:INFO:Determining param_name
2024-05-17 20:06:55,111:INFO:param_name: max_depth
2024-05-17 20:06:55,311:INFO:Fitting Model
2024-05-17 20:07:08,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 20:07:08,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 20:07:08,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 20:07:08,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-17 20:07:08,491:INFO:PyCaret RegressionExperiment
2024-05-17 20:07:08,491:INFO:Logging name: reg-default-name
2024-05-17 20:07:08,491:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-17 20:07:08,491:INFO:version 3.3.2
2024-05-17 20:07:08,491:INFO:Initializing setup()
2024-05-17 20:07:08,491:INFO:self.USI: c182
2024-05-17 20:07:08,491:INFO:self._variable_keys: {'memory', 'y_train', 'n_jobs_param', 'data', 'seed', 'target_param', 'transform_target_param', '_available_plots', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'gpu_param', 'idx', 'exp_name_log', 'log_plots_param', 'fold_generator', 'html_param', 'pipeline', 'fold_shuffle_param', 'X_test', 'y', 'X_train', 'exp_id', 'X', 'fold_groups_param', 'y_test', 'USI'}
2024-05-17 20:07:08,491:INFO:Checking environment
2024-05-17 20:07:08,491:INFO:python_version: 3.9.12
2024-05-17 20:07:08,491:INFO:python_build: ('main', 'Mar 24 2022 23:17:03')
2024-05-17 20:07:08,491:INFO:machine: AMD64
2024-05-17 20:07:08,491:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-17 20:07:08,498:INFO:Memory: svmem(total=16910155776, available=3451564032, percent=79.6, used=13458591744, free=3451564032)
2024-05-17 20:07:08,498:INFO:Physical Core: 4
2024-05-17 20:07:08,498:INFO:Logical Core: 8
2024-05-17 20:07:08,498:INFO:Checking libraries
2024-05-17 20:07:08,499:INFO:System:
2024-05-17 20:07:08,499:INFO:    python: 3.9.12 | packaged by conda-forge | (main, Mar 24 2022, 23:17:03) [MSC v.1929 64 bit (AMD64)]
2024-05-17 20:07:08,499:INFO:executable: c:\Program Files\Orange\python.exe
2024-05-17 20:07:08,499:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-17 20:07:08,499:INFO:PyCaret required dependencies:
2024-05-17 20:07:08,583:INFO:                 pip: 22.3.1
2024-05-17 20:07:08,583:INFO:          setuptools: 65.5.1
2024-05-17 20:07:08,583:INFO:             pycaret: 3.3.2
2024-05-17 20:07:08,583:INFO:             IPython: 8.4.0
2024-05-17 20:07:08,583:INFO:          ipywidgets: 7.7.1
2024-05-17 20:07:08,583:INFO:                tqdm: 4.66.2
2024-05-17 20:07:08,583:INFO:               numpy: 1.23.5
2024-05-17 20:07:08,583:INFO:              pandas: 1.4.4
2024-05-17 20:07:08,583:INFO:              jinja2: 3.1.2
2024-05-17 20:07:08,583:INFO:               scipy: 1.9.3
2024-05-17 20:07:08,583:INFO:              joblib: 1.2.0
2024-05-17 20:07:08,583:INFO:             sklearn: 1.1.3
2024-05-17 20:07:08,583:INFO:                pyod: 1.1.3
2024-05-17 20:07:08,583:INFO:            imblearn: 0.12.2
2024-05-17 20:07:08,584:INFO:   category_encoders: 2.6.3
2024-05-17 20:07:08,584:INFO:            lightgbm: 4.3.0
2024-05-17 20:07:08,584:INFO:               numba: 0.59.1
2024-05-17 20:07:08,584:INFO:            requests: 2.28.1
2024-05-17 20:07:08,584:INFO:          matplotlib: 3.6.2
2024-05-17 20:07:08,584:INFO:          scikitplot: 0.3.7
2024-05-17 20:07:08,584:INFO:         yellowbrick: 1.5
2024-05-17 20:07:08,584:INFO:              plotly: 5.11.0
2024-05-17 20:07:08,584:INFO:    plotly-resampler: Not installed
2024-05-17 20:07:08,584:INFO:             kaleido: 0.2.1
2024-05-17 20:07:08,584:INFO:           schemdraw: 0.15
2024-05-17 20:07:08,584:INFO:         statsmodels: 0.14.2
2024-05-17 20:07:08,584:INFO:              sktime: 0.26.0
2024-05-17 20:07:08,584:INFO:               tbats: 1.1.3
2024-05-17 20:07:08,584:INFO:            pmdarima: 2.0.4
2024-05-17 20:07:08,584:INFO:              psutil: 5.9.4
2024-05-17 20:07:08,584:INFO:          markupsafe: 2.1.2
2024-05-17 20:07:08,584:INFO:             pickle5: Not installed
2024-05-17 20:07:08,584:INFO:         cloudpickle: 3.0.0
2024-05-17 20:07:08,585:INFO:         deprecation: 2.1.0
2024-05-17 20:07:08,585:INFO:              xxhash: 3.4.1
2024-05-17 20:07:08,585:INFO:           wurlitzer: Not installed
2024-05-17 20:07:08,585:INFO:PyCaret optional dependencies:
2024-05-17 20:07:08,647:INFO:                shap: Not installed
2024-05-17 20:07:08,647:INFO:           interpret: Not installed
2024-05-17 20:07:08,648:INFO:                umap: Not installed
2024-05-17 20:07:08,648:INFO:     ydata_profiling: Not installed
2024-05-17 20:07:08,648:INFO:  explainerdashboard: Not installed
2024-05-17 20:07:08,648:INFO:             autoviz: Not installed
2024-05-17 20:07:08,648:INFO:           fairlearn: Not installed
2024-05-17 20:07:08,648:INFO:          deepchecks: Not installed
2024-05-17 20:07:08,648:INFO:             xgboost: 1.7.1
2024-05-17 20:07:08,648:INFO:            catboost: 1.1.1
2024-05-17 20:07:08,648:INFO:              kmodes: Not installed
2024-05-17 20:07:08,648:INFO:             mlxtend: Not installed
2024-05-17 20:07:08,648:INFO:       statsforecast: Not installed
2024-05-17 20:07:08,648:INFO:        tune_sklearn: Not installed
2024-05-17 20:07:08,648:INFO:                 ray: Not installed
2024-05-17 20:07:08,648:INFO:            hyperopt: Not installed
2024-05-17 20:07:08,648:INFO:              optuna: Not installed
2024-05-17 20:07:08,648:INFO:               skopt: Not installed
2024-05-17 20:07:08,648:INFO:              mlflow: Not installed
2024-05-17 20:07:08,648:INFO:              gradio: Not installed
2024-05-17 20:07:08,648:INFO:             fastapi: Not installed
2024-05-17 20:07:08,648:INFO:             uvicorn: Not installed
2024-05-17 20:07:08,648:INFO:              m2cgen: Not installed
2024-05-17 20:07:08,648:INFO:           evidently: Not installed
2024-05-17 20:07:08,648:INFO:               fugue: Not installed
2024-05-17 20:07:08,648:INFO:           streamlit: Not installed
2024-05-17 20:07:08,649:INFO:             prophet: Not installed
2024-05-17 20:07:08,649:INFO:None
2024-05-17 20:07:08,649:INFO:Set up data.
2024-05-17 20:07:08,659:INFO:Set up folding strategy.
2024-05-17 20:07:08,659:INFO:Set up train/test split.
2024-05-17 20:07:08,665:INFO:Set up index.
2024-05-17 20:07:08,665:INFO:Assigning column types.
2024-05-17 20:07:08,670:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-17 20:07:08,670:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-17 20:07:08,678:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 20:07:08,684:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:07:08,770:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:07:08,832:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:07:08,833:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:08,838:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:08,880:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-17 20:07:08,887:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 20:07:08,892:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:07:08,990:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,045:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,047:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:09,050:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:09,051:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-17 20:07:09,057:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,062:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,147:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,210:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:09,214:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:09,220:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,225:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,305:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,358:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,359:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:09,362:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:09,363:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-17 20:07:09,376:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,460:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,520:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,521:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:09,524:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:09,538:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,609:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,664:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,665:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:09,668:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:09,669:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-17 20:07:09,757:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,812:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,813:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:09,816:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:09,910:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,967:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:07:09,968:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:09,971:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:09,974:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-17 20:07:10,071:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:07:10,147:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:10,150:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:10,262:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:07:10,324:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:10,327:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:10,328:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-17 20:07:10,474:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:10,480:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:10,619:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:10,623:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:10,628:INFO:Preparing preprocessing pipeline...
2024-05-17 20:07:10,628:INFO:Set up simple imputation.
2024-05-17 20:07:10,655:INFO:Finished creating preprocessing pipeline.
2024-05-17 20:07:10,661:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lowPrice', 'highPrice',
                                             'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-05-17 20:07:10,662:INFO:Creating final display dataframe.
2024-05-17 20:07:10,744:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         lastPrice
2                   Target type        Regression
3           Original data shape         (9563, 9)
4        Transformed data shape         (9563, 4)
5   Transformed train set shape         (6694, 4)
6    Transformed test set shape         (2869, 4)
7               Ignore features                 5
8              Numeric features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              c182
2024-05-17 20:07:10,904:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:10,908:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:11,059:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:07:11,063:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:07:11,065:INFO:setup() successfully completed in 2.58s...............
2024-05-17 20:07:11,065:INFO:Initializing compare_models()
2024-05-17 20:07:11,065:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-05-17 20:07:11,065:INFO:Checking exceptions
2024-05-17 20:07:11,067:INFO:Preparing display monitor
2024-05-17 20:07:11,132:INFO:Initializing Linear Regression
2024-05-17 20:07:11,132:INFO:Total runtime is 1.6748905181884766e-05 minutes
2024-05-17 20:07:11,142:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:11,143:INFO:Initializing create_model()
2024-05-17 20:07:11,143:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:11,143:INFO:Checking exceptions
2024-05-17 20:07:11,143:INFO:Importing libraries
2024-05-17 20:07:11,143:INFO:Copying training dataset
2024-05-17 20:07:11,153:INFO:Defining folds
2024-05-17 20:07:11,153:INFO:Declaring metric variables
2024-05-17 20:07:11,159:INFO:Importing untrained model
2024-05-17 20:07:11,165:INFO:Linear Regression Imported successfully
2024-05-17 20:07:11,178:INFO:Starting cross validation
2024-05-17 20:07:11,193:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:23,293:INFO:Calculating mean and std
2024-05-17 20:07:23,298:INFO:Creating metrics dataframe
2024-05-17 20:07:23,309:INFO:Uploading results into container
2024-05-17 20:07:23,312:INFO:Uploading model into container now
2024-05-17 20:07:23,313:INFO:_master_model_container: 1
2024-05-17 20:07:23,314:INFO:_display_container: 2
2024-05-17 20:07:23,315:INFO:LinearRegression(n_jobs=-1)
2024-05-17 20:07:23,316:INFO:create_model() successfully completed......................................
2024-05-17 20:07:23,500:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:23,500:INFO:Creating metrics dataframe
2024-05-17 20:07:23,519:INFO:Initializing Lasso Regression
2024-05-17 20:07:23,519:INFO:Total runtime is 0.20646608670552571 minutes
2024-05-17 20:07:23,528:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:23,530:INFO:Initializing create_model()
2024-05-17 20:07:23,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:23,530:INFO:Checking exceptions
2024-05-17 20:07:23,531:INFO:Importing libraries
2024-05-17 20:07:23,531:INFO:Copying training dataset
2024-05-17 20:07:23,548:INFO:Defining folds
2024-05-17 20:07:23,552:INFO:Declaring metric variables
2024-05-17 20:07:23,566:INFO:Importing untrained model
2024-05-17 20:07:23,575:INFO:Lasso Regression Imported successfully
2024-05-17 20:07:23,598:INFO:Starting cross validation
2024-05-17 20:07:23,601:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:23,740:INFO:Calculating mean and std
2024-05-17 20:07:23,745:INFO:Creating metrics dataframe
2024-05-17 20:07:23,751:INFO:Uploading results into container
2024-05-17 20:07:23,751:INFO:Uploading model into container now
2024-05-17 20:07:23,753:INFO:_master_model_container: 2
2024-05-17 20:07:23,753:INFO:_display_container: 2
2024-05-17 20:07:23,754:INFO:Lasso(random_state=123)
2024-05-17 20:07:23,755:INFO:create_model() successfully completed......................................
2024-05-17 20:07:23,877:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:23,878:INFO:Creating metrics dataframe
2024-05-17 20:07:23,898:INFO:Initializing Ridge Regression
2024-05-17 20:07:23,898:INFO:Total runtime is 0.21279142300287882 minutes
2024-05-17 20:07:23,905:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:23,906:INFO:Initializing create_model()
2024-05-17 20:07:23,906:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:23,906:INFO:Checking exceptions
2024-05-17 20:07:23,906:INFO:Importing libraries
2024-05-17 20:07:23,906:INFO:Copying training dataset
2024-05-17 20:07:23,916:INFO:Defining folds
2024-05-17 20:07:23,917:INFO:Declaring metric variables
2024-05-17 20:07:23,924:INFO:Importing untrained model
2024-05-17 20:07:23,935:INFO:Ridge Regression Imported successfully
2024-05-17 20:07:23,952:INFO:Starting cross validation
2024-05-17 20:07:23,954:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:24,154:INFO:Calculating mean and std
2024-05-17 20:07:24,156:INFO:Creating metrics dataframe
2024-05-17 20:07:24,163:INFO:Uploading results into container
2024-05-17 20:07:24,164:INFO:Uploading model into container now
2024-05-17 20:07:24,165:INFO:_master_model_container: 3
2024-05-17 20:07:24,165:INFO:_display_container: 2
2024-05-17 20:07:24,165:INFO:Ridge(random_state=123)
2024-05-17 20:07:24,165:INFO:create_model() successfully completed......................................
2024-05-17 20:07:24,280:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:24,281:INFO:Creating metrics dataframe
2024-05-17 20:07:24,303:INFO:Initializing Elastic Net
2024-05-17 20:07:24,303:INFO:Total runtime is 0.21953948736190795 minutes
2024-05-17 20:07:24,312:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:24,313:INFO:Initializing create_model()
2024-05-17 20:07:24,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:24,314:INFO:Checking exceptions
2024-05-17 20:07:24,314:INFO:Importing libraries
2024-05-17 20:07:24,314:INFO:Copying training dataset
2024-05-17 20:07:24,322:INFO:Defining folds
2024-05-17 20:07:24,323:INFO:Declaring metric variables
2024-05-17 20:07:24,332:INFO:Importing untrained model
2024-05-17 20:07:24,340:INFO:Elastic Net Imported successfully
2024-05-17 20:07:24,352:INFO:Starting cross validation
2024-05-17 20:07:24,354:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:24,467:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.522e+04, tolerance: 1.725e+04
  model = cd_fast.enet_coordinate_descent(

2024-05-17 20:07:24,472:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.031e+04, tolerance: 1.733e+04
  model = cd_fast.enet_coordinate_descent(

2024-05-17 20:07:24,488:INFO:Calculating mean and std
2024-05-17 20:07:24,490:INFO:Creating metrics dataframe
2024-05-17 20:07:24,496:INFO:Uploading results into container
2024-05-17 20:07:24,498:INFO:Uploading model into container now
2024-05-17 20:07:24,498:INFO:_master_model_container: 4
2024-05-17 20:07:24,499:INFO:_display_container: 2
2024-05-17 20:07:24,500:INFO:ElasticNet(random_state=123)
2024-05-17 20:07:24,500:INFO:create_model() successfully completed......................................
2024-05-17 20:07:24,596:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:24,596:INFO:Creating metrics dataframe
2024-05-17 20:07:24,609:INFO:Initializing Least Angle Regression
2024-05-17 20:07:24,609:INFO:Total runtime is 0.22463059027989704 minutes
2024-05-17 20:07:24,615:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:24,615:INFO:Initializing create_model()
2024-05-17 20:07:24,616:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:24,616:INFO:Checking exceptions
2024-05-17 20:07:24,616:INFO:Importing libraries
2024-05-17 20:07:24,616:INFO:Copying training dataset
2024-05-17 20:07:24,625:INFO:Defining folds
2024-05-17 20:07:24,626:INFO:Declaring metric variables
2024-05-17 20:07:24,632:INFO:Importing untrained model
2024-05-17 20:07:24,639:INFO:Least Angle Regression Imported successfully
2024-05-17 20:07:24,655:INFO:Starting cross validation
2024-05-17 20:07:24,657:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:24,829:INFO:Calculating mean and std
2024-05-17 20:07:24,832:INFO:Creating metrics dataframe
2024-05-17 20:07:24,838:INFO:Uploading results into container
2024-05-17 20:07:24,839:INFO:Uploading model into container now
2024-05-17 20:07:24,840:INFO:_master_model_container: 5
2024-05-17 20:07:24,840:INFO:_display_container: 2
2024-05-17 20:07:24,841:INFO:Lars(random_state=123)
2024-05-17 20:07:24,841:INFO:create_model() successfully completed......................................
2024-05-17 20:07:24,955:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:24,955:INFO:Creating metrics dataframe
2024-05-17 20:07:24,974:INFO:Initializing Lasso Least Angle Regression
2024-05-17 20:07:24,976:INFO:Total runtime is 0.23074631293614703 minutes
2024-05-17 20:07:24,985:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:24,985:INFO:Initializing create_model()
2024-05-17 20:07:24,986:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:24,986:INFO:Checking exceptions
2024-05-17 20:07:24,986:INFO:Importing libraries
2024-05-17 20:07:24,986:INFO:Copying training dataset
2024-05-17 20:07:24,995:INFO:Defining folds
2024-05-17 20:07:24,996:INFO:Declaring metric variables
2024-05-17 20:07:25,005:INFO:Importing untrained model
2024-05-17 20:07:25,016:INFO:Lasso Least Angle Regression Imported successfully
2024-05-17 20:07:25,033:INFO:Starting cross validation
2024-05-17 20:07:25,035:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:25,179:INFO:Calculating mean and std
2024-05-17 20:07:25,182:INFO:Creating metrics dataframe
2024-05-17 20:07:25,186:INFO:Uploading results into container
2024-05-17 20:07:25,188:INFO:Uploading model into container now
2024-05-17 20:07:25,189:INFO:_master_model_container: 6
2024-05-17 20:07:25,189:INFO:_display_container: 2
2024-05-17 20:07:25,190:INFO:LassoLars(random_state=123)
2024-05-17 20:07:25,190:INFO:create_model() successfully completed......................................
2024-05-17 20:07:25,311:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:25,312:INFO:Creating metrics dataframe
2024-05-17 20:07:25,330:INFO:Initializing Orthogonal Matching Pursuit
2024-05-17 20:07:25,330:INFO:Total runtime is 0.236658771832784 minutes
2024-05-17 20:07:25,334:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:25,335:INFO:Initializing create_model()
2024-05-17 20:07:25,335:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:25,337:INFO:Checking exceptions
2024-05-17 20:07:25,337:INFO:Importing libraries
2024-05-17 20:07:25,337:INFO:Copying training dataset
2024-05-17 20:07:25,346:INFO:Defining folds
2024-05-17 20:07:25,346:INFO:Declaring metric variables
2024-05-17 20:07:25,354:INFO:Importing untrained model
2024-05-17 20:07:25,363:INFO:Orthogonal Matching Pursuit Imported successfully
2024-05-17 20:07:25,382:INFO:Starting cross validation
2024-05-17 20:07:25,385:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:25,509:INFO:Calculating mean and std
2024-05-17 20:07:25,511:INFO:Creating metrics dataframe
2024-05-17 20:07:25,517:INFO:Uploading results into container
2024-05-17 20:07:25,517:INFO:Uploading model into container now
2024-05-17 20:07:25,518:INFO:_master_model_container: 7
2024-05-17 20:07:25,518:INFO:_display_container: 2
2024-05-17 20:07:25,518:INFO:OrthogonalMatchingPursuit()
2024-05-17 20:07:25,518:INFO:create_model() successfully completed......................................
2024-05-17 20:07:25,614:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:25,615:INFO:Creating metrics dataframe
2024-05-17 20:07:25,633:INFO:Initializing Bayesian Ridge
2024-05-17 20:07:25,634:INFO:Total runtime is 0.24170964956283567 minutes
2024-05-17 20:07:25,641:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:25,642:INFO:Initializing create_model()
2024-05-17 20:07:25,642:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:25,643:INFO:Checking exceptions
2024-05-17 20:07:25,643:INFO:Importing libraries
2024-05-17 20:07:25,643:INFO:Copying training dataset
2024-05-17 20:07:25,653:INFO:Defining folds
2024-05-17 20:07:25,653:INFO:Declaring metric variables
2024-05-17 20:07:25,661:INFO:Importing untrained model
2024-05-17 20:07:25,668:INFO:Bayesian Ridge Imported successfully
2024-05-17 20:07:25,684:INFO:Starting cross validation
2024-05-17 20:07:25,686:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:25,807:INFO:Calculating mean and std
2024-05-17 20:07:25,810:INFO:Creating metrics dataframe
2024-05-17 20:07:25,814:INFO:Uploading results into container
2024-05-17 20:07:25,815:INFO:Uploading model into container now
2024-05-17 20:07:25,816:INFO:_master_model_container: 8
2024-05-17 20:07:25,816:INFO:_display_container: 2
2024-05-17 20:07:25,816:INFO:BayesianRidge()
2024-05-17 20:07:25,817:INFO:create_model() successfully completed......................................
2024-05-17 20:07:25,926:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:25,927:INFO:Creating metrics dataframe
2024-05-17 20:07:25,941:INFO:Initializing Passive Aggressive Regressor
2024-05-17 20:07:25,941:INFO:Total runtime is 0.24683801730473834 minutes
2024-05-17 20:07:25,946:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:25,948:INFO:Initializing create_model()
2024-05-17 20:07:25,949:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:25,949:INFO:Checking exceptions
2024-05-17 20:07:25,949:INFO:Importing libraries
2024-05-17 20:07:25,949:INFO:Copying training dataset
2024-05-17 20:07:25,956:INFO:Defining folds
2024-05-17 20:07:25,956:INFO:Declaring metric variables
2024-05-17 20:07:25,965:INFO:Importing untrained model
2024-05-17 20:07:25,988:INFO:Passive Aggressive Regressor Imported successfully
2024-05-17 20:07:26,036:INFO:Starting cross validation
2024-05-17 20:07:26,040:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:26,210:INFO:Calculating mean and std
2024-05-17 20:07:26,214:INFO:Creating metrics dataframe
2024-05-17 20:07:26,218:INFO:Uploading results into container
2024-05-17 20:07:26,218:INFO:Uploading model into container now
2024-05-17 20:07:26,219:INFO:_master_model_container: 9
2024-05-17 20:07:26,219:INFO:_display_container: 2
2024-05-17 20:07:26,220:INFO:PassiveAggressiveRegressor(random_state=123)
2024-05-17 20:07:26,220:INFO:create_model() successfully completed......................................
2024-05-17 20:07:26,327:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:26,327:INFO:Creating metrics dataframe
2024-05-17 20:07:26,343:INFO:Initializing Huber Regressor
2024-05-17 20:07:26,343:INFO:Total runtime is 0.2535380919774373 minutes
2024-05-17 20:07:26,350:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:26,350:INFO:Initializing create_model()
2024-05-17 20:07:26,350:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:26,350:INFO:Checking exceptions
2024-05-17 20:07:26,350:INFO:Importing libraries
2024-05-17 20:07:26,351:INFO:Copying training dataset
2024-05-17 20:07:26,360:INFO:Defining folds
2024-05-17 20:07:26,360:INFO:Declaring metric variables
2024-05-17 20:07:26,366:INFO:Importing untrained model
2024-05-17 20:07:26,376:INFO:Huber Regressor Imported successfully
2024-05-17 20:07:26,390:INFO:Starting cross validation
2024-05-17 20:07:26,394:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:26,620:INFO:Calculating mean and std
2024-05-17 20:07:26,623:INFO:Creating metrics dataframe
2024-05-17 20:07:26,627:INFO:Uploading results into container
2024-05-17 20:07:26,628:INFO:Uploading model into container now
2024-05-17 20:07:26,629:INFO:_master_model_container: 10
2024-05-17 20:07:26,629:INFO:_display_container: 2
2024-05-17 20:07:26,630:INFO:HuberRegressor()
2024-05-17 20:07:26,630:INFO:create_model() successfully completed......................................
2024-05-17 20:07:26,734:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:26,734:INFO:Creating metrics dataframe
2024-05-17 20:07:26,748:INFO:Initializing K Neighbors Regressor
2024-05-17 20:07:26,750:INFO:Total runtime is 0.2603092352549235 minutes
2024-05-17 20:07:26,755:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:26,756:INFO:Initializing create_model()
2024-05-17 20:07:26,756:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:26,757:INFO:Checking exceptions
2024-05-17 20:07:26,757:INFO:Importing libraries
2024-05-17 20:07:26,757:INFO:Copying training dataset
2024-05-17 20:07:26,768:INFO:Defining folds
2024-05-17 20:07:26,768:INFO:Declaring metric variables
2024-05-17 20:07:26,773:INFO:Importing untrained model
2024-05-17 20:07:26,782:INFO:K Neighbors Regressor Imported successfully
2024-05-17 20:07:26,794:INFO:Starting cross validation
2024-05-17 20:07:26,797:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:26,981:INFO:Calculating mean and std
2024-05-17 20:07:26,984:INFO:Creating metrics dataframe
2024-05-17 20:07:26,988:INFO:Uploading results into container
2024-05-17 20:07:26,989:INFO:Uploading model into container now
2024-05-17 20:07:26,990:INFO:_master_model_container: 11
2024-05-17 20:07:26,990:INFO:_display_container: 2
2024-05-17 20:07:26,991:INFO:KNeighborsRegressor(n_jobs=-1)
2024-05-17 20:07:26,992:INFO:create_model() successfully completed......................................
2024-05-17 20:07:27,105:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:27,105:INFO:Creating metrics dataframe
2024-05-17 20:07:27,127:INFO:Initializing Decision Tree Regressor
2024-05-17 20:07:27,127:INFO:Total runtime is 0.26660377581914263 minutes
2024-05-17 20:07:27,134:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:27,135:INFO:Initializing create_model()
2024-05-17 20:07:27,135:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:27,136:INFO:Checking exceptions
2024-05-17 20:07:27,136:INFO:Importing libraries
2024-05-17 20:07:27,136:INFO:Copying training dataset
2024-05-17 20:07:27,144:INFO:Defining folds
2024-05-17 20:07:27,144:INFO:Declaring metric variables
2024-05-17 20:07:27,151:INFO:Importing untrained model
2024-05-17 20:07:27,159:INFO:Decision Tree Regressor Imported successfully
2024-05-17 20:07:27,177:INFO:Starting cross validation
2024-05-17 20:07:27,180:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:27,333:INFO:Calculating mean and std
2024-05-17 20:07:27,336:INFO:Creating metrics dataframe
2024-05-17 20:07:27,345:INFO:Uploading results into container
2024-05-17 20:07:27,347:INFO:Uploading model into container now
2024-05-17 20:07:27,347:INFO:_master_model_container: 12
2024-05-17 20:07:27,347:INFO:_display_container: 2
2024-05-17 20:07:27,349:INFO:DecisionTreeRegressor(random_state=123)
2024-05-17 20:07:27,349:INFO:create_model() successfully completed......................................
2024-05-17 20:07:27,466:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:27,466:INFO:Creating metrics dataframe
2024-05-17 20:07:27,486:INFO:Initializing Random Forest Regressor
2024-05-17 20:07:27,486:INFO:Total runtime is 0.2725860476493835 minutes
2024-05-17 20:07:27,494:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:27,495:INFO:Initializing create_model()
2024-05-17 20:07:27,496:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:27,496:INFO:Checking exceptions
2024-05-17 20:07:27,496:INFO:Importing libraries
2024-05-17 20:07:27,496:INFO:Copying training dataset
2024-05-17 20:07:27,504:INFO:Defining folds
2024-05-17 20:07:27,504:INFO:Declaring metric variables
2024-05-17 20:07:27,518:INFO:Importing untrained model
2024-05-17 20:07:27,526:INFO:Random Forest Regressor Imported successfully
2024-05-17 20:07:27,542:INFO:Starting cross validation
2024-05-17 20:07:27,544:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:29,618:INFO:Calculating mean and std
2024-05-17 20:07:29,621:INFO:Creating metrics dataframe
2024-05-17 20:07:29,631:INFO:Uploading results into container
2024-05-17 20:07:29,632:INFO:Uploading model into container now
2024-05-17 20:07:29,633:INFO:_master_model_container: 13
2024-05-17 20:07:29,633:INFO:_display_container: 2
2024-05-17 20:07:29,634:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:07:29,634:INFO:create_model() successfully completed......................................
2024-05-17 20:07:29,756:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:29,756:INFO:Creating metrics dataframe
2024-05-17 20:07:29,781:INFO:Initializing Extra Trees Regressor
2024-05-17 20:07:29,781:INFO:Total runtime is 0.31084198951721187 minutes
2024-05-17 20:07:29,788:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:29,789:INFO:Initializing create_model()
2024-05-17 20:07:29,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:29,790:INFO:Checking exceptions
2024-05-17 20:07:29,790:INFO:Importing libraries
2024-05-17 20:07:29,790:INFO:Copying training dataset
2024-05-17 20:07:29,802:INFO:Defining folds
2024-05-17 20:07:29,802:INFO:Declaring metric variables
2024-05-17 20:07:29,810:INFO:Importing untrained model
2024-05-17 20:07:29,827:INFO:Extra Trees Regressor Imported successfully
2024-05-17 20:07:29,845:INFO:Starting cross validation
2024-05-17 20:07:29,848:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:31,156:INFO:Calculating mean and std
2024-05-17 20:07:31,161:INFO:Creating metrics dataframe
2024-05-17 20:07:31,167:INFO:Uploading results into container
2024-05-17 20:07:31,168:INFO:Uploading model into container now
2024-05-17 20:07:31,169:INFO:_master_model_container: 14
2024-05-17 20:07:31,169:INFO:_display_container: 2
2024-05-17 20:07:31,170:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:07:31,170:INFO:create_model() successfully completed......................................
2024-05-17 20:07:31,287:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:31,287:INFO:Creating metrics dataframe
2024-05-17 20:07:31,304:INFO:Initializing AdaBoost Regressor
2024-05-17 20:07:31,304:INFO:Total runtime is 0.33622120221455887 minutes
2024-05-17 20:07:31,313:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:31,314:INFO:Initializing create_model()
2024-05-17 20:07:31,314:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:31,314:INFO:Checking exceptions
2024-05-17 20:07:31,314:INFO:Importing libraries
2024-05-17 20:07:31,315:INFO:Copying training dataset
2024-05-17 20:07:31,324:INFO:Defining folds
2024-05-17 20:07:31,324:INFO:Declaring metric variables
2024-05-17 20:07:31,333:INFO:Importing untrained model
2024-05-17 20:07:31,341:INFO:AdaBoost Regressor Imported successfully
2024-05-17 20:07:31,361:INFO:Starting cross validation
2024-05-17 20:07:31,364:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:31,907:INFO:Calculating mean and std
2024-05-17 20:07:31,910:INFO:Creating metrics dataframe
2024-05-17 20:07:31,916:INFO:Uploading results into container
2024-05-17 20:07:31,917:INFO:Uploading model into container now
2024-05-17 20:07:31,918:INFO:_master_model_container: 15
2024-05-17 20:07:31,918:INFO:_display_container: 2
2024-05-17 20:07:31,919:INFO:AdaBoostRegressor(random_state=123)
2024-05-17 20:07:31,920:INFO:create_model() successfully completed......................................
2024-05-17 20:07:32,035:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:32,035:INFO:Creating metrics dataframe
2024-05-17 20:07:32,053:INFO:Initializing Gradient Boosting Regressor
2024-05-17 20:07:32,053:INFO:Total runtime is 0.34870656728744504 minutes
2024-05-17 20:07:32,061:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:32,062:INFO:Initializing create_model()
2024-05-17 20:07:32,062:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:32,062:INFO:Checking exceptions
2024-05-17 20:07:32,062:INFO:Importing libraries
2024-05-17 20:07:32,062:INFO:Copying training dataset
2024-05-17 20:07:32,070:INFO:Defining folds
2024-05-17 20:07:32,070:INFO:Declaring metric variables
2024-05-17 20:07:32,077:INFO:Importing untrained model
2024-05-17 20:07:32,085:INFO:Gradient Boosting Regressor Imported successfully
2024-05-17 20:07:32,101:INFO:Starting cross validation
2024-05-17 20:07:32,102:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:33,370:INFO:Calculating mean and std
2024-05-17 20:07:33,373:INFO:Creating metrics dataframe
2024-05-17 20:07:33,377:INFO:Uploading results into container
2024-05-17 20:07:33,378:INFO:Uploading model into container now
2024-05-17 20:07:33,380:INFO:_master_model_container: 16
2024-05-17 20:07:33,380:INFO:_display_container: 2
2024-05-17 20:07:33,380:INFO:GradientBoostingRegressor(random_state=123)
2024-05-17 20:07:33,381:INFO:create_model() successfully completed......................................
2024-05-17 20:07:33,488:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:33,488:INFO:Creating metrics dataframe
2024-05-17 20:07:33,514:INFO:Initializing Extreme Gradient Boosting
2024-05-17 20:07:33,514:INFO:Total runtime is 0.37304483652114867 minutes
2024-05-17 20:07:33,520:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:33,520:INFO:Initializing create_model()
2024-05-17 20:07:33,520:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:33,520:INFO:Checking exceptions
2024-05-17 20:07:33,520:INFO:Importing libraries
2024-05-17 20:07:33,521:INFO:Copying training dataset
2024-05-17 20:07:33,530:INFO:Defining folds
2024-05-17 20:07:33,531:INFO:Declaring metric variables
2024-05-17 20:07:33,535:INFO:Importing untrained model
2024-05-17 20:07:33,542:INFO:Extreme Gradient Boosting Imported successfully
2024-05-17 20:07:33,555:INFO:Starting cross validation
2024-05-17 20:07:33,558:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:34,630:INFO:Calculating mean and std
2024-05-17 20:07:34,632:INFO:Creating metrics dataframe
2024-05-17 20:07:34,637:INFO:Uploading results into container
2024-05-17 20:07:34,638:INFO:Uploading model into container now
2024-05-17 20:07:34,639:INFO:_master_model_container: 17
2024-05-17 20:07:34,639:INFO:_display_container: 2
2024-05-17 20:07:34,642:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             predictor=None, random_state=123, ...)
2024-05-17 20:07:34,642:INFO:create_model() successfully completed......................................
2024-05-17 20:07:34,751:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:34,751:INFO:Creating metrics dataframe
2024-05-17 20:07:34,771:INFO:Initializing Light Gradient Boosting Machine
2024-05-17 20:07:34,772:INFO:Total runtime is 0.3940153360366821 minutes
2024-05-17 20:07:34,779:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:34,781:INFO:Initializing create_model()
2024-05-17 20:07:34,781:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:34,782:INFO:Checking exceptions
2024-05-17 20:07:34,782:INFO:Importing libraries
2024-05-17 20:07:34,782:INFO:Copying training dataset
2024-05-17 20:07:34,794:INFO:Defining folds
2024-05-17 20:07:34,795:INFO:Declaring metric variables
2024-05-17 20:07:34,802:INFO:Importing untrained model
2024-05-17 20:07:34,809:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-17 20:07:34,828:INFO:Starting cross validation
2024-05-17 20:07:34,832:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:36,907:INFO:Calculating mean and std
2024-05-17 20:07:36,909:INFO:Creating metrics dataframe
2024-05-17 20:07:36,917:INFO:Uploading results into container
2024-05-17 20:07:36,918:INFO:Uploading model into container now
2024-05-17 20:07:36,918:INFO:_master_model_container: 18
2024-05-17 20:07:36,919:INFO:_display_container: 2
2024-05-17 20:07:36,919:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:07:36,920:INFO:create_model() successfully completed......................................
2024-05-17 20:07:37,080:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:37,080:INFO:Creating metrics dataframe
2024-05-17 20:07:37,112:INFO:Initializing CatBoost Regressor
2024-05-17 20:07:37,113:INFO:Total runtime is 0.4330309152603149 minutes
2024-05-17 20:07:37,118:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:37,119:INFO:Initializing create_model()
2024-05-17 20:07:37,120:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:37,120:INFO:Checking exceptions
2024-05-17 20:07:37,120:INFO:Importing libraries
2024-05-17 20:07:37,120:INFO:Copying training dataset
2024-05-17 20:07:37,132:INFO:Defining folds
2024-05-17 20:07:37,133:INFO:Declaring metric variables
2024-05-17 20:07:37,141:INFO:Importing untrained model
2024-05-17 20:07:37,150:INFO:CatBoost Regressor Imported successfully
2024-05-17 20:07:37,168:INFO:Starting cross validation
2024-05-17 20:07:37,170:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:53,455:INFO:Calculating mean and std
2024-05-17 20:07:53,457:INFO:Creating metrics dataframe
2024-05-17 20:07:53,463:INFO:Uploading results into container
2024-05-17 20:07:53,465:INFO:Uploading model into container now
2024-05-17 20:07:53,466:INFO:_master_model_container: 19
2024-05-17 20:07:53,467:INFO:_display_container: 2
2024-05-17 20:07:53,467:INFO:<catboost.core.CatBoostRegressor object at 0x00000235B6C655E0>
2024-05-17 20:07:53,467:INFO:create_model() successfully completed......................................
2024-05-17 20:07:53,590:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:53,591:INFO:Creating metrics dataframe
2024-05-17 20:07:53,622:INFO:Initializing Dummy Regressor
2024-05-17 20:07:53,622:INFO:Total runtime is 0.708191704750061 minutes
2024-05-17 20:07:53,629:INFO:SubProcess create_model() called ==================================
2024-05-17 20:07:53,630:INFO:Initializing create_model()
2024-05-17 20:07:53,630:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B7105A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:53,631:INFO:Checking exceptions
2024-05-17 20:07:53,631:INFO:Importing libraries
2024-05-17 20:07:53,631:INFO:Copying training dataset
2024-05-17 20:07:53,644:INFO:Defining folds
2024-05-17 20:07:53,644:INFO:Declaring metric variables
2024-05-17 20:07:53,654:INFO:Importing untrained model
2024-05-17 20:07:53,661:INFO:Dummy Regressor Imported successfully
2024-05-17 20:07:53,679:INFO:Starting cross validation
2024-05-17 20:07:53,684:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:07:53,828:INFO:Calculating mean and std
2024-05-17 20:07:53,835:INFO:Creating metrics dataframe
2024-05-17 20:07:53,841:INFO:Uploading results into container
2024-05-17 20:07:53,842:INFO:Uploading model into container now
2024-05-17 20:07:53,844:INFO:_master_model_container: 20
2024-05-17 20:07:53,844:INFO:_display_container: 2
2024-05-17 20:07:53,844:INFO:DummyRegressor()
2024-05-17 20:07:53,844:INFO:create_model() successfully completed......................................
2024-05-17 20:07:53,964:INFO:SubProcess create_model() end ==================================
2024-05-17 20:07:53,965:INFO:Creating metrics dataframe
2024-05-17 20:07:54,009:INFO:Initializing create_model()
2024-05-17 20:07:54,010:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:07:54,010:INFO:Checking exceptions
2024-05-17 20:07:54,015:INFO:Importing libraries
2024-05-17 20:07:54,015:INFO:Copying training dataset
2024-05-17 20:07:54,024:INFO:Defining folds
2024-05-17 20:07:54,024:INFO:Declaring metric variables
2024-05-17 20:07:54,025:INFO:Importing untrained model
2024-05-17 20:07:54,025:INFO:Declaring custom model
2024-05-17 20:07:54,027:INFO:Extra Trees Regressor Imported successfully
2024-05-17 20:07:54,030:INFO:Cross validation set to False
2024-05-17 20:07:54,030:INFO:Fitting Model
2024-05-17 20:07:54,219:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:07:54,219:INFO:create_model() successfully completed......................................
2024-05-17 20:07:54,382:INFO:_master_model_container: 20
2024-05-17 20:07:54,383:INFO:_display_container: 2
2024-05-17 20:07:54,384:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:07:54,384:INFO:compare_models() successfully completed......................................
2024-05-17 20:07:54,537:INFO:Initializing predict_model()
2024-05-17 20:07:54,537:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002356E4F3820>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000235B82704C0>)
2024-05-17 20:07:54,538:INFO:Checking exceptions
2024-05-17 20:07:54,538:INFO:Preloading libraries
2024-05-17 20:07:54,685:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-05-17 20:15:28,617:INFO:PyCaret RegressionExperiment
2024-05-17 20:15:28,618:INFO:Logging name: reg-default-name
2024-05-17 20:15:28,618:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-17 20:15:28,618:INFO:version 3.3.2
2024-05-17 20:15:28,618:INFO:Initializing setup()
2024-05-17 20:15:28,618:INFO:self.USI: 2366
2024-05-17 20:15:28,618:INFO:self._variable_keys: {'memory', 'y_train', 'n_jobs_param', 'data', 'seed', 'target_param', 'transform_target_param', '_available_plots', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'gpu_param', 'idx', 'exp_name_log', 'log_plots_param', 'fold_generator', 'html_param', 'pipeline', 'fold_shuffle_param', 'X_test', 'y', 'X_train', 'exp_id', 'X', 'fold_groups_param', 'y_test', 'USI'}
2024-05-17 20:15:28,618:INFO:Checking environment
2024-05-17 20:15:28,618:INFO:python_version: 3.9.12
2024-05-17 20:15:28,618:INFO:python_build: ('main', 'Mar 24 2022 23:17:03')
2024-05-17 20:15:28,618:INFO:machine: AMD64
2024-05-17 20:15:28,618:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-17 20:15:28,626:INFO:Memory: svmem(total=16910155776, available=3990487040, percent=76.4, used=12919668736, free=3990487040)
2024-05-17 20:15:28,626:INFO:Physical Core: 4
2024-05-17 20:15:28,627:INFO:Logical Core: 8
2024-05-17 20:15:28,627:INFO:Checking libraries
2024-05-17 20:15:28,627:INFO:System:
2024-05-17 20:15:28,627:INFO:    python: 3.9.12 | packaged by conda-forge | (main, Mar 24 2022, 23:17:03) [MSC v.1929 64 bit (AMD64)]
2024-05-17 20:15:28,627:INFO:executable: c:\Program Files\Orange\python.exe
2024-05-17 20:15:28,627:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-17 20:15:28,627:INFO:PyCaret required dependencies:
2024-05-17 20:15:28,627:INFO:                 pip: 22.3.1
2024-05-17 20:15:28,627:INFO:          setuptools: 65.5.1
2024-05-17 20:15:28,627:INFO:             pycaret: 3.3.2
2024-05-17 20:15:28,627:INFO:             IPython: 8.4.0
2024-05-17 20:15:28,627:INFO:          ipywidgets: 7.7.1
2024-05-17 20:15:28,627:INFO:                tqdm: 4.66.2
2024-05-17 20:15:28,627:INFO:               numpy: 1.23.5
2024-05-17 20:15:28,627:INFO:              pandas: 1.4.4
2024-05-17 20:15:28,627:INFO:              jinja2: 3.1.2
2024-05-17 20:15:28,628:INFO:               scipy: 1.9.3
2024-05-17 20:15:28,628:INFO:              joblib: 1.2.0
2024-05-17 20:15:28,628:INFO:             sklearn: 1.1.3
2024-05-17 20:15:28,628:INFO:                pyod: 1.1.3
2024-05-17 20:15:28,628:INFO:            imblearn: 0.12.2
2024-05-17 20:15:28,628:INFO:   category_encoders: 2.6.3
2024-05-17 20:15:28,628:INFO:            lightgbm: 4.3.0
2024-05-17 20:15:28,628:INFO:               numba: 0.59.1
2024-05-17 20:15:28,628:INFO:            requests: 2.28.1
2024-05-17 20:15:28,628:INFO:          matplotlib: 3.6.2
2024-05-17 20:15:28,628:INFO:          scikitplot: 0.3.7
2024-05-17 20:15:28,628:INFO:         yellowbrick: 1.5
2024-05-17 20:15:28,628:INFO:              plotly: 5.11.0
2024-05-17 20:15:28,628:INFO:    plotly-resampler: Not installed
2024-05-17 20:15:28,628:INFO:             kaleido: 0.2.1
2024-05-17 20:15:28,628:INFO:           schemdraw: 0.15
2024-05-17 20:15:28,628:INFO:         statsmodels: 0.14.2
2024-05-17 20:15:28,628:INFO:              sktime: 0.26.0
2024-05-17 20:15:28,628:INFO:               tbats: 1.1.3
2024-05-17 20:15:28,628:INFO:            pmdarima: 2.0.4
2024-05-17 20:15:28,628:INFO:              psutil: 5.9.4
2024-05-17 20:15:28,628:INFO:          markupsafe: 2.1.2
2024-05-17 20:15:28,628:INFO:             pickle5: Not installed
2024-05-17 20:15:28,628:INFO:         cloudpickle: 3.0.0
2024-05-17 20:15:28,628:INFO:         deprecation: 2.1.0
2024-05-17 20:15:28,628:INFO:              xxhash: 3.4.1
2024-05-17 20:15:28,628:INFO:           wurlitzer: Not installed
2024-05-17 20:15:28,629:INFO:PyCaret optional dependencies:
2024-05-17 20:15:28,629:INFO:                shap: Not installed
2024-05-17 20:15:28,629:INFO:           interpret: Not installed
2024-05-17 20:15:28,629:INFO:                umap: Not installed
2024-05-17 20:15:28,629:INFO:     ydata_profiling: Not installed
2024-05-17 20:15:28,629:INFO:  explainerdashboard: Not installed
2024-05-17 20:15:28,629:INFO:             autoviz: Not installed
2024-05-17 20:15:28,629:INFO:           fairlearn: Not installed
2024-05-17 20:15:28,629:INFO:          deepchecks: Not installed
2024-05-17 20:15:28,629:INFO:             xgboost: 1.7.1
2024-05-17 20:15:28,629:INFO:            catboost: 1.1.1
2024-05-17 20:15:28,629:INFO:              kmodes: Not installed
2024-05-17 20:15:28,630:INFO:             mlxtend: Not installed
2024-05-17 20:15:28,630:INFO:       statsforecast: Not installed
2024-05-17 20:15:28,630:INFO:        tune_sklearn: Not installed
2024-05-17 20:15:28,630:INFO:                 ray: Not installed
2024-05-17 20:15:28,630:INFO:            hyperopt: Not installed
2024-05-17 20:15:28,630:INFO:              optuna: Not installed
2024-05-17 20:15:28,630:INFO:               skopt: Not installed
2024-05-17 20:15:28,630:INFO:              mlflow: Not installed
2024-05-17 20:15:28,630:INFO:              gradio: Not installed
2024-05-17 20:15:28,630:INFO:             fastapi: Not installed
2024-05-17 20:15:28,630:INFO:             uvicorn: Not installed
2024-05-17 20:15:28,630:INFO:              m2cgen: Not installed
2024-05-17 20:15:28,630:INFO:           evidently: Not installed
2024-05-17 20:15:28,630:INFO:               fugue: Not installed
2024-05-17 20:15:28,630:INFO:           streamlit: Not installed
2024-05-17 20:15:28,631:INFO:             prophet: Not installed
2024-05-17 20:15:28,631:INFO:None
2024-05-17 20:15:28,631:INFO:Set up data.
2024-05-17 20:15:28,645:INFO:Set up folding strategy.
2024-05-17 20:15:28,646:INFO:Set up train/test split.
2024-05-17 20:15:28,654:INFO:Set up index.
2024-05-17 20:16:09,803:INFO:PyCaret RegressionExperiment
2024-05-17 20:16:09,804:INFO:Logging name: reg-default-name
2024-05-17 20:16:09,804:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-17 20:16:09,804:INFO:version 3.3.2
2024-05-17 20:16:09,804:INFO:Initializing setup()
2024-05-17 20:16:09,804:INFO:self.USI: fcda
2024-05-17 20:16:09,804:INFO:self._variable_keys: {'memory', 'y_train', 'n_jobs_param', 'data', 'seed', 'target_param', 'transform_target_param', '_available_plots', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'gpu_param', 'idx', 'exp_name_log', 'log_plots_param', 'fold_generator', 'html_param', 'pipeline', 'fold_shuffle_param', 'X_test', 'y', 'X_train', 'exp_id', 'X', 'fold_groups_param', 'y_test', 'USI'}
2024-05-17 20:16:09,805:INFO:Checking environment
2024-05-17 20:16:09,805:INFO:python_version: 3.9.12
2024-05-17 20:16:09,805:INFO:python_build: ('main', 'Mar 24 2022 23:17:03')
2024-05-17 20:16:09,805:INFO:machine: AMD64
2024-05-17 20:16:09,805:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-17 20:16:09,815:INFO:Memory: svmem(total=16910155776, available=3936067584, percent=76.7, used=12974088192, free=3936067584)
2024-05-17 20:16:09,815:INFO:Physical Core: 4
2024-05-17 20:16:09,815:INFO:Logical Core: 8
2024-05-17 20:16:09,815:INFO:Checking libraries
2024-05-17 20:16:09,815:INFO:System:
2024-05-17 20:16:09,815:INFO:    python: 3.9.12 | packaged by conda-forge | (main, Mar 24 2022, 23:17:03) [MSC v.1929 64 bit (AMD64)]
2024-05-17 20:16:09,815:INFO:executable: c:\Program Files\Orange\python.exe
2024-05-17 20:16:09,816:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-17 20:16:09,816:INFO:PyCaret required dependencies:
2024-05-17 20:16:09,816:INFO:                 pip: 22.3.1
2024-05-17 20:16:09,816:INFO:          setuptools: 65.5.1
2024-05-17 20:16:09,816:INFO:             pycaret: 3.3.2
2024-05-17 20:16:09,816:INFO:             IPython: 8.4.0
2024-05-17 20:16:09,816:INFO:          ipywidgets: 7.7.1
2024-05-17 20:16:09,816:INFO:                tqdm: 4.66.2
2024-05-17 20:16:09,816:INFO:               numpy: 1.23.5
2024-05-17 20:16:09,816:INFO:              pandas: 1.4.4
2024-05-17 20:16:09,816:INFO:              jinja2: 3.1.2
2024-05-17 20:16:09,816:INFO:               scipy: 1.9.3
2024-05-17 20:16:09,816:INFO:              joblib: 1.2.0
2024-05-17 20:16:09,816:INFO:             sklearn: 1.1.3
2024-05-17 20:16:09,816:INFO:                pyod: 1.1.3
2024-05-17 20:16:09,816:INFO:            imblearn: 0.12.2
2024-05-17 20:16:09,816:INFO:   category_encoders: 2.6.3
2024-05-17 20:16:09,816:INFO:            lightgbm: 4.3.0
2024-05-17 20:16:09,816:INFO:               numba: 0.59.1
2024-05-17 20:16:09,817:INFO:            requests: 2.28.1
2024-05-17 20:16:09,817:INFO:          matplotlib: 3.6.2
2024-05-17 20:16:09,817:INFO:          scikitplot: 0.3.7
2024-05-17 20:16:09,817:INFO:         yellowbrick: 1.5
2024-05-17 20:16:09,817:INFO:              plotly: 5.11.0
2024-05-17 20:16:09,817:INFO:    plotly-resampler: Not installed
2024-05-17 20:16:09,817:INFO:             kaleido: 0.2.1
2024-05-17 20:16:09,817:INFO:           schemdraw: 0.15
2024-05-17 20:16:09,817:INFO:         statsmodels: 0.14.2
2024-05-17 20:16:09,817:INFO:              sktime: 0.26.0
2024-05-17 20:16:09,817:INFO:               tbats: 1.1.3
2024-05-17 20:16:09,817:INFO:            pmdarima: 2.0.4
2024-05-17 20:16:09,817:INFO:              psutil: 5.9.4
2024-05-17 20:16:09,817:INFO:          markupsafe: 2.1.2
2024-05-17 20:16:09,817:INFO:             pickle5: Not installed
2024-05-17 20:16:09,817:INFO:         cloudpickle: 3.0.0
2024-05-17 20:16:09,818:INFO:         deprecation: 2.1.0
2024-05-17 20:16:09,818:INFO:              xxhash: 3.4.1
2024-05-17 20:16:09,818:INFO:           wurlitzer: Not installed
2024-05-17 20:16:09,818:INFO:PyCaret optional dependencies:
2024-05-17 20:16:09,818:INFO:                shap: Not installed
2024-05-17 20:16:09,818:INFO:           interpret: Not installed
2024-05-17 20:16:09,818:INFO:                umap: Not installed
2024-05-17 20:16:09,818:INFO:     ydata_profiling: Not installed
2024-05-17 20:16:09,818:INFO:  explainerdashboard: Not installed
2024-05-17 20:16:09,818:INFO:             autoviz: Not installed
2024-05-17 20:16:09,819:INFO:           fairlearn: Not installed
2024-05-17 20:16:09,819:INFO:          deepchecks: Not installed
2024-05-17 20:16:09,819:INFO:             xgboost: 1.7.1
2024-05-17 20:16:09,819:INFO:            catboost: 1.1.1
2024-05-17 20:16:09,819:INFO:              kmodes: Not installed
2024-05-17 20:16:09,819:INFO:             mlxtend: Not installed
2024-05-17 20:16:09,819:INFO:       statsforecast: Not installed
2024-05-17 20:16:09,819:INFO:        tune_sklearn: Not installed
2024-05-17 20:16:09,819:INFO:                 ray: Not installed
2024-05-17 20:16:09,819:INFO:            hyperopt: Not installed
2024-05-17 20:16:09,819:INFO:              optuna: Not installed
2024-05-17 20:16:09,819:INFO:               skopt: Not installed
2024-05-17 20:16:09,819:INFO:              mlflow: Not installed
2024-05-17 20:16:09,820:INFO:              gradio: Not installed
2024-05-17 20:16:09,820:INFO:             fastapi: Not installed
2024-05-17 20:16:09,820:INFO:             uvicorn: Not installed
2024-05-17 20:16:09,820:INFO:              m2cgen: Not installed
2024-05-17 20:16:09,820:INFO:           evidently: Not installed
2024-05-17 20:16:09,820:INFO:               fugue: Not installed
2024-05-17 20:16:09,820:INFO:           streamlit: Not installed
2024-05-17 20:16:09,820:INFO:             prophet: Not installed
2024-05-17 20:16:09,820:INFO:None
2024-05-17 20:16:09,820:INFO:Set up data.
2024-05-17 20:16:09,828:INFO:Set up folding strategy.
2024-05-17 20:16:09,828:INFO:Set up train/test split.
2024-05-17 20:16:09,837:INFO:Set up index.
2024-05-17 20:16:09,837:INFO:Assigning column types.
2024-05-17 20:16:09,841:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-17 20:16:09,842:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-17 20:16:09,850:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 20:16:09,859:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:16:09,973:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,040:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,042:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:10,048:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:10,049:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,060:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,069:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,160:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,219:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:10,222:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:10,223:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-17 20:16:10,231:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,237:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,338:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,394:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,400:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:10,406:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:10,417:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,427:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,510:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,569:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,569:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:10,572:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:10,573:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-17 20:16:10,584:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,652:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,706:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,706:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:10,709:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:10,722:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,803:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,875:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:16:10,876:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:10,882:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:10,883:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-17 20:16:10,983:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:16:11,042:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:16:11,042:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:11,048:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:11,140:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:16:11,199:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-17 20:16:11,200:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:11,203:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:11,204:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-17 20:16:11,326:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:16:11,387:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:11,390:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:11,516:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-17 20:16:11,587:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:11,593:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:11,594:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-17 20:16:11,754:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:11,760:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:11,914:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:11,917:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:11,919:INFO:Preparing preprocessing pipeline...
2024-05-17 20:16:11,919:INFO:Set up simple imputation.
2024-05-17 20:16:11,942:INFO:Finished creating preprocessing pipeline.
2024-05-17 20:16:11,947:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lowPrice', 'highPrice',
                                             'closeTime', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-05-17 20:16:11,947:INFO:Creating final display dataframe.
2024-05-17 20:16:12,038:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         lastPrice
2                   Target type        Regression
3           Original data shape         (9563, 9)
4        Transformed data shape         (9563, 5)
5   Transformed train set shape         (6694, 5)
6    Transformed test set shape         (2869, 5)
7               Ignore features                 4
8              Numeric features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              fcda
2024-05-17 20:16:12,215:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:12,222:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:12,380:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-17 20:16:12,385:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-17 20:16:12,386:INFO:setup() successfully completed in 2.59s...............
2024-05-17 20:16:12,388:INFO:Initializing compare_models()
2024-05-17 20:16:12,388:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-05-17 20:16:12,388:INFO:Checking exceptions
2024-05-17 20:16:12,390:INFO:Preparing display monitor
2024-05-17 20:16:12,449:INFO:Initializing Linear Regression
2024-05-17 20:16:12,450:INFO:Total runtime is 1.6673405965169272e-05 minutes
2024-05-17 20:16:12,458:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:12,459:INFO:Initializing create_model()
2024-05-17 20:16:12,459:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:12,459:INFO:Checking exceptions
2024-05-17 20:16:12,459:INFO:Importing libraries
2024-05-17 20:16:12,459:INFO:Copying training dataset
2024-05-17 20:16:12,467:INFO:Defining folds
2024-05-17 20:16:12,467:INFO:Declaring metric variables
2024-05-17 20:16:12,474:INFO:Importing untrained model
2024-05-17 20:16:12,485:INFO:Linear Regression Imported successfully
2024-05-17 20:16:12,502:INFO:Starting cross validation
2024-05-17 20:16:12,503:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:23,863:INFO:Calculating mean and std
2024-05-17 20:16:23,869:INFO:Creating metrics dataframe
2024-05-17 20:16:23,877:INFO:Uploading results into container
2024-05-17 20:16:23,880:INFO:Uploading model into container now
2024-05-17 20:16:23,882:INFO:_master_model_container: 1
2024-05-17 20:16:23,882:INFO:_display_container: 2
2024-05-17 20:16:23,883:INFO:LinearRegression(n_jobs=-1)
2024-05-17 20:16:23,884:INFO:create_model() successfully completed......................................
2024-05-17 20:16:24,112:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:24,113:INFO:Creating metrics dataframe
2024-05-17 20:16:24,135:INFO:Initializing Lasso Regression
2024-05-17 20:16:24,135:INFO:Total runtime is 0.19475796620051067 minutes
2024-05-17 20:16:24,142:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:24,143:INFO:Initializing create_model()
2024-05-17 20:16:24,143:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:24,143:INFO:Checking exceptions
2024-05-17 20:16:24,144:INFO:Importing libraries
2024-05-17 20:16:24,144:INFO:Copying training dataset
2024-05-17 20:16:24,157:INFO:Defining folds
2024-05-17 20:16:24,158:INFO:Declaring metric variables
2024-05-17 20:16:24,171:INFO:Importing untrained model
2024-05-17 20:16:24,181:INFO:Lasso Regression Imported successfully
2024-05-17 20:16:24,202:INFO:Starting cross validation
2024-05-17 20:16:24,205:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:24,369:INFO:Calculating mean and std
2024-05-17 20:16:24,371:INFO:Creating metrics dataframe
2024-05-17 20:16:24,376:INFO:Uploading results into container
2024-05-17 20:16:24,377:INFO:Uploading model into container now
2024-05-17 20:16:24,378:INFO:_master_model_container: 2
2024-05-17 20:16:24,379:INFO:_display_container: 2
2024-05-17 20:16:24,380:INFO:Lasso(random_state=123)
2024-05-17 20:16:24,380:INFO:create_model() successfully completed......................................
2024-05-17 20:16:24,544:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:24,544:INFO:Creating metrics dataframe
2024-05-17 20:16:24,565:INFO:Initializing Ridge Regression
2024-05-17 20:16:24,565:INFO:Total runtime is 0.20193097988764447 minutes
2024-05-17 20:16:24,575:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:24,576:INFO:Initializing create_model()
2024-05-17 20:16:24,576:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:24,576:INFO:Checking exceptions
2024-05-17 20:16:24,576:INFO:Importing libraries
2024-05-17 20:16:24,576:INFO:Copying training dataset
2024-05-17 20:16:24,586:INFO:Defining folds
2024-05-17 20:16:24,587:INFO:Declaring metric variables
2024-05-17 20:16:24,593:INFO:Importing untrained model
2024-05-17 20:16:24,608:INFO:Ridge Regression Imported successfully
2024-05-17 20:16:24,624:INFO:Starting cross validation
2024-05-17 20:16:24,626:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:24,675:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.57581e-12): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 20:16:24,683:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.69253e-12): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 20:16:24,691:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.57917e-12): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 20:16:24,701:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.6307e-12): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 20:16:24,709:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.63267e-12): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 20:16:24,716:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.55483e-12): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 20:16:24,726:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.62161e-12): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 20:16:24,734:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.64933e-12): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 20:16:24,741:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.61002e-12): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 20:16:24,748:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.54214e-12): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-05-17 20:16:24,763:INFO:Calculating mean and std
2024-05-17 20:16:24,768:INFO:Creating metrics dataframe
2024-05-17 20:16:24,773:INFO:Uploading results into container
2024-05-17 20:16:24,774:INFO:Uploading model into container now
2024-05-17 20:16:24,775:INFO:_master_model_container: 3
2024-05-17 20:16:24,775:INFO:_display_container: 2
2024-05-17 20:16:24,776:INFO:Ridge(random_state=123)
2024-05-17 20:16:24,776:INFO:create_model() successfully completed......................................
2024-05-17 20:16:24,911:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:24,911:INFO:Creating metrics dataframe
2024-05-17 20:16:24,928:INFO:Initializing Elastic Net
2024-05-17 20:16:24,928:INFO:Total runtime is 0.20796828269958498 minutes
2024-05-17 20:16:24,935:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:24,936:INFO:Initializing create_model()
2024-05-17 20:16:24,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:24,936:INFO:Checking exceptions
2024-05-17 20:16:24,936:INFO:Importing libraries
2024-05-17 20:16:24,936:INFO:Copying training dataset
2024-05-17 20:16:24,944:INFO:Defining folds
2024-05-17 20:16:24,944:INFO:Declaring metric variables
2024-05-17 20:16:24,955:INFO:Importing untrained model
2024-05-17 20:16:24,963:INFO:Elastic Net Imported successfully
2024-05-17 20:16:24,980:INFO:Starting cross validation
2024-05-17 20:16:24,982:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:25,092:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.089e+07, tolerance: 1.711e+04
  model = cd_fast.enet_coordinate_descent(

2024-05-17 20:16:25,111:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.110e+07, tolerance: 1.725e+04
  model = cd_fast.enet_coordinate_descent(

2024-05-17 20:16:25,137:INFO:Calculating mean and std
2024-05-17 20:16:25,139:INFO:Creating metrics dataframe
2024-05-17 20:16:25,144:INFO:Uploading results into container
2024-05-17 20:16:25,144:INFO:Uploading model into container now
2024-05-17 20:16:25,145:INFO:_master_model_container: 4
2024-05-17 20:16:25,146:INFO:_display_container: 2
2024-05-17 20:16:25,148:INFO:ElasticNet(random_state=123)
2024-05-17 20:16:25,148:INFO:create_model() successfully completed......................................
2024-05-17 20:16:25,299:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:25,299:INFO:Creating metrics dataframe
2024-05-17 20:16:25,314:INFO:Initializing Least Angle Regression
2024-05-17 20:16:25,315:INFO:Total runtime is 0.21443056662877402 minutes
2024-05-17 20:16:25,321:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:25,321:INFO:Initializing create_model()
2024-05-17 20:16:25,322:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:25,322:INFO:Checking exceptions
2024-05-17 20:16:25,322:INFO:Importing libraries
2024-05-17 20:16:25,322:INFO:Copying training dataset
2024-05-17 20:16:25,331:INFO:Defining folds
2024-05-17 20:16:25,331:INFO:Declaring metric variables
2024-05-17 20:16:25,337:INFO:Importing untrained model
2024-05-17 20:16:25,344:INFO:Least Angle Regression Imported successfully
2024-05-17 20:16:25,360:INFO:Starting cross validation
2024-05-17 20:16:25,363:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:25,486:INFO:Calculating mean and std
2024-05-17 20:16:25,488:INFO:Creating metrics dataframe
2024-05-17 20:16:25,493:INFO:Uploading results into container
2024-05-17 20:16:25,494:INFO:Uploading model into container now
2024-05-17 20:16:25,495:INFO:_master_model_container: 5
2024-05-17 20:16:25,495:INFO:_display_container: 2
2024-05-17 20:16:25,497:INFO:Lars(random_state=123)
2024-05-17 20:16:25,498:INFO:create_model() successfully completed......................................
2024-05-17 20:16:25,617:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:25,618:INFO:Creating metrics dataframe
2024-05-17 20:16:25,632:INFO:Initializing Lasso Least Angle Regression
2024-05-17 20:16:25,632:INFO:Total runtime is 0.219700829188029 minutes
2024-05-17 20:16:25,639:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:25,640:INFO:Initializing create_model()
2024-05-17 20:16:25,640:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:25,640:INFO:Checking exceptions
2024-05-17 20:16:25,640:INFO:Importing libraries
2024-05-17 20:16:25,640:INFO:Copying training dataset
2024-05-17 20:16:25,649:INFO:Defining folds
2024-05-17 20:16:25,650:INFO:Declaring metric variables
2024-05-17 20:16:25,657:INFO:Importing untrained model
2024-05-17 20:16:25,666:INFO:Lasso Least Angle Regression Imported successfully
2024-05-17 20:16:25,680:INFO:Starting cross validation
2024-05-17 20:16:25,682:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:25,803:INFO:Calculating mean and std
2024-05-17 20:16:25,806:INFO:Creating metrics dataframe
2024-05-17 20:16:25,810:INFO:Uploading results into container
2024-05-17 20:16:25,811:INFO:Uploading model into container now
2024-05-17 20:16:25,811:INFO:_master_model_container: 6
2024-05-17 20:16:25,811:INFO:_display_container: 2
2024-05-17 20:16:25,813:INFO:LassoLars(random_state=123)
2024-05-17 20:16:25,814:INFO:create_model() successfully completed......................................
2024-05-17 20:16:25,936:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:25,937:INFO:Creating metrics dataframe
2024-05-17 20:16:25,957:INFO:Initializing Orthogonal Matching Pursuit
2024-05-17 20:16:25,958:INFO:Total runtime is 0.22514735460281374 minutes
2024-05-17 20:16:25,965:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:25,966:INFO:Initializing create_model()
2024-05-17 20:16:25,966:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:25,966:INFO:Checking exceptions
2024-05-17 20:16:25,966:INFO:Importing libraries
2024-05-17 20:16:25,966:INFO:Copying training dataset
2024-05-17 20:16:25,974:INFO:Defining folds
2024-05-17 20:16:25,974:INFO:Declaring metric variables
2024-05-17 20:16:25,980:INFO:Importing untrained model
2024-05-17 20:16:25,990:INFO:Orthogonal Matching Pursuit Imported successfully
2024-05-17 20:16:26,003:INFO:Starting cross validation
2024-05-17 20:16:26,005:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:26,191:INFO:Calculating mean and std
2024-05-17 20:16:26,195:INFO:Creating metrics dataframe
2024-05-17 20:16:26,202:INFO:Uploading results into container
2024-05-17 20:16:26,203:INFO:Uploading model into container now
2024-05-17 20:16:26,204:INFO:_master_model_container: 7
2024-05-17 20:16:26,204:INFO:_display_container: 2
2024-05-17 20:16:26,205:INFO:OrthogonalMatchingPursuit()
2024-05-17 20:16:26,205:INFO:create_model() successfully completed......................................
2024-05-17 20:16:26,349:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:26,350:INFO:Creating metrics dataframe
2024-05-17 20:16:26,368:INFO:Initializing Bayesian Ridge
2024-05-17 20:16:26,368:INFO:Total runtime is 0.23197835286458335 minutes
2024-05-17 20:16:26,374:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:26,375:INFO:Initializing create_model()
2024-05-17 20:16:26,375:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:26,375:INFO:Checking exceptions
2024-05-17 20:16:26,375:INFO:Importing libraries
2024-05-17 20:16:26,375:INFO:Copying training dataset
2024-05-17 20:16:26,385:INFO:Defining folds
2024-05-17 20:16:26,386:INFO:Declaring metric variables
2024-05-17 20:16:26,390:INFO:Importing untrained model
2024-05-17 20:16:26,398:INFO:Bayesian Ridge Imported successfully
2024-05-17 20:16:26,415:INFO:Starting cross validation
2024-05-17 20:16:26,417:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:26,539:INFO:Calculating mean and std
2024-05-17 20:16:26,541:INFO:Creating metrics dataframe
2024-05-17 20:16:26,545:INFO:Uploading results into container
2024-05-17 20:16:26,546:INFO:Uploading model into container now
2024-05-17 20:16:26,548:INFO:_master_model_container: 8
2024-05-17 20:16:26,548:INFO:_display_container: 2
2024-05-17 20:16:26,548:INFO:BayesianRidge()
2024-05-17 20:16:26,549:INFO:create_model() successfully completed......................................
2024-05-17 20:16:26,681:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:26,681:INFO:Creating metrics dataframe
2024-05-17 20:16:26,695:INFO:Initializing Passive Aggressive Regressor
2024-05-17 20:16:26,695:INFO:Total runtime is 0.2374198873837789 minutes
2024-05-17 20:16:26,701:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:26,702:INFO:Initializing create_model()
2024-05-17 20:16:26,703:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:26,703:INFO:Checking exceptions
2024-05-17 20:16:26,703:INFO:Importing libraries
2024-05-17 20:16:26,703:INFO:Copying training dataset
2024-05-17 20:16:26,715:INFO:Defining folds
2024-05-17 20:16:26,715:INFO:Declaring metric variables
2024-05-17 20:16:26,720:INFO:Importing untrained model
2024-05-17 20:16:26,726:INFO:Passive Aggressive Regressor Imported successfully
2024-05-17 20:16:26,740:INFO:Starting cross validation
2024-05-17 20:16:26,741:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:26,866:INFO:Calculating mean and std
2024-05-17 20:16:26,869:INFO:Creating metrics dataframe
2024-05-17 20:16:26,874:INFO:Uploading results into container
2024-05-17 20:16:26,875:INFO:Uploading model into container now
2024-05-17 20:16:26,875:INFO:_master_model_container: 9
2024-05-17 20:16:26,876:INFO:_display_container: 2
2024-05-17 20:16:26,876:INFO:PassiveAggressiveRegressor(random_state=123)
2024-05-17 20:16:26,877:INFO:create_model() successfully completed......................................
2024-05-17 20:16:27,002:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:27,002:INFO:Creating metrics dataframe
2024-05-17 20:16:27,015:INFO:Initializing Huber Regressor
2024-05-17 20:16:27,015:INFO:Total runtime is 0.24276715517044067 minutes
2024-05-17 20:16:27,022:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:27,022:INFO:Initializing create_model()
2024-05-17 20:16:27,023:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:27,023:INFO:Checking exceptions
2024-05-17 20:16:27,023:INFO:Importing libraries
2024-05-17 20:16:27,023:INFO:Copying training dataset
2024-05-17 20:16:27,029:INFO:Defining folds
2024-05-17 20:16:27,031:INFO:Declaring metric variables
2024-05-17 20:16:27,037:INFO:Importing untrained model
2024-05-17 20:16:27,046:INFO:Huber Regressor Imported successfully
2024-05-17 20:16:27,071:INFO:Starting cross validation
2024-05-17 20:16:27,073:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:27,251:INFO:Calculating mean and std
2024-05-17 20:16:27,253:INFO:Creating metrics dataframe
2024-05-17 20:16:27,257:INFO:Uploading results into container
2024-05-17 20:16:27,258:INFO:Uploading model into container now
2024-05-17 20:16:27,258:INFO:_master_model_container: 10
2024-05-17 20:16:27,258:INFO:_display_container: 2
2024-05-17 20:16:27,259:INFO:HuberRegressor()
2024-05-17 20:16:27,260:INFO:create_model() successfully completed......................................
2024-05-17 20:16:27,389:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:27,389:INFO:Creating metrics dataframe
2024-05-17 20:16:27,405:INFO:Initializing K Neighbors Regressor
2024-05-17 20:16:27,406:INFO:Total runtime is 0.2492682973543803 minutes
2024-05-17 20:16:27,410:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:27,411:INFO:Initializing create_model()
2024-05-17 20:16:27,411:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:27,411:INFO:Checking exceptions
2024-05-17 20:16:27,411:INFO:Importing libraries
2024-05-17 20:16:27,412:INFO:Copying training dataset
2024-05-17 20:16:27,420:INFO:Defining folds
2024-05-17 20:16:27,421:INFO:Declaring metric variables
2024-05-17 20:16:27,428:INFO:Importing untrained model
2024-05-17 20:16:27,436:INFO:K Neighbors Regressor Imported successfully
2024-05-17 20:16:27,454:INFO:Starting cross validation
2024-05-17 20:16:27,455:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:27,653:INFO:Calculating mean and std
2024-05-17 20:16:27,655:INFO:Creating metrics dataframe
2024-05-17 20:16:27,659:INFO:Uploading results into container
2024-05-17 20:16:27,659:INFO:Uploading model into container now
2024-05-17 20:16:27,660:INFO:_master_model_container: 11
2024-05-17 20:16:27,660:INFO:_display_container: 2
2024-05-17 20:16:27,661:INFO:KNeighborsRegressor(n_jobs=-1)
2024-05-17 20:16:27,663:INFO:create_model() successfully completed......................................
2024-05-17 20:16:27,782:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:27,782:INFO:Creating metrics dataframe
2024-05-17 20:16:27,799:INFO:Initializing Decision Tree Regressor
2024-05-17 20:16:27,799:INFO:Total runtime is 0.255825412273407 minutes
2024-05-17 20:16:27,804:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:27,805:INFO:Initializing create_model()
2024-05-17 20:16:27,805:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:27,805:INFO:Checking exceptions
2024-05-17 20:16:27,806:INFO:Importing libraries
2024-05-17 20:16:27,806:INFO:Copying training dataset
2024-05-17 20:16:27,815:INFO:Defining folds
2024-05-17 20:16:27,816:INFO:Declaring metric variables
2024-05-17 20:16:27,824:INFO:Importing untrained model
2024-05-17 20:16:27,832:INFO:Decision Tree Regressor Imported successfully
2024-05-17 20:16:27,848:INFO:Starting cross validation
2024-05-17 20:16:27,850:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:27,980:INFO:Calculating mean and std
2024-05-17 20:16:27,982:INFO:Creating metrics dataframe
2024-05-17 20:16:27,987:INFO:Uploading results into container
2024-05-17 20:16:27,987:INFO:Uploading model into container now
2024-05-17 20:16:27,988:INFO:_master_model_container: 12
2024-05-17 20:16:27,988:INFO:_display_container: 2
2024-05-17 20:16:27,989:INFO:DecisionTreeRegressor(random_state=123)
2024-05-17 20:16:27,989:INFO:create_model() successfully completed......................................
2024-05-17 20:16:28,110:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:28,111:INFO:Creating metrics dataframe
2024-05-17 20:16:28,128:INFO:Initializing Random Forest Regressor
2024-05-17 20:16:28,129:INFO:Total runtime is 0.2613323489824931 minutes
2024-05-17 20:16:28,134:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:28,135:INFO:Initializing create_model()
2024-05-17 20:16:28,135:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:28,136:INFO:Checking exceptions
2024-05-17 20:16:28,136:INFO:Importing libraries
2024-05-17 20:16:28,136:INFO:Copying training dataset
2024-05-17 20:16:28,142:INFO:Defining folds
2024-05-17 20:16:28,142:INFO:Declaring metric variables
2024-05-17 20:16:28,147:INFO:Importing untrained model
2024-05-17 20:16:28,156:INFO:Random Forest Regressor Imported successfully
2024-05-17 20:16:28,169:INFO:Starting cross validation
2024-05-17 20:16:28,172:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:30,308:INFO:Calculating mean and std
2024-05-17 20:16:30,310:INFO:Creating metrics dataframe
2024-05-17 20:16:30,317:INFO:Uploading results into container
2024-05-17 20:16:30,319:INFO:Uploading model into container now
2024-05-17 20:16:30,320:INFO:_master_model_container: 13
2024-05-17 20:16:30,320:INFO:_display_container: 2
2024-05-17 20:16:30,322:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:16:30,322:INFO:create_model() successfully completed......................................
2024-05-17 20:16:30,474:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:30,475:INFO:Creating metrics dataframe
2024-05-17 20:16:30,493:INFO:Initializing Extra Trees Regressor
2024-05-17 20:16:30,493:INFO:Total runtime is 0.30072200298309326 minutes
2024-05-17 20:16:30,501:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:30,502:INFO:Initializing create_model()
2024-05-17 20:16:30,502:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:30,502:INFO:Checking exceptions
2024-05-17 20:16:30,503:INFO:Importing libraries
2024-05-17 20:16:30,503:INFO:Copying training dataset
2024-05-17 20:16:30,510:INFO:Defining folds
2024-05-17 20:16:30,511:INFO:Declaring metric variables
2024-05-17 20:16:30,520:INFO:Importing untrained model
2024-05-17 20:16:30,529:INFO:Extra Trees Regressor Imported successfully
2024-05-17 20:16:30,545:INFO:Starting cross validation
2024-05-17 20:16:30,549:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:31,879:INFO:Calculating mean and std
2024-05-17 20:16:31,882:INFO:Creating metrics dataframe
2024-05-17 20:16:31,890:INFO:Uploading results into container
2024-05-17 20:16:31,891:INFO:Uploading model into container now
2024-05-17 20:16:31,892:INFO:_master_model_container: 14
2024-05-17 20:16:31,892:INFO:_display_container: 2
2024-05-17 20:16:31,893:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:16:31,893:INFO:create_model() successfully completed......................................
2024-05-17 20:16:32,022:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:32,023:INFO:Creating metrics dataframe
2024-05-17 20:16:32,041:INFO:Initializing AdaBoost Regressor
2024-05-17 20:16:32,041:INFO:Total runtime is 0.326530663172404 minutes
2024-05-17 20:16:32,048:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:32,049:INFO:Initializing create_model()
2024-05-17 20:16:32,049:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:32,049:INFO:Checking exceptions
2024-05-17 20:16:32,050:INFO:Importing libraries
2024-05-17 20:16:32,050:INFO:Copying training dataset
2024-05-17 20:16:32,058:INFO:Defining folds
2024-05-17 20:16:32,058:INFO:Declaring metric variables
2024-05-17 20:16:32,065:INFO:Importing untrained model
2024-05-17 20:16:32,074:INFO:AdaBoost Regressor Imported successfully
2024-05-17 20:16:32,094:INFO:Starting cross validation
2024-05-17 20:16:32,097:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:32,676:INFO:Calculating mean and std
2024-05-17 20:16:32,679:INFO:Creating metrics dataframe
2024-05-17 20:16:32,688:INFO:Uploading results into container
2024-05-17 20:16:32,689:INFO:Uploading model into container now
2024-05-17 20:16:32,690:INFO:_master_model_container: 15
2024-05-17 20:16:32,690:INFO:_display_container: 2
2024-05-17 20:16:32,691:INFO:AdaBoostRegressor(random_state=123)
2024-05-17 20:16:32,691:INFO:create_model() successfully completed......................................
2024-05-17 20:16:32,817:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:32,818:INFO:Creating metrics dataframe
2024-05-17 20:16:32,839:INFO:Initializing Gradient Boosting Regressor
2024-05-17 20:16:32,840:INFO:Total runtime is 0.339842430750529 minutes
2024-05-17 20:16:32,845:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:32,846:INFO:Initializing create_model()
2024-05-17 20:16:32,846:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:32,846:INFO:Checking exceptions
2024-05-17 20:16:32,846:INFO:Importing libraries
2024-05-17 20:16:32,846:INFO:Copying training dataset
2024-05-17 20:16:32,856:INFO:Defining folds
2024-05-17 20:16:32,857:INFO:Declaring metric variables
2024-05-17 20:16:32,862:INFO:Importing untrained model
2024-05-17 20:16:32,869:INFO:Gradient Boosting Regressor Imported successfully
2024-05-17 20:16:32,882:INFO:Starting cross validation
2024-05-17 20:16:32,886:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:34,080:INFO:Calculating mean and std
2024-05-17 20:16:34,082:INFO:Creating metrics dataframe
2024-05-17 20:16:34,088:INFO:Uploading results into container
2024-05-17 20:16:34,089:INFO:Uploading model into container now
2024-05-17 20:16:34,090:INFO:_master_model_container: 16
2024-05-17 20:16:34,090:INFO:_display_container: 2
2024-05-17 20:16:34,091:INFO:GradientBoostingRegressor(random_state=123)
2024-05-17 20:16:34,091:INFO:create_model() successfully completed......................................
2024-05-17 20:16:34,236:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:34,237:INFO:Creating metrics dataframe
2024-05-17 20:16:34,256:INFO:Initializing Extreme Gradient Boosting
2024-05-17 20:16:34,256:INFO:Total runtime is 0.3634352246920268 minutes
2024-05-17 20:16:34,261:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:34,261:INFO:Initializing create_model()
2024-05-17 20:16:34,261:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:34,262:INFO:Checking exceptions
2024-05-17 20:16:34,262:INFO:Importing libraries
2024-05-17 20:16:34,262:INFO:Copying training dataset
2024-05-17 20:16:34,270:INFO:Defining folds
2024-05-17 20:16:34,271:INFO:Declaring metric variables
2024-05-17 20:16:34,278:INFO:Importing untrained model
2024-05-17 20:16:34,285:INFO:Extreme Gradient Boosting Imported successfully
2024-05-17 20:16:34,300:INFO:Starting cross validation
2024-05-17 20:16:34,302:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:35,500:INFO:Calculating mean and std
2024-05-17 20:16:35,503:INFO:Creating metrics dataframe
2024-05-17 20:16:35,508:INFO:Uploading results into container
2024-05-17 20:16:35,509:INFO:Uploading model into container now
2024-05-17 20:16:35,510:INFO:_master_model_container: 17
2024-05-17 20:16:35,510:INFO:_display_container: 2
2024-05-17 20:16:35,513:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             predictor=None, random_state=123, ...)
2024-05-17 20:16:35,514:INFO:create_model() successfully completed......................................
2024-05-17 20:16:35,640:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:35,640:INFO:Creating metrics dataframe
2024-05-17 20:16:35,664:INFO:Initializing Light Gradient Boosting Machine
2024-05-17 20:16:35,665:INFO:Total runtime is 0.38692582050959273 minutes
2024-05-17 20:16:35,672:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:35,673:INFO:Initializing create_model()
2024-05-17 20:16:35,673:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:35,673:INFO:Checking exceptions
2024-05-17 20:16:35,673:INFO:Importing libraries
2024-05-17 20:16:35,673:INFO:Copying training dataset
2024-05-17 20:16:35,682:INFO:Defining folds
2024-05-17 20:16:35,682:INFO:Declaring metric variables
2024-05-17 20:16:35,691:INFO:Importing untrained model
2024-05-17 20:16:35,697:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-17 20:16:35,712:INFO:Starting cross validation
2024-05-17 20:16:35,715:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:16:38,340:INFO:Calculating mean and std
2024-05-17 20:16:38,343:INFO:Creating metrics dataframe
2024-05-17 20:16:38,364:INFO:Uploading results into container
2024-05-17 20:16:38,366:INFO:Uploading model into container now
2024-05-17 20:16:38,366:INFO:_master_model_container: 18
2024-05-17 20:16:38,367:INFO:_display_container: 2
2024-05-17 20:16:38,368:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:16:38,368:INFO:create_model() successfully completed......................................
2024-05-17 20:16:38,515:INFO:SubProcess create_model() end ==================================
2024-05-17 20:16:38,516:INFO:Creating metrics dataframe
2024-05-17 20:16:38,539:INFO:Initializing CatBoost Regressor
2024-05-17 20:16:38,539:INFO:Total runtime is 0.4348267316818238 minutes
2024-05-17 20:16:38,545:INFO:SubProcess create_model() called ==================================
2024-05-17 20:16:38,546:INFO:Initializing create_model()
2024-05-17 20:16:38,546:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:16:38,546:INFO:Checking exceptions
2024-05-17 20:16:38,547:INFO:Importing libraries
2024-05-17 20:16:38,547:INFO:Copying training dataset
2024-05-17 20:16:38,554:INFO:Defining folds
2024-05-17 20:16:38,555:INFO:Declaring metric variables
2024-05-17 20:16:38,563:INFO:Importing untrained model
2024-05-17 20:16:38,571:INFO:CatBoost Regressor Imported successfully
2024-05-17 20:16:38,585:INFO:Starting cross validation
2024-05-17 20:16:38,588:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:17:02,495:INFO:Calculating mean and std
2024-05-17 20:17:02,500:INFO:Creating metrics dataframe
2024-05-17 20:17:02,508:INFO:Uploading results into container
2024-05-17 20:17:02,509:INFO:Uploading model into container now
2024-05-17 20:17:02,511:INFO:_master_model_container: 19
2024-05-17 20:17:02,511:INFO:_display_container: 2
2024-05-17 20:17:02,512:INFO:<catboost.core.CatBoostRegressor object at 0x00000235B71DB970>
2024-05-17 20:17:02,513:INFO:create_model() successfully completed......................................
2024-05-17 20:17:02,722:INFO:SubProcess create_model() end ==================================
2024-05-17 20:17:02,722:INFO:Creating metrics dataframe
2024-05-17 20:17:02,770:INFO:Initializing Dummy Regressor
2024-05-17 20:17:02,770:INFO:Total runtime is 0.8386759161949158 minutes
2024-05-17 20:17:02,781:INFO:SubProcess create_model() called ==================================
2024-05-17 20:17:02,781:INFO:Initializing create_model()
2024-05-17 20:17:02,782:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235B837DE20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:17:02,782:INFO:Checking exceptions
2024-05-17 20:17:02,783:INFO:Importing libraries
2024-05-17 20:17:02,783:INFO:Copying training dataset
2024-05-17 20:17:02,795:INFO:Defining folds
2024-05-17 20:17:02,797:INFO:Declaring metric variables
2024-05-17 20:17:02,804:INFO:Importing untrained model
2024-05-17 20:17:02,815:INFO:Dummy Regressor Imported successfully
2024-05-17 20:17:02,838:INFO:Starting cross validation
2024-05-17 20:17:02,841:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-17 20:17:03,023:INFO:Calculating mean and std
2024-05-17 20:17:03,026:INFO:Creating metrics dataframe
2024-05-17 20:17:03,034:INFO:Uploading results into container
2024-05-17 20:17:03,036:INFO:Uploading model into container now
2024-05-17 20:17:03,036:INFO:_master_model_container: 20
2024-05-17 20:17:03,036:INFO:_display_container: 2
2024-05-17 20:17:03,038:INFO:DummyRegressor()
2024-05-17 20:17:03,038:INFO:create_model() successfully completed......................................
2024-05-17 20:17:03,238:INFO:SubProcess create_model() end ==================================
2024-05-17 20:17:03,238:INFO:Creating metrics dataframe
2024-05-17 20:17:03,306:INFO:Initializing create_model()
2024-05-17 20:17:03,307:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235C954EC40>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-17 20:17:03,307:INFO:Checking exceptions
2024-05-17 20:17:03,313:INFO:Importing libraries
2024-05-17 20:17:03,315:INFO:Copying training dataset
2024-05-17 20:17:03,325:INFO:Defining folds
2024-05-17 20:17:03,325:INFO:Declaring metric variables
2024-05-17 20:17:03,326:INFO:Importing untrained model
2024-05-17 20:17:03,326:INFO:Declaring custom model
2024-05-17 20:17:03,329:INFO:Extra Trees Regressor Imported successfully
2024-05-17 20:17:03,332:INFO:Cross validation set to False
2024-05-17 20:17:03,332:INFO:Fitting Model
2024-05-17 20:17:03,608:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:17:03,608:INFO:create_model() successfully completed......................................
2024-05-17 20:17:03,945:INFO:_master_model_container: 20
2024-05-17 20:17:03,946:INFO:_display_container: 2
2024-05-17 20:17:03,948:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-17 20:17:03,950:INFO:compare_models() successfully completed......................................
2024-05-19 06:16:17,920:INFO:PyCaret RegressionExperiment
2024-05-19 06:16:17,922:INFO:Logging name: reg-default-name
2024-05-19 06:16:17,922:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-19 06:16:17,923:INFO:version 3.3.2
2024-05-19 06:16:17,923:INFO:Initializing setup()
2024-05-19 06:16:17,923:INFO:self.USI: baa0
2024-05-19 06:16:17,923:INFO:self._variable_keys: {'memory', 'y_train', 'n_jobs_param', 'data', 'seed', 'target_param', 'transform_target_param', '_available_plots', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'gpu_param', 'idx', 'exp_name_log', 'log_plots_param', 'fold_generator', 'html_param', 'pipeline', 'fold_shuffle_param', 'X_test', 'y', 'X_train', 'exp_id', 'X', 'fold_groups_param', 'y_test', 'USI'}
2024-05-19 06:16:17,923:INFO:Checking environment
2024-05-19 06:16:17,924:INFO:python_version: 3.9.12
2024-05-19 06:16:17,925:INFO:python_build: ('main', 'Mar 24 2022 23:17:03')
2024-05-19 06:16:17,925:INFO:machine: AMD64
2024-05-19 06:16:17,927:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-19 06:16:17,947:INFO:Memory: svmem(total=16910155776, available=3064320000, percent=81.9, used=13845835776, free=3064320000)
2024-05-19 06:16:17,948:INFO:Physical Core: 4
2024-05-19 06:16:17,948:INFO:Logical Core: 8
2024-05-19 06:16:17,948:INFO:Checking libraries
2024-05-19 06:16:17,950:INFO:System:
2024-05-19 06:16:17,951:INFO:    python: 3.9.12 | packaged by conda-forge | (main, Mar 24 2022, 23:17:03) [MSC v.1929 64 bit (AMD64)]
2024-05-19 06:16:17,951:INFO:executable: c:\Program Files\Orange\python.exe
2024-05-19 06:16:17,951:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-19 06:16:17,951:INFO:PyCaret required dependencies:
2024-05-19 06:16:17,956:INFO:                 pip: 22.3.1
2024-05-19 06:16:17,957:INFO:          setuptools: 65.5.1
2024-05-19 06:16:17,957:INFO:             pycaret: 3.3.2
2024-05-19 06:16:17,957:INFO:             IPython: 8.4.0
2024-05-19 06:16:17,957:INFO:          ipywidgets: 7.7.1
2024-05-19 06:16:17,957:INFO:                tqdm: 4.66.2
2024-05-19 06:16:17,957:INFO:               numpy: 1.23.5
2024-05-19 06:16:17,957:INFO:              pandas: 1.4.4
2024-05-19 06:16:17,957:INFO:              jinja2: 3.1.2
2024-05-19 06:16:17,957:INFO:               scipy: 1.9.3
2024-05-19 06:16:17,957:INFO:              joblib: 1.2.0
2024-05-19 06:16:17,957:INFO:             sklearn: 1.1.3
2024-05-19 06:16:17,957:INFO:                pyod: 1.1.3
2024-05-19 06:16:17,957:INFO:            imblearn: 0.12.2
2024-05-19 06:16:17,957:INFO:   category_encoders: 2.6.3
2024-05-19 06:16:17,957:INFO:            lightgbm: 4.3.0
2024-05-19 06:16:17,958:INFO:               numba: 0.59.1
2024-05-19 06:16:17,958:INFO:            requests: 2.28.1
2024-05-19 06:16:17,958:INFO:          matplotlib: 3.6.2
2024-05-19 06:16:17,958:INFO:          scikitplot: 0.3.7
2024-05-19 06:16:17,958:INFO:         yellowbrick: 1.5
2024-05-19 06:16:17,958:INFO:              plotly: 5.11.0
2024-05-19 06:16:17,958:INFO:    plotly-resampler: Not installed
2024-05-19 06:16:17,958:INFO:             kaleido: 0.2.1
2024-05-19 06:16:17,959:INFO:           schemdraw: 0.15
2024-05-19 06:16:17,959:INFO:         statsmodels: 0.14.2
2024-05-19 06:16:17,959:INFO:              sktime: 0.26.0
2024-05-19 06:16:17,959:INFO:               tbats: 1.1.3
2024-05-19 06:16:17,959:INFO:            pmdarima: 2.0.4
2024-05-19 06:16:17,960:INFO:              psutil: 5.9.4
2024-05-19 06:16:17,960:INFO:          markupsafe: 2.1.2
2024-05-19 06:16:17,960:INFO:             pickle5: Not installed
2024-05-19 06:16:17,960:INFO:         cloudpickle: 3.0.0
2024-05-19 06:16:17,961:INFO:         deprecation: 2.1.0
2024-05-19 06:16:17,961:INFO:              xxhash: 3.4.1
2024-05-19 06:16:17,961:INFO:           wurlitzer: Not installed
2024-05-19 06:16:17,961:INFO:PyCaret optional dependencies:
2024-05-19 06:16:17,962:INFO:                shap: Not installed
2024-05-19 06:16:17,963:INFO:           interpret: Not installed
2024-05-19 06:16:17,963:INFO:                umap: Not installed
2024-05-19 06:16:17,963:INFO:     ydata_profiling: Not installed
2024-05-19 06:16:17,963:INFO:  explainerdashboard: Not installed
2024-05-19 06:16:17,963:INFO:             autoviz: Not installed
2024-05-19 06:16:17,963:INFO:           fairlearn: Not installed
2024-05-19 06:16:17,963:INFO:          deepchecks: Not installed
2024-05-19 06:16:17,964:INFO:             xgboost: 1.7.1
2024-05-19 06:16:17,964:INFO:            catboost: 1.1.1
2024-05-19 06:16:17,964:INFO:              kmodes: Not installed
2024-05-19 06:16:17,964:INFO:             mlxtend: Not installed
2024-05-19 06:16:17,964:INFO:       statsforecast: Not installed
2024-05-19 06:16:17,965:INFO:        tune_sklearn: Not installed
2024-05-19 06:16:17,965:INFO:                 ray: Not installed
2024-05-19 06:16:17,965:INFO:            hyperopt: Not installed
2024-05-19 06:16:17,965:INFO:              optuna: Not installed
2024-05-19 06:16:17,966:INFO:               skopt: Not installed
2024-05-19 06:16:17,966:INFO:              mlflow: Not installed
2024-05-19 06:16:17,966:INFO:              gradio: Not installed
2024-05-19 06:16:17,967:INFO:             fastapi: Not installed
2024-05-19 06:16:17,967:INFO:             uvicorn: Not installed
2024-05-19 06:16:17,967:INFO:              m2cgen: Not installed
2024-05-19 06:16:17,967:INFO:           evidently: Not installed
2024-05-19 06:16:17,967:INFO:               fugue: Not installed
2024-05-19 06:16:17,967:INFO:           streamlit: Not installed
2024-05-19 06:16:17,967:INFO:             prophet: Not installed
2024-05-19 06:16:17,967:INFO:None
2024-05-19 06:16:17,972:INFO:Set up data.
2024-05-19 06:16:18,068:INFO:Set up folding strategy.
2024-05-19 06:16:18,074:INFO:Set up train/test split.
2024-05-19 06:16:18,142:INFO:Set up index.
2024-05-19 06:16:18,147:INFO:Assigning column types.
2024-05-19 06:16:18,176:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-19 06:16:18,182:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-19 06:16:18,203:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-19 06:16:18,221:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:16:18,423:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:16:18,556:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:16:18,566:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:18,579:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:18,583:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-19 06:16:18,597:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-19 06:16:18,606:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:16:18,789:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:16:18,915:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:16:18,917:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:18,927:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:18,929:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-19 06:16:18,942:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-19 06:16:18,955:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:16:19,136:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:16:19,253:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:16:19,254:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:19,262:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:19,273:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-19 06:16:19,286:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:16:19,444:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:16:19,548:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:16:19,550:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:19,557:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:19,558:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-19 06:16:19,587:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:16:19,737:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:16:19,841:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:16:19,842:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:19,850:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:19,878:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:16:20,031:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:16:20,140:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:16:20,143:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:20,150:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:20,153:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-19 06:16:20,306:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:16:20,423:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:16:20,424:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:20,431:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:20,580:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:16:20,677:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:16:20,679:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:20,685:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:20,686:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-19 06:16:20,835:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:16:20,939:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:20,947:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:21,104:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:16:21,231:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:21,236:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:21,237:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-19 06:16:21,514:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:21,522:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:21,773:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:21,781:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:21,820:INFO:Preparing preprocessing pipeline...
2024-05-19 06:16:21,820:INFO:Set up simple imputation.
2024-05-19 06:16:21,828:INFO:Set up encoding of categorical features.
2024-05-19 06:16:22,044:INFO:Finished creating preprocessing pipeline.
2024-05-19 06:16:22,063:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'closeTime', 'count', 'openPrice',
                                             'openTime'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['symbol'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['symbol'],
                                    transformer=OneHotEncoder(cols=['symbol'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2024-05-19 06:16:22,063:INFO:Creating final display dataframe.
2024-05-19 06:16:22,509:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         lastPrice
2                   Target type        Regression
3           Original data shape         (9563, 9)
4        Transformed data shape         (9563, 9)
5   Transformed train set shape         (6694, 9)
6    Transformed test set shape         (2869, 9)
7              Numeric features                 7
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              baa0
2024-05-19 06:16:22,813:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:22,820:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:23,109:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:16:23,116:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:16:23,139:INFO:setup() successfully completed in 5.28s...............
2024-05-19 06:19:46,067:INFO:PyCaret RegressionExperiment
2024-05-19 06:19:46,067:INFO:Logging name: reg-default-name
2024-05-19 06:19:46,067:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-19 06:19:46,067:INFO:version 3.3.2
2024-05-19 06:19:46,067:INFO:Initializing setup()
2024-05-19 06:19:46,067:INFO:self.USI: dc22
2024-05-19 06:19:46,067:INFO:self._variable_keys: {'memory', 'y_train', 'n_jobs_param', 'data', 'seed', 'target_param', 'transform_target_param', '_available_plots', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'gpu_param', 'idx', 'exp_name_log', 'log_plots_param', 'fold_generator', 'html_param', 'pipeline', 'fold_shuffle_param', 'X_test', 'y', 'X_train', 'exp_id', 'X', 'fold_groups_param', 'y_test', 'USI'}
2024-05-19 06:19:46,067:INFO:Checking environment
2024-05-19 06:19:46,067:INFO:python_version: 3.9.12
2024-05-19 06:19:46,068:INFO:python_build: ('main', 'Mar 24 2022 23:17:03')
2024-05-19 06:19:46,068:INFO:machine: AMD64
2024-05-19 06:19:46,068:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-19 06:19:46,080:INFO:Memory: svmem(total=16910155776, available=3155750912, percent=81.3, used=13754404864, free=3155750912)
2024-05-19 06:19:46,080:INFO:Physical Core: 4
2024-05-19 06:19:46,080:INFO:Logical Core: 8
2024-05-19 06:19:46,080:INFO:Checking libraries
2024-05-19 06:19:46,081:INFO:System:
2024-05-19 06:19:46,081:INFO:    python: 3.9.12 | packaged by conda-forge | (main, Mar 24 2022, 23:17:03) [MSC v.1929 64 bit (AMD64)]
2024-05-19 06:19:46,081:INFO:executable: c:\Program Files\Orange\python.exe
2024-05-19 06:19:46,081:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-19 06:19:46,081:INFO:PyCaret required dependencies:
2024-05-19 06:19:46,081:INFO:                 pip: 22.3.1
2024-05-19 06:19:46,081:INFO:          setuptools: 65.5.1
2024-05-19 06:19:46,082:INFO:             pycaret: 3.3.2
2024-05-19 06:19:46,082:INFO:             IPython: 8.4.0
2024-05-19 06:19:46,082:INFO:          ipywidgets: 7.7.1
2024-05-19 06:19:46,082:INFO:                tqdm: 4.66.2
2024-05-19 06:19:46,082:INFO:               numpy: 1.23.5
2024-05-19 06:19:46,082:INFO:              pandas: 1.4.4
2024-05-19 06:19:46,082:INFO:              jinja2: 3.1.2
2024-05-19 06:19:46,082:INFO:               scipy: 1.9.3
2024-05-19 06:19:46,082:INFO:              joblib: 1.2.0
2024-05-19 06:19:46,083:INFO:             sklearn: 1.1.3
2024-05-19 06:19:46,083:INFO:                pyod: 1.1.3
2024-05-19 06:19:46,083:INFO:            imblearn: 0.12.2
2024-05-19 06:19:46,083:INFO:   category_encoders: 2.6.3
2024-05-19 06:19:46,083:INFO:            lightgbm: 4.3.0
2024-05-19 06:19:46,083:INFO:               numba: 0.59.1
2024-05-19 06:19:46,083:INFO:            requests: 2.28.1
2024-05-19 06:19:46,083:INFO:          matplotlib: 3.6.2
2024-05-19 06:19:46,083:INFO:          scikitplot: 0.3.7
2024-05-19 06:19:46,084:INFO:         yellowbrick: 1.5
2024-05-19 06:19:46,084:INFO:              plotly: 5.11.0
2024-05-19 06:19:46,084:INFO:    plotly-resampler: Not installed
2024-05-19 06:19:46,084:INFO:             kaleido: 0.2.1
2024-05-19 06:19:46,084:INFO:           schemdraw: 0.15
2024-05-19 06:19:46,084:INFO:         statsmodels: 0.14.2
2024-05-19 06:19:46,084:INFO:              sktime: 0.26.0
2024-05-19 06:19:46,084:INFO:               tbats: 1.1.3
2024-05-19 06:19:46,084:INFO:            pmdarima: 2.0.4
2024-05-19 06:19:46,085:INFO:              psutil: 5.9.4
2024-05-19 06:19:46,085:INFO:          markupsafe: 2.1.2
2024-05-19 06:19:46,085:INFO:             pickle5: Not installed
2024-05-19 06:19:46,085:INFO:         cloudpickle: 3.0.0
2024-05-19 06:19:46,085:INFO:         deprecation: 2.1.0
2024-05-19 06:19:46,085:INFO:              xxhash: 3.4.1
2024-05-19 06:19:46,085:INFO:           wurlitzer: Not installed
2024-05-19 06:19:46,085:INFO:PyCaret optional dependencies:
2024-05-19 06:19:46,085:INFO:                shap: Not installed
2024-05-19 06:19:46,086:INFO:           interpret: Not installed
2024-05-19 06:19:46,086:INFO:                umap: Not installed
2024-05-19 06:19:46,086:INFO:     ydata_profiling: Not installed
2024-05-19 06:19:46,086:INFO:  explainerdashboard: Not installed
2024-05-19 06:19:46,086:INFO:             autoviz: Not installed
2024-05-19 06:19:46,086:INFO:           fairlearn: Not installed
2024-05-19 06:19:46,086:INFO:          deepchecks: Not installed
2024-05-19 06:19:46,086:INFO:             xgboost: 1.7.1
2024-05-19 06:19:46,086:INFO:            catboost: 1.1.1
2024-05-19 06:19:46,088:INFO:              kmodes: Not installed
2024-05-19 06:19:46,088:INFO:             mlxtend: Not installed
2024-05-19 06:19:46,088:INFO:       statsforecast: Not installed
2024-05-19 06:19:46,088:INFO:        tune_sklearn: Not installed
2024-05-19 06:19:46,088:INFO:                 ray: Not installed
2024-05-19 06:19:46,088:INFO:            hyperopt: Not installed
2024-05-19 06:19:46,088:INFO:              optuna: Not installed
2024-05-19 06:19:46,088:INFO:               skopt: Not installed
2024-05-19 06:19:46,088:INFO:              mlflow: Not installed
2024-05-19 06:19:46,088:INFO:              gradio: Not installed
2024-05-19 06:19:46,088:INFO:             fastapi: Not installed
2024-05-19 06:19:46,088:INFO:             uvicorn: Not installed
2024-05-19 06:19:46,088:INFO:              m2cgen: Not installed
2024-05-19 06:19:46,088:INFO:           evidently: Not installed
2024-05-19 06:19:46,088:INFO:               fugue: Not installed
2024-05-19 06:19:46,089:INFO:           streamlit: Not installed
2024-05-19 06:19:46,089:INFO:             prophet: Not installed
2024-05-19 06:19:46,089:INFO:None
2024-05-19 06:19:46,089:INFO:Set up data.
2024-05-19 06:19:46,115:INFO:Set up folding strategy.
2024-05-19 06:19:46,115:INFO:Set up train/test split.
2024-05-19 06:19:46,127:INFO:Set up index.
2024-05-19 06:19:46,132:INFO:Assigning column types.
2024-05-19 06:19:46,140:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-19 06:19:46,141:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-19 06:19:46,156:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-19 06:19:46,171:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:19:46,331:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:19:46,452:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:19:46,454:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:19:46,467:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:19:46,470:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-19 06:19:46,483:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-19 06:19:46,500:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:19:46,687:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:19:46,852:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:19:46,853:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:19:46,863:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:19:46,865:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-19 06:19:46,878:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-19 06:19:46,894:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:19:47,066:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:19:47,206:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:19:47,207:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:19:47,214:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:19:47,232:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-19 06:19:47,246:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:19:47,405:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:19:47,527:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:19:47,530:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:19:47,538:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:19:47,539:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-19 06:19:47,568:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:19:47,714:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:19:47,797:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:19:47,798:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:19:47,805:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:19:47,828:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:19:47,925:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:19:48,004:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:19:48,005:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:19:48,008:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:19:48,009:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-19 06:19:48,145:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:19:48,239:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:19:48,248:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:19:48,254:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:19:48,386:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:19:48,481:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:19:48,483:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:19:48,488:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:19:48,489:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-19 06:19:48,652:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:19:48,772:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:19:48,782:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:19:48,958:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:19:49,119:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:19:49,129:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:19:49,132:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-19 06:20:42,076:INFO:PyCaret RegressionExperiment
2024-05-19 06:20:42,076:INFO:Logging name: reg-default-name
2024-05-19 06:20:42,076:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-19 06:20:42,076:INFO:version 3.3.2
2024-05-19 06:20:42,076:INFO:Initializing setup()
2024-05-19 06:20:42,076:INFO:self.USI: 4a62
2024-05-19 06:20:42,076:INFO:self._variable_keys: {'memory', 'y_train', 'n_jobs_param', 'data', 'seed', 'target_param', 'transform_target_param', '_available_plots', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'gpu_param', 'idx', 'exp_name_log', 'log_plots_param', 'fold_generator', 'html_param', 'pipeline', 'fold_shuffle_param', 'X_test', 'y', 'X_train', 'exp_id', 'X', 'fold_groups_param', 'y_test', 'USI'}
2024-05-19 06:20:42,076:INFO:Checking environment
2024-05-19 06:20:42,077:INFO:python_version: 3.9.12
2024-05-19 06:20:42,077:INFO:python_build: ('main', 'Mar 24 2022 23:17:03')
2024-05-19 06:20:42,077:INFO:machine: AMD64
2024-05-19 06:20:42,077:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-19 06:20:42,085:INFO:Memory: svmem(total=16910155776, available=3084279808, percent=81.8, used=13825875968, free=3084279808)
2024-05-19 06:20:42,085:INFO:Physical Core: 4
2024-05-19 06:20:42,086:INFO:Logical Core: 8
2024-05-19 06:20:42,086:INFO:Checking libraries
2024-05-19 06:20:42,086:INFO:System:
2024-05-19 06:20:42,086:INFO:    python: 3.9.12 | packaged by conda-forge | (main, Mar 24 2022, 23:17:03) [MSC v.1929 64 bit (AMD64)]
2024-05-19 06:20:42,086:INFO:executable: c:\Program Files\Orange\python.exe
2024-05-19 06:20:42,086:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-19 06:20:42,086:INFO:PyCaret required dependencies:
2024-05-19 06:20:42,086:INFO:                 pip: 22.3.1
2024-05-19 06:20:42,086:INFO:          setuptools: 65.5.1
2024-05-19 06:20:42,086:INFO:             pycaret: 3.3.2
2024-05-19 06:20:42,086:INFO:             IPython: 8.4.0
2024-05-19 06:20:42,086:INFO:          ipywidgets: 7.7.1
2024-05-19 06:20:42,086:INFO:                tqdm: 4.66.2
2024-05-19 06:20:42,086:INFO:               numpy: 1.23.5
2024-05-19 06:20:42,086:INFO:              pandas: 1.4.4
2024-05-19 06:20:42,087:INFO:              jinja2: 3.1.2
2024-05-19 06:20:42,087:INFO:               scipy: 1.9.3
2024-05-19 06:20:42,087:INFO:              joblib: 1.2.0
2024-05-19 06:20:42,087:INFO:             sklearn: 1.1.3
2024-05-19 06:20:42,087:INFO:                pyod: 1.1.3
2024-05-19 06:20:42,087:INFO:            imblearn: 0.12.2
2024-05-19 06:20:42,087:INFO:   category_encoders: 2.6.3
2024-05-19 06:20:42,087:INFO:            lightgbm: 4.3.0
2024-05-19 06:20:42,087:INFO:               numba: 0.59.1
2024-05-19 06:20:42,087:INFO:            requests: 2.28.1
2024-05-19 06:20:42,087:INFO:          matplotlib: 3.6.2
2024-05-19 06:20:42,087:INFO:          scikitplot: 0.3.7
2024-05-19 06:20:42,087:INFO:         yellowbrick: 1.5
2024-05-19 06:20:42,087:INFO:              plotly: 5.11.0
2024-05-19 06:20:42,087:INFO:    plotly-resampler: Not installed
2024-05-19 06:20:42,087:INFO:             kaleido: 0.2.1
2024-05-19 06:20:42,088:INFO:           schemdraw: 0.15
2024-05-19 06:20:42,088:INFO:         statsmodels: 0.14.2
2024-05-19 06:20:42,088:INFO:              sktime: 0.26.0
2024-05-19 06:20:42,088:INFO:               tbats: 1.1.3
2024-05-19 06:20:42,088:INFO:            pmdarima: 2.0.4
2024-05-19 06:20:42,088:INFO:              psutil: 5.9.4
2024-05-19 06:20:42,088:INFO:          markupsafe: 2.1.2
2024-05-19 06:20:42,088:INFO:             pickle5: Not installed
2024-05-19 06:20:42,088:INFO:         cloudpickle: 3.0.0
2024-05-19 06:20:42,088:INFO:         deprecation: 2.1.0
2024-05-19 06:20:42,088:INFO:              xxhash: 3.4.1
2024-05-19 06:20:42,088:INFO:           wurlitzer: Not installed
2024-05-19 06:20:42,088:INFO:PyCaret optional dependencies:
2024-05-19 06:20:42,088:INFO:                shap: Not installed
2024-05-19 06:20:42,088:INFO:           interpret: Not installed
2024-05-19 06:20:42,089:INFO:                umap: Not installed
2024-05-19 06:20:42,089:INFO:     ydata_profiling: Not installed
2024-05-19 06:20:42,089:INFO:  explainerdashboard: Not installed
2024-05-19 06:20:42,089:INFO:             autoviz: Not installed
2024-05-19 06:20:42,089:INFO:           fairlearn: Not installed
2024-05-19 06:20:42,089:INFO:          deepchecks: Not installed
2024-05-19 06:20:42,089:INFO:             xgboost: 1.7.1
2024-05-19 06:20:42,089:INFO:            catboost: 1.1.1
2024-05-19 06:20:42,089:INFO:              kmodes: Not installed
2024-05-19 06:20:42,089:INFO:             mlxtend: Not installed
2024-05-19 06:20:42,089:INFO:       statsforecast: Not installed
2024-05-19 06:20:42,089:INFO:        tune_sklearn: Not installed
2024-05-19 06:20:42,089:INFO:                 ray: Not installed
2024-05-19 06:20:42,089:INFO:            hyperopt: Not installed
2024-05-19 06:20:42,090:INFO:              optuna: Not installed
2024-05-19 06:20:42,090:INFO:               skopt: Not installed
2024-05-19 06:20:42,090:INFO:              mlflow: Not installed
2024-05-19 06:20:42,090:INFO:              gradio: Not installed
2024-05-19 06:20:42,090:INFO:             fastapi: Not installed
2024-05-19 06:20:42,090:INFO:             uvicorn: Not installed
2024-05-19 06:20:42,090:INFO:              m2cgen: Not installed
2024-05-19 06:20:42,090:INFO:           evidently: Not installed
2024-05-19 06:20:42,090:INFO:               fugue: Not installed
2024-05-19 06:20:42,090:INFO:           streamlit: Not installed
2024-05-19 06:20:42,090:INFO:             prophet: Not installed
2024-05-19 06:20:42,090:INFO:None
2024-05-19 06:20:42,090:INFO:Set up data.
2024-05-19 06:20:42,105:INFO:Set up folding strategy.
2024-05-19 06:20:42,105:INFO:Set up train/test split.
2024-05-19 06:20:42,112:INFO:Set up index.
2024-05-19 06:20:42,113:INFO:Assigning column types.
2024-05-19 06:20:42,118:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-19 06:20:42,119:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,125:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,136:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,248:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,340:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,343:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:42,348:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:42,349:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,355:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,362:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,472:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,557:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,559:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:42,564:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:42,564:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-19 06:20:42,571:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,579:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,699:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,783:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,784:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:42,790:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:42,802:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,808:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:20:42,926:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:20:43,013:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:20:43,013:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:43,020:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:43,021:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-19 06:20:43,040:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:20:43,169:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:20:43,257:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:20:43,258:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:43,263:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:43,276:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-19 06:20:43,403:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:20:43,495:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:20:43,496:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:43,500:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:43,500:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-19 06:20:43,674:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:20:43,784:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:20:43,786:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:43,794:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:43,971:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:20:44,084:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 06:20:44,085:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:44,090:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:44,092:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-19 06:20:44,243:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:20:44,334:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:44,340:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:44,487:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-19 06:20:44,608:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:44,614:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:44,615:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-19 06:20:45,082:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:45,093:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:45,470:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:45,478:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:45,480:INFO:Preparing preprocessing pipeline...
2024-05-19 06:20:45,480:INFO:Set up simple imputation.
2024-05-19 06:20:45,532:INFO:Finished creating preprocessing pipeline.
2024-05-19 06:20:45,545:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-05-19 06:20:45,546:INFO:Creating final display dataframe.
2024-05-19 06:20:45,757:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         lastPrice
2                   Target type        Regression
3           Original data shape         (9563, 8)
4        Transformed data shape         (9563, 6)
5   Transformed train set shape         (6694, 6)
6    Transformed test set shape         (2869, 6)
7               Ignore features                 3
8              Numeric features                 5
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              4a62
2024-05-19 06:20:46,096:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:46,113:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:46,371:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-19 06:20:46,379:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-19 06:20:46,380:INFO:setup() successfully completed in 4.31s...............
2024-05-19 06:21:49,091:INFO:Initializing compare_models()
2024-05-19 06:21:49,093:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-05-19 06:21:49,094:INFO:Checking exceptions
2024-05-19 06:21:49,100:INFO:Preparing display monitor
2024-05-19 06:21:49,199:INFO:Initializing Linear Regression
2024-05-19 06:21:49,199:INFO:Total runtime is 0.0 minutes
2024-05-19 06:21:49,210:INFO:SubProcess create_model() called ==================================
2024-05-19 06:21:49,211:INFO:Initializing create_model()
2024-05-19 06:21:49,211:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:21:49,212:INFO:Checking exceptions
2024-05-19 06:21:49,212:INFO:Importing libraries
2024-05-19 06:21:49,212:INFO:Copying training dataset
2024-05-19 06:21:49,225:INFO:Defining folds
2024-05-19 06:21:49,226:INFO:Declaring metric variables
2024-05-19 06:21:49,233:INFO:Importing untrained model
2024-05-19 06:21:49,241:INFO:Linear Regression Imported successfully
2024-05-19 06:21:49,261:INFO:Starting cross validation
2024-05-19 06:21:49,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:21,995:INFO:Calculating mean and std
2024-05-19 06:22:21,999:INFO:Creating metrics dataframe
2024-05-19 06:22:22,010:INFO:Uploading results into container
2024-05-19 06:22:22,013:INFO:Uploading model into container now
2024-05-19 06:22:22,014:INFO:_master_model_container: 1
2024-05-19 06:22:22,015:INFO:_display_container: 2
2024-05-19 06:22:22,015:INFO:LinearRegression(n_jobs=-1)
2024-05-19 06:22:22,016:INFO:create_model() successfully completed......................................
2024-05-19 06:22:22,265:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:22,266:INFO:Creating metrics dataframe
2024-05-19 06:22:22,316:INFO:Initializing Lasso Regression
2024-05-19 06:22:22,316:INFO:Total runtime is 0.551952584584554 minutes
2024-05-19 06:22:22,323:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:22,324:INFO:Initializing create_model()
2024-05-19 06:22:22,325:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:22,326:INFO:Checking exceptions
2024-05-19 06:22:22,326:INFO:Importing libraries
2024-05-19 06:22:22,327:INFO:Copying training dataset
2024-05-19 06:22:22,344:INFO:Defining folds
2024-05-19 06:22:22,344:INFO:Declaring metric variables
2024-05-19 06:22:22,352:INFO:Importing untrained model
2024-05-19 06:22:22,364:INFO:Lasso Regression Imported successfully
2024-05-19 06:22:22,382:INFO:Starting cross validation
2024-05-19 06:22:22,385:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:22,647:INFO:Calculating mean and std
2024-05-19 06:22:22,650:INFO:Creating metrics dataframe
2024-05-19 06:22:22,658:INFO:Uploading results into container
2024-05-19 06:22:22,661:INFO:Uploading model into container now
2024-05-19 06:22:22,662:INFO:_master_model_container: 2
2024-05-19 06:22:22,663:INFO:_display_container: 2
2024-05-19 06:22:22,664:INFO:Lasso(random_state=123)
2024-05-19 06:22:22,664:INFO:create_model() successfully completed......................................
2024-05-19 06:22:22,922:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:22,922:INFO:Creating metrics dataframe
2024-05-19 06:22:22,966:INFO:Initializing Ridge Regression
2024-05-19 06:22:22,966:INFO:Total runtime is 0.5627885023752848 minutes
2024-05-19 06:22:22,974:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:22,975:INFO:Initializing create_model()
2024-05-19 06:22:22,976:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:22,977:INFO:Checking exceptions
2024-05-19 06:22:22,977:INFO:Importing libraries
2024-05-19 06:22:22,977:INFO:Copying training dataset
2024-05-19 06:22:22,988:INFO:Defining folds
2024-05-19 06:22:22,989:INFO:Declaring metric variables
2024-05-19 06:22:23,000:INFO:Importing untrained model
2024-05-19 06:22:23,013:INFO:Ridge Regression Imported successfully
2024-05-19 06:22:23,031:INFO:Starting cross validation
2024-05-19 06:22:23,033:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:23,261:INFO:Calculating mean and std
2024-05-19 06:22:23,265:INFO:Creating metrics dataframe
2024-05-19 06:22:23,278:INFO:Uploading results into container
2024-05-19 06:22:23,281:INFO:Uploading model into container now
2024-05-19 06:22:23,283:INFO:_master_model_container: 3
2024-05-19 06:22:23,283:INFO:_display_container: 2
2024-05-19 06:22:23,284:INFO:Ridge(random_state=123)
2024-05-19 06:22:23,285:INFO:create_model() successfully completed......................................
2024-05-19 06:22:23,596:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:23,597:INFO:Creating metrics dataframe
2024-05-19 06:22:23,640:INFO:Initializing Elastic Net
2024-05-19 06:22:23,640:INFO:Total runtime is 0.574017055829366 minutes
2024-05-19 06:22:23,654:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:23,655:INFO:Initializing create_model()
2024-05-19 06:22:23,655:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:23,656:INFO:Checking exceptions
2024-05-19 06:22:23,656:INFO:Importing libraries
2024-05-19 06:22:23,657:INFO:Copying training dataset
2024-05-19 06:22:23,673:INFO:Defining folds
2024-05-19 06:22:23,674:INFO:Declaring metric variables
2024-05-19 06:22:23,688:INFO:Importing untrained model
2024-05-19 06:22:23,701:INFO:Elastic Net Imported successfully
2024-05-19 06:22:23,723:INFO:Starting cross validation
2024-05-19 06:22:23,727:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:24,022:INFO:Calculating mean and std
2024-05-19 06:22:24,026:INFO:Creating metrics dataframe
2024-05-19 06:22:24,039:INFO:Uploading results into container
2024-05-19 06:22:24,041:INFO:Uploading model into container now
2024-05-19 06:22:24,043:INFO:_master_model_container: 4
2024-05-19 06:22:24,043:INFO:_display_container: 2
2024-05-19 06:22:24,044:INFO:ElasticNet(random_state=123)
2024-05-19 06:22:24,044:INFO:create_model() successfully completed......................................
2024-05-19 06:22:24,301:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:24,302:INFO:Creating metrics dataframe
2024-05-19 06:22:24,340:INFO:Initializing Least Angle Regression
2024-05-19 06:22:24,341:INFO:Total runtime is 0.585698115825653 minutes
2024-05-19 06:22:24,351:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:24,355:INFO:Initializing create_model()
2024-05-19 06:22:24,355:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:24,356:INFO:Checking exceptions
2024-05-19 06:22:24,356:INFO:Importing libraries
2024-05-19 06:22:24,356:INFO:Copying training dataset
2024-05-19 06:22:24,374:INFO:Defining folds
2024-05-19 06:22:24,374:INFO:Declaring metric variables
2024-05-19 06:22:24,386:INFO:Importing untrained model
2024-05-19 06:22:24,395:INFO:Least Angle Regression Imported successfully
2024-05-19 06:22:24,414:INFO:Starting cross validation
2024-05-19 06:22:24,416:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:24,632:INFO:Calculating mean and std
2024-05-19 06:22:24,635:INFO:Creating metrics dataframe
2024-05-19 06:22:24,644:INFO:Uploading results into container
2024-05-19 06:22:24,645:INFO:Uploading model into container now
2024-05-19 06:22:24,646:INFO:_master_model_container: 5
2024-05-19 06:22:24,647:INFO:_display_container: 2
2024-05-19 06:22:24,650:INFO:Lars(random_state=123)
2024-05-19 06:22:24,650:INFO:create_model() successfully completed......................................
2024-05-19 06:22:24,924:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:24,925:INFO:Creating metrics dataframe
2024-05-19 06:22:24,965:INFO:Initializing Lasso Least Angle Regression
2024-05-19 06:22:24,965:INFO:Total runtime is 0.5961066961288451 minutes
2024-05-19 06:22:24,975:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:24,977:INFO:Initializing create_model()
2024-05-19 06:22:24,978:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:24,978:INFO:Checking exceptions
2024-05-19 06:22:24,979:INFO:Importing libraries
2024-05-19 06:22:24,979:INFO:Copying training dataset
2024-05-19 06:22:24,999:INFO:Defining folds
2024-05-19 06:22:24,999:INFO:Declaring metric variables
2024-05-19 06:22:25,008:INFO:Importing untrained model
2024-05-19 06:22:25,024:INFO:Lasso Least Angle Regression Imported successfully
2024-05-19 06:22:25,051:INFO:Starting cross validation
2024-05-19 06:22:25,054:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:25,306:INFO:Calculating mean and std
2024-05-19 06:22:25,312:INFO:Creating metrics dataframe
2024-05-19 06:22:25,340:INFO:Uploading results into container
2024-05-19 06:22:25,342:INFO:Uploading model into container now
2024-05-19 06:22:25,344:INFO:_master_model_container: 6
2024-05-19 06:22:25,344:INFO:_display_container: 2
2024-05-19 06:22:25,348:INFO:LassoLars(random_state=123)
2024-05-19 06:22:25,356:INFO:create_model() successfully completed......................................
2024-05-19 06:22:25,842:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:25,843:INFO:Creating metrics dataframe
2024-05-19 06:22:25,880:INFO:Initializing Orthogonal Matching Pursuit
2024-05-19 06:22:25,881:INFO:Total runtime is 0.6113655765851338 minutes
2024-05-19 06:22:25,891:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:25,892:INFO:Initializing create_model()
2024-05-19 06:22:25,892:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:25,893:INFO:Checking exceptions
2024-05-19 06:22:25,893:INFO:Importing libraries
2024-05-19 06:22:25,893:INFO:Copying training dataset
2024-05-19 06:22:25,910:INFO:Defining folds
2024-05-19 06:22:25,911:INFO:Declaring metric variables
2024-05-19 06:22:25,953:INFO:Importing untrained model
2024-05-19 06:22:25,967:INFO:Orthogonal Matching Pursuit Imported successfully
2024-05-19 06:22:25,996:INFO:Starting cross validation
2024-05-19 06:22:25,999:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:26,259:INFO:Calculating mean and std
2024-05-19 06:22:26,265:INFO:Creating metrics dataframe
2024-05-19 06:22:26,276:INFO:Uploading results into container
2024-05-19 06:22:26,278:INFO:Uploading model into container now
2024-05-19 06:22:26,281:INFO:_master_model_container: 7
2024-05-19 06:22:26,282:INFO:_display_container: 2
2024-05-19 06:22:26,282:INFO:OrthogonalMatchingPursuit()
2024-05-19 06:22:26,283:INFO:create_model() successfully completed......................................
2024-05-19 06:22:26,538:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:26,539:INFO:Creating metrics dataframe
2024-05-19 06:22:26,574:INFO:Initializing Bayesian Ridge
2024-05-19 06:22:26,574:INFO:Total runtime is 0.6229224284489949 minutes
2024-05-19 06:22:26,585:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:26,586:INFO:Initializing create_model()
2024-05-19 06:22:26,587:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:26,587:INFO:Checking exceptions
2024-05-19 06:22:26,587:INFO:Importing libraries
2024-05-19 06:22:26,588:INFO:Copying training dataset
2024-05-19 06:22:26,602:INFO:Defining folds
2024-05-19 06:22:26,603:INFO:Declaring metric variables
2024-05-19 06:22:26,615:INFO:Importing untrained model
2024-05-19 06:22:26,626:INFO:Bayesian Ridge Imported successfully
2024-05-19 06:22:26,645:INFO:Starting cross validation
2024-05-19 06:22:26,647:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:26,885:INFO:Calculating mean and std
2024-05-19 06:22:26,891:INFO:Creating metrics dataframe
2024-05-19 06:22:26,901:INFO:Uploading results into container
2024-05-19 06:22:26,902:INFO:Uploading model into container now
2024-05-19 06:22:26,904:INFO:_master_model_container: 8
2024-05-19 06:22:26,904:INFO:_display_container: 2
2024-05-19 06:22:26,906:INFO:BayesianRidge()
2024-05-19 06:22:26,906:INFO:create_model() successfully completed......................................
2024-05-19 06:22:27,155:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:27,155:INFO:Creating metrics dataframe
2024-05-19 06:22:27,185:INFO:Initializing Passive Aggressive Regressor
2024-05-19 06:22:27,186:INFO:Total runtime is 0.6331211686134338 minutes
2024-05-19 06:22:27,199:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:27,200:INFO:Initializing create_model()
2024-05-19 06:22:27,201:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:27,201:INFO:Checking exceptions
2024-05-19 06:22:27,201:INFO:Importing libraries
2024-05-19 06:22:27,201:INFO:Copying training dataset
2024-05-19 06:22:27,221:INFO:Defining folds
2024-05-19 06:22:27,222:INFO:Declaring metric variables
2024-05-19 06:22:27,235:INFO:Importing untrained model
2024-05-19 06:22:27,244:INFO:Passive Aggressive Regressor Imported successfully
2024-05-19 06:22:27,261:INFO:Starting cross validation
2024-05-19 06:22:27,262:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:27,680:INFO:Calculating mean and std
2024-05-19 06:22:27,684:INFO:Creating metrics dataframe
2024-05-19 06:22:27,692:INFO:Uploading results into container
2024-05-19 06:22:27,694:INFO:Uploading model into container now
2024-05-19 06:22:27,696:INFO:_master_model_container: 9
2024-05-19 06:22:27,697:INFO:_display_container: 2
2024-05-19 06:22:27,698:INFO:PassiveAggressiveRegressor(random_state=123)
2024-05-19 06:22:27,698:INFO:create_model() successfully completed......................................
2024-05-19 06:22:27,954:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:27,954:INFO:Creating metrics dataframe
2024-05-19 06:22:27,980:INFO:Initializing Huber Regressor
2024-05-19 06:22:27,980:INFO:Total runtime is 0.6463593959808349 minutes
2024-05-19 06:22:27,988:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:27,988:INFO:Initializing create_model()
2024-05-19 06:22:27,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:27,989:INFO:Checking exceptions
2024-05-19 06:22:27,990:INFO:Importing libraries
2024-05-19 06:22:27,990:INFO:Copying training dataset
2024-05-19 06:22:28,006:INFO:Defining folds
2024-05-19 06:22:28,006:INFO:Declaring metric variables
2024-05-19 06:22:28,015:INFO:Importing untrained model
2024-05-19 06:22:28,023:INFO:Huber Regressor Imported successfully
2024-05-19 06:22:28,047:INFO:Starting cross validation
2024-05-19 06:22:28,049:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:28,632:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-05-19 06:22:28,746:INFO:Calculating mean and std
2024-05-19 06:22:28,749:INFO:Creating metrics dataframe
2024-05-19 06:22:28,758:INFO:Uploading results into container
2024-05-19 06:22:28,759:INFO:Uploading model into container now
2024-05-19 06:22:28,760:INFO:_master_model_container: 10
2024-05-19 06:22:28,761:INFO:_display_container: 2
2024-05-19 06:22:28,761:INFO:HuberRegressor()
2024-05-19 06:22:28,761:INFO:create_model() successfully completed......................................
2024-05-19 06:22:29,014:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:29,015:INFO:Creating metrics dataframe
2024-05-19 06:22:29,050:INFO:Initializing K Neighbors Regressor
2024-05-19 06:22:29,051:INFO:Total runtime is 0.6642053763071696 minutes
2024-05-19 06:22:29,063:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:29,065:INFO:Initializing create_model()
2024-05-19 06:22:29,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:29,065:INFO:Checking exceptions
2024-05-19 06:22:29,066:INFO:Importing libraries
2024-05-19 06:22:29,066:INFO:Copying training dataset
2024-05-19 06:22:29,088:INFO:Defining folds
2024-05-19 06:22:29,089:INFO:Declaring metric variables
2024-05-19 06:22:29,102:INFO:Importing untrained model
2024-05-19 06:22:29,113:INFO:K Neighbors Regressor Imported successfully
2024-05-19 06:22:29,132:INFO:Starting cross validation
2024-05-19 06:22:29,135:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:29,479:INFO:Calculating mean and std
2024-05-19 06:22:29,481:INFO:Creating metrics dataframe
2024-05-19 06:22:29,488:INFO:Uploading results into container
2024-05-19 06:22:29,489:INFO:Uploading model into container now
2024-05-19 06:22:29,492:INFO:_master_model_container: 11
2024-05-19 06:22:29,492:INFO:_display_container: 2
2024-05-19 06:22:29,493:INFO:KNeighborsRegressor(n_jobs=-1)
2024-05-19 06:22:29,494:INFO:create_model() successfully completed......................................
2024-05-19 06:22:29,734:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:29,734:INFO:Creating metrics dataframe
2024-05-19 06:22:29,765:INFO:Initializing Decision Tree Regressor
2024-05-19 06:22:29,766:INFO:Total runtime is 0.6761285384496053 minutes
2024-05-19 06:22:29,777:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:29,779:INFO:Initializing create_model()
2024-05-19 06:22:29,779:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:29,779:INFO:Checking exceptions
2024-05-19 06:22:29,779:INFO:Importing libraries
2024-05-19 06:22:29,779:INFO:Copying training dataset
2024-05-19 06:22:29,798:INFO:Defining folds
2024-05-19 06:22:29,799:INFO:Declaring metric variables
2024-05-19 06:22:29,809:INFO:Importing untrained model
2024-05-19 06:22:29,820:INFO:Decision Tree Regressor Imported successfully
2024-05-19 06:22:29,838:INFO:Starting cross validation
2024-05-19 06:22:29,840:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:30,175:INFO:Calculating mean and std
2024-05-19 06:22:30,178:INFO:Creating metrics dataframe
2024-05-19 06:22:30,188:INFO:Uploading results into container
2024-05-19 06:22:30,189:INFO:Uploading model into container now
2024-05-19 06:22:30,190:INFO:_master_model_container: 12
2024-05-19 06:22:30,191:INFO:_display_container: 2
2024-05-19 06:22:30,192:INFO:DecisionTreeRegressor(random_state=123)
2024-05-19 06:22:30,193:INFO:create_model() successfully completed......................................
2024-05-19 06:22:30,416:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:30,417:INFO:Creating metrics dataframe
2024-05-19 06:22:30,448:INFO:Initializing Random Forest Regressor
2024-05-19 06:22:30,448:INFO:Total runtime is 0.6874898155530293 minutes
2024-05-19 06:22:30,457:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:30,458:INFO:Initializing create_model()
2024-05-19 06:22:30,458:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:30,459:INFO:Checking exceptions
2024-05-19 06:22:30,459:INFO:Importing libraries
2024-05-19 06:22:30,459:INFO:Copying training dataset
2024-05-19 06:22:30,473:INFO:Defining folds
2024-05-19 06:22:30,473:INFO:Declaring metric variables
2024-05-19 06:22:30,485:INFO:Importing untrained model
2024-05-19 06:22:30,494:INFO:Random Forest Regressor Imported successfully
2024-05-19 06:22:30,512:INFO:Starting cross validation
2024-05-19 06:22:30,514:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:37,437:INFO:Calculating mean and std
2024-05-19 06:22:37,441:INFO:Creating metrics dataframe
2024-05-19 06:22:37,455:INFO:Uploading results into container
2024-05-19 06:22:37,458:INFO:Uploading model into container now
2024-05-19 06:22:37,459:INFO:_master_model_container: 13
2024-05-19 06:22:37,459:INFO:_display_container: 2
2024-05-19 06:22:37,460:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-05-19 06:22:37,461:INFO:create_model() successfully completed......................................
2024-05-19 06:22:37,781:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:37,782:INFO:Creating metrics dataframe
2024-05-19 06:22:37,823:INFO:Initializing Extra Trees Regressor
2024-05-19 06:22:37,824:INFO:Total runtime is 0.8104250391324361 minutes
2024-05-19 06:22:37,836:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:37,838:INFO:Initializing create_model()
2024-05-19 06:22:37,839:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:37,839:INFO:Checking exceptions
2024-05-19 06:22:37,839:INFO:Importing libraries
2024-05-19 06:22:37,839:INFO:Copying training dataset
2024-05-19 06:22:37,857:INFO:Defining folds
2024-05-19 06:22:37,857:INFO:Declaring metric variables
2024-05-19 06:22:37,870:INFO:Importing untrained model
2024-05-19 06:22:37,882:INFO:Extra Trees Regressor Imported successfully
2024-05-19 06:22:37,902:INFO:Starting cross validation
2024-05-19 06:22:37,905:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:41,956:INFO:Calculating mean and std
2024-05-19 06:22:41,959:INFO:Creating metrics dataframe
2024-05-19 06:22:41,971:INFO:Uploading results into container
2024-05-19 06:22:41,973:INFO:Uploading model into container now
2024-05-19 06:22:41,975:INFO:_master_model_container: 14
2024-05-19 06:22:41,975:INFO:_display_container: 2
2024-05-19 06:22:41,976:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-19 06:22:41,976:INFO:create_model() successfully completed......................................
2024-05-19 06:22:42,249:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:42,250:INFO:Creating metrics dataframe
2024-05-19 06:22:42,287:INFO:Initializing AdaBoost Regressor
2024-05-19 06:22:42,287:INFO:Total runtime is 0.884809156258901 minutes
2024-05-19 06:22:42,303:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:42,304:INFO:Initializing create_model()
2024-05-19 06:22:42,305:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:42,307:INFO:Checking exceptions
2024-05-19 06:22:42,307:INFO:Importing libraries
2024-05-19 06:22:42,308:INFO:Copying training dataset
2024-05-19 06:22:42,333:INFO:Defining folds
2024-05-19 06:22:42,333:INFO:Declaring metric variables
2024-05-19 06:22:42,345:INFO:Importing untrained model
2024-05-19 06:22:42,358:INFO:AdaBoost Regressor Imported successfully
2024-05-19 06:22:42,385:INFO:Starting cross validation
2024-05-19 06:22:42,388:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:44,727:INFO:Calculating mean and std
2024-05-19 06:22:44,735:INFO:Creating metrics dataframe
2024-05-19 06:22:44,750:INFO:Uploading results into container
2024-05-19 06:22:44,753:INFO:Uploading model into container now
2024-05-19 06:22:44,754:INFO:_master_model_container: 15
2024-05-19 06:22:44,754:INFO:_display_container: 2
2024-05-19 06:22:44,755:INFO:AdaBoostRegressor(random_state=123)
2024-05-19 06:22:44,756:INFO:create_model() successfully completed......................................
2024-05-19 06:22:45,057:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:45,058:INFO:Creating metrics dataframe
2024-05-19 06:22:45,105:INFO:Initializing Gradient Boosting Regressor
2024-05-19 06:22:45,105:INFO:Total runtime is 0.9317770520846049 minutes
2024-05-19 06:22:45,120:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:45,120:INFO:Initializing create_model()
2024-05-19 06:22:45,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:45,121:INFO:Checking exceptions
2024-05-19 06:22:45,122:INFO:Importing libraries
2024-05-19 06:22:45,122:INFO:Copying training dataset
2024-05-19 06:22:45,142:INFO:Defining folds
2024-05-19 06:22:45,143:INFO:Declaring metric variables
2024-05-19 06:22:45,158:INFO:Importing untrained model
2024-05-19 06:22:45,176:INFO:Gradient Boosting Regressor Imported successfully
2024-05-19 06:22:45,206:INFO:Starting cross validation
2024-05-19 06:22:45,209:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:50,620:INFO:Calculating mean and std
2024-05-19 06:22:50,627:INFO:Creating metrics dataframe
2024-05-19 06:22:50,640:INFO:Uploading results into container
2024-05-19 06:22:50,641:INFO:Uploading model into container now
2024-05-19 06:22:50,642:INFO:_master_model_container: 16
2024-05-19 06:22:50,642:INFO:_display_container: 2
2024-05-19 06:22:50,643:INFO:GradientBoostingRegressor(random_state=123)
2024-05-19 06:22:50,644:INFO:create_model() successfully completed......................................
2024-05-19 06:22:50,920:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:50,920:INFO:Creating metrics dataframe
2024-05-19 06:22:50,970:INFO:Initializing Extreme Gradient Boosting
2024-05-19 06:22:50,971:INFO:Total runtime is 1.0295451641082765 minutes
2024-05-19 06:22:50,986:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:50,987:INFO:Initializing create_model()
2024-05-19 06:22:50,987:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:50,988:INFO:Checking exceptions
2024-05-19 06:22:50,988:INFO:Importing libraries
2024-05-19 06:22:50,988:INFO:Copying training dataset
2024-05-19 06:22:51,012:INFO:Defining folds
2024-05-19 06:22:51,013:INFO:Declaring metric variables
2024-05-19 06:22:51,030:INFO:Importing untrained model
2024-05-19 06:22:51,046:INFO:Extreme Gradient Boosting Imported successfully
2024-05-19 06:22:51,068:INFO:Starting cross validation
2024-05-19 06:22:51,071:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:22:54,532:INFO:Calculating mean and std
2024-05-19 06:22:54,539:INFO:Creating metrics dataframe
2024-05-19 06:22:54,555:INFO:Uploading results into container
2024-05-19 06:22:54,561:INFO:Uploading model into container now
2024-05-19 06:22:54,564:INFO:_master_model_container: 17
2024-05-19 06:22:54,564:INFO:_display_container: 2
2024-05-19 06:22:54,569:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             predictor=None, random_state=123, ...)
2024-05-19 06:22:54,570:INFO:create_model() successfully completed......................................
2024-05-19 06:22:54,945:INFO:SubProcess create_model() end ==================================
2024-05-19 06:22:54,946:INFO:Creating metrics dataframe
2024-05-19 06:22:55,023:INFO:Initializing Light Gradient Boosting Machine
2024-05-19 06:22:55,023:INFO:Total runtime is 1.0970742146174113 minutes
2024-05-19 06:22:55,034:INFO:SubProcess create_model() called ==================================
2024-05-19 06:22:55,035:INFO:Initializing create_model()
2024-05-19 06:22:55,036:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:22:55,036:INFO:Checking exceptions
2024-05-19 06:22:55,036:INFO:Importing libraries
2024-05-19 06:22:55,036:INFO:Copying training dataset
2024-05-19 06:22:55,071:INFO:Defining folds
2024-05-19 06:22:55,072:INFO:Declaring metric variables
2024-05-19 06:22:55,091:INFO:Importing untrained model
2024-05-19 06:22:55,108:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-19 06:22:55,145:INFO:Starting cross validation
2024-05-19 06:22:55,148:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:23:06,868:INFO:Calculating mean and std
2024-05-19 06:23:06,873:INFO:Creating metrics dataframe
2024-05-19 06:23:06,884:INFO:Uploading results into container
2024-05-19 06:23:06,887:INFO:Uploading model into container now
2024-05-19 06:23:06,888:INFO:_master_model_container: 18
2024-05-19 06:23:06,888:INFO:_display_container: 2
2024-05-19 06:23:06,890:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-05-19 06:23:06,890:INFO:create_model() successfully completed......................................
2024-05-19 06:23:07,166:INFO:SubProcess create_model() end ==================================
2024-05-19 06:23:07,167:INFO:Creating metrics dataframe
2024-05-19 06:23:07,222:INFO:Initializing CatBoost Regressor
2024-05-19 06:23:07,222:INFO:Total runtime is 1.300383492310842 minutes
2024-05-19 06:23:07,234:INFO:SubProcess create_model() called ==================================
2024-05-19 06:23:07,235:INFO:Initializing create_model()
2024-05-19 06:23:07,236:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:23:07,236:INFO:Checking exceptions
2024-05-19 06:23:07,237:INFO:Importing libraries
2024-05-19 06:23:07,237:INFO:Copying training dataset
2024-05-19 06:23:07,257:INFO:Defining folds
2024-05-19 06:23:07,257:INFO:Declaring metric variables
2024-05-19 06:23:07,272:INFO:Importing untrained model
2024-05-19 06:23:07,305:INFO:CatBoost Regressor Imported successfully
2024-05-19 06:23:07,332:INFO:Starting cross validation
2024-05-19 06:23:07,334:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:23:48,237:INFO:Calculating mean and std
2024-05-19 06:23:48,242:INFO:Creating metrics dataframe
2024-05-19 06:23:48,254:INFO:Uploading results into container
2024-05-19 06:23:48,256:INFO:Uploading model into container now
2024-05-19 06:23:48,257:INFO:_master_model_container: 19
2024-05-19 06:23:48,258:INFO:_display_container: 2
2024-05-19 06:23:48,258:INFO:<catboost.core.CatBoostRegressor object at 0x00000235B846F580>
2024-05-19 06:23:48,258:INFO:create_model() successfully completed......................................
2024-05-19 06:23:48,533:INFO:SubProcess create_model() end ==================================
2024-05-19 06:23:48,533:INFO:Creating metrics dataframe
2024-05-19 06:23:48,565:INFO:Initializing Dummy Regressor
2024-05-19 06:23:48,565:INFO:Total runtime is 1.9894460638364158 minutes
2024-05-19 06:23:48,575:INFO:SubProcess create_model() called ==================================
2024-05-19 06:23:48,576:INFO:Initializing create_model()
2024-05-19 06:23:48,576:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000235CBBF7B80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:23:48,577:INFO:Checking exceptions
2024-05-19 06:23:48,577:INFO:Importing libraries
2024-05-19 06:23:48,577:INFO:Copying training dataset
2024-05-19 06:23:48,593:INFO:Defining folds
2024-05-19 06:23:48,595:INFO:Declaring metric variables
2024-05-19 06:23:48,604:INFO:Importing untrained model
2024-05-19 06:23:48,614:INFO:Dummy Regressor Imported successfully
2024-05-19 06:23:48,632:INFO:Starting cross validation
2024-05-19 06:23:48,633:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:23:48,828:INFO:Calculating mean and std
2024-05-19 06:23:48,832:INFO:Creating metrics dataframe
2024-05-19 06:23:48,839:INFO:Uploading results into container
2024-05-19 06:23:48,842:INFO:Uploading model into container now
2024-05-19 06:23:48,843:INFO:_master_model_container: 20
2024-05-19 06:23:48,844:INFO:_display_container: 2
2024-05-19 06:23:48,845:INFO:DummyRegressor()
2024-05-19 06:23:48,845:INFO:create_model() successfully completed......................................
2024-05-19 06:23:49,070:INFO:SubProcess create_model() end ==================================
2024-05-19 06:23:49,071:INFO:Creating metrics dataframe
2024-05-19 06:23:49,145:INFO:Initializing create_model()
2024-05-19 06:23:49,146:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:23:49,146:INFO:Checking exceptions
2024-05-19 06:23:49,151:INFO:Importing libraries
2024-05-19 06:23:49,151:INFO:Copying training dataset
2024-05-19 06:23:49,160:INFO:Defining folds
2024-05-19 06:23:49,161:INFO:Declaring metric variables
2024-05-19 06:23:49,161:INFO:Importing untrained model
2024-05-19 06:23:49,161:INFO:Declaring custom model
2024-05-19 06:23:49,162:INFO:Extra Trees Regressor Imported successfully
2024-05-19 06:23:49,163:INFO:Cross validation set to False
2024-05-19 06:23:49,164:INFO:Fitting Model
2024-05-19 06:23:49,840:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-19 06:23:49,841:INFO:create_model() successfully completed......................................
2024-05-19 06:23:50,161:INFO:_master_model_container: 20
2024-05-19 06:23:50,161:INFO:_display_container: 2
2024-05-19 06:23:50,162:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-19 06:23:50,162:INFO:compare_models() successfully completed......................................
2024-05-19 06:24:58,102:INFO:Initializing evaluate_model()
2024-05-19 06:24:58,103:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-19 06:24:58,154:INFO:Initializing plot_model()
2024-05-19 06:24:58,155:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, system=True)
2024-05-19 06:24:58,155:INFO:Checking exceptions
2024-05-19 06:24:58,205:INFO:Preloading libraries
2024-05-19 06:24:58,455:INFO:Copying training dataset
2024-05-19 06:24:58,456:INFO:Plot type: pipeline
2024-05-19 06:24:58,874:INFO:Visual Rendered Successfully
2024-05-19 06:24:59,103:INFO:plot_model() successfully completed......................................
2024-05-19 06:25:38,056:INFO:Initializing plot_model()
2024-05-19 06:25:38,057:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, system=True)
2024-05-19 06:25:38,057:INFO:Checking exceptions
2024-05-19 06:25:38,111:INFO:Preloading libraries
2024-05-19 06:25:38,372:INFO:Copying training dataset
2024-05-19 06:25:38,372:INFO:Plot type: parameter
2024-05-19 06:25:38,383:INFO:Visual Rendered Successfully
2024-05-19 06:25:38,591:INFO:plot_model() successfully completed......................................
2024-05-19 06:25:59,269:INFO:Initializing plot_model()
2024-05-19 06:25:59,270:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, system=True)
2024-05-19 06:25:59,270:INFO:Checking exceptions
2024-05-19 06:25:59,321:INFO:Preloading libraries
2024-05-19 06:25:59,524:INFO:Copying training dataset
2024-05-19 06:25:59,524:INFO:Plot type: feature
2024-05-19 06:25:59,525:WARNING:No coef_ found. Trying feature_importances_
2024-05-19 06:25:59,863:INFO:Visual Rendered Successfully
2024-05-19 06:26:00,072:INFO:plot_model() successfully completed......................................
2024-05-19 06:27:07,135:INFO:Initializing predict_model()
2024-05-19 06:27:07,136:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000235CB164670>)
2024-05-19 06:27:07,136:INFO:Checking exceptions
2024-05-19 06:27:07,136:INFO:Preloading libraries
2024-05-19 06:27:07,367:WARNING:C:\Users\Admin\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-05-19 06:29:23,377:INFO:Initializing save_model()
2024-05-19 06:29:23,377:INFO:save_model(model=ExtraTreesRegressor(n_jobs=-1, random_state=123), model_name=model_et, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-05-19 06:29:23,378:INFO:Adding model into prep_pipe
2024-05-19 06:29:23,553:INFO:model_et.pkl saved in current working directory
2024-05-19 06:29:23,566:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2024-05-19 06:29:23,567:INFO:save_model() successfully completed......................................
2024-05-19 06:30:52,351:INFO:Initializing create_model()
2024-05-19 06:30:52,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000235CB0D4F10>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 06:30:52,353:INFO:Checking exceptions
2024-05-19 06:30:52,431:INFO:Importing libraries
2024-05-19 06:30:52,432:INFO:Copying training dataset
2024-05-19 06:30:52,452:INFO:Defining folds
2024-05-19 06:30:52,452:INFO:Declaring metric variables
2024-05-19 06:30:52,461:INFO:Importing untrained model
2024-05-19 06:30:52,475:INFO:Random Forest Regressor Imported successfully
2024-05-19 06:30:52,497:INFO:Starting cross validation
2024-05-19 06:30:52,499:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-19 06:31:20,659:INFO:Calculating mean and std
2024-05-19 06:31:20,665:INFO:Creating metrics dataframe
2024-05-19 06:31:20,690:INFO:Finalizing model
2024-05-19 06:31:22,194:INFO:Uploading results into container
2024-05-19 06:31:22,199:INFO:Uploading model into container now
2024-05-19 06:31:22,238:INFO:_master_model_container: 21
2024-05-19 06:31:22,239:INFO:_display_container: 4
2024-05-19 06:31:22,240:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-05-19 06:31:22,242:INFO:create_model() successfully completed......................................
2024-05-19 06:32:41,889:INFO:Initializing save_model()
2024-05-19 06:32:41,890:INFO:save_model(model=RandomForestRegressor(n_jobs=-1, random_state=123), model_name=model_rf, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-05-19 06:32:41,890:INFO:Adding model into prep_pipe
2024-05-19 06:32:42,122:INFO:model_rf.pkl saved in current working directory
2024-05-19 06:32:42,136:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 RandomForestRegressor(n_jobs=-1, random_state=123))])
2024-05-19 06:32:42,137:INFO:save_model() successfully completed......................................
2024-05-21 04:42:43,766:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 04:42:43,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 04:42:43,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 04:42:43,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 04:42:46,956:INFO:PyCaret RegressionExperiment
2024-05-21 04:42:46,956:INFO:Logging name: reg-default-name
2024-05-21 04:42:46,957:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-21 04:42:46,957:INFO:version 3.3.2
2024-05-21 04:42:46,957:INFO:Initializing setup()
2024-05-21 04:42:46,957:INFO:self.USI: c20b
2024-05-21 04:42:46,957:INFO:self._variable_keys: {'fold_generator', 'transform_target_param', 'X_train', '_available_plots', 'exp_id', 'exp_name_log', 'y_test', 'X', 'y_train', 'gpu_param', 'logging_param', 'fold_groups_param', 'gpu_n_jobs_param', '_ml_usecase', 'fold_shuffle_param', 'USI', 'seed', 'target_param', 'idx', 'pipeline', 'X_test', 'data', 'html_param', 'log_plots_param', 'n_jobs_param', 'y', 'memory'}
2024-05-21 04:42:46,957:INFO:Checking environment
2024-05-21 04:42:46,957:INFO:python_version: 3.9.12
2024-05-21 04:42:46,957:INFO:python_build: ('main', 'Mar 24 2022 23:17:03')
2024-05-21 04:42:46,957:INFO:machine: AMD64
2024-05-21 04:42:46,957:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-21 04:42:46,969:INFO:Memory: svmem(total=16910155776, available=3082350592, percent=81.8, used=13827805184, free=3082350592)
2024-05-21 04:42:46,969:INFO:Physical Core: 4
2024-05-21 04:42:46,969:INFO:Logical Core: 8
2024-05-21 04:42:46,969:INFO:Checking libraries
2024-05-21 04:42:46,969:INFO:System:
2024-05-21 04:42:46,969:INFO:    python: 3.9.12 | packaged by conda-forge | (main, Mar 24 2022, 23:17:03) [MSC v.1929 64 bit (AMD64)]
2024-05-21 04:42:46,969:INFO:executable: c:\Program Files\Orange\python.exe
2024-05-21 04:42:46,969:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-21 04:42:46,970:INFO:PyCaret required dependencies:
2024-05-21 04:42:47,134:INFO:                 pip: 22.3.1
2024-05-21 04:42:47,134:INFO:          setuptools: 65.5.1
2024-05-21 04:42:47,134:INFO:             pycaret: 3.3.2
2024-05-21 04:42:47,134:INFO:             IPython: 8.4.0
2024-05-21 04:42:47,135:INFO:          ipywidgets: 7.7.1
2024-05-21 04:42:47,135:INFO:                tqdm: 4.66.2
2024-05-21 04:42:47,135:INFO:               numpy: 1.23.5
2024-05-21 04:42:47,135:INFO:              pandas: 1.4.4
2024-05-21 04:42:47,135:INFO:              jinja2: 3.1.2
2024-05-21 04:42:47,135:INFO:               scipy: 1.9.3
2024-05-21 04:42:47,135:INFO:              joblib: 1.2.0
2024-05-21 04:42:47,135:INFO:             sklearn: 1.1.3
2024-05-21 04:42:47,135:INFO:                pyod: 1.1.3
2024-05-21 04:42:47,135:INFO:            imblearn: 0.12.2
2024-05-21 04:42:47,135:INFO:   category_encoders: 2.6.3
2024-05-21 04:42:47,135:INFO:            lightgbm: 4.3.0
2024-05-21 04:42:47,135:INFO:               numba: 0.59.1
2024-05-21 04:42:47,136:INFO:            requests: 2.28.1
2024-05-21 04:42:47,136:INFO:          matplotlib: 3.6.2
2024-05-21 04:42:47,136:INFO:          scikitplot: 0.3.7
2024-05-21 04:42:47,136:INFO:         yellowbrick: 1.5
2024-05-21 04:42:47,136:INFO:              plotly: 5.11.0
2024-05-21 04:42:47,136:INFO:    plotly-resampler: Not installed
2024-05-21 04:42:47,136:INFO:             kaleido: 0.2.1
2024-05-21 04:42:47,136:INFO:           schemdraw: 0.15
2024-05-21 04:42:47,136:INFO:         statsmodels: 0.14.2
2024-05-21 04:42:47,136:INFO:              sktime: 0.26.0
2024-05-21 04:42:47,136:INFO:               tbats: 1.1.3
2024-05-21 04:42:47,136:INFO:            pmdarima: 2.0.4
2024-05-21 04:42:47,136:INFO:              psutil: 5.9.4
2024-05-21 04:42:47,136:INFO:          markupsafe: 2.1.2
2024-05-21 04:42:47,136:INFO:             pickle5: Not installed
2024-05-21 04:42:47,136:INFO:         cloudpickle: 3.0.0
2024-05-21 04:42:47,136:INFO:         deprecation: 2.1.0
2024-05-21 04:42:47,136:INFO:              xxhash: 3.4.1
2024-05-21 04:42:47,136:INFO:           wurlitzer: Not installed
2024-05-21 04:42:47,136:INFO:PyCaret optional dependencies:
2024-05-21 04:42:47,339:INFO:                shap: Not installed
2024-05-21 04:42:47,339:INFO:           interpret: Not installed
2024-05-21 04:42:47,339:INFO:                umap: Not installed
2024-05-21 04:42:47,339:INFO:     ydata_profiling: Not installed
2024-05-21 04:42:47,339:INFO:  explainerdashboard: Not installed
2024-05-21 04:42:47,339:INFO:             autoviz: Not installed
2024-05-21 04:42:47,339:INFO:           fairlearn: Not installed
2024-05-21 04:42:47,339:INFO:          deepchecks: Not installed
2024-05-21 04:42:47,340:INFO:             xgboost: 1.7.1
2024-05-21 04:42:47,340:INFO:            catboost: 1.1.1
2024-05-21 04:42:47,340:INFO:              kmodes: Not installed
2024-05-21 04:42:47,340:INFO:             mlxtend: Not installed
2024-05-21 04:42:47,340:INFO:       statsforecast: Not installed
2024-05-21 04:42:47,340:INFO:        tune_sklearn: Not installed
2024-05-21 04:42:47,340:INFO:                 ray: Not installed
2024-05-21 04:42:47,340:INFO:            hyperopt: Not installed
2024-05-21 04:42:47,340:INFO:              optuna: Not installed
2024-05-21 04:42:47,340:INFO:               skopt: Not installed
2024-05-21 04:42:47,340:INFO:              mlflow: Not installed
2024-05-21 04:42:47,340:INFO:              gradio: Not installed
2024-05-21 04:42:47,340:INFO:             fastapi: Not installed
2024-05-21 04:42:47,340:INFO:             uvicorn: Not installed
2024-05-21 04:42:47,340:INFO:              m2cgen: Not installed
2024-05-21 04:42:47,340:INFO:           evidently: Not installed
2024-05-21 04:42:47,340:INFO:               fugue: Not installed
2024-05-21 04:42:47,340:INFO:           streamlit: Not installed
2024-05-21 04:42:47,340:INFO:             prophet: Not installed
2024-05-21 04:42:47,341:INFO:None
2024-05-21 04:42:47,341:INFO:Set up data.
2024-05-21 04:42:47,356:INFO:Set up folding strategy.
2024-05-21 04:42:47,356:INFO:Set up train/test split.
2024-05-21 04:42:47,364:INFO:Set up index.
2024-05-21 04:42:47,366:INFO:Assigning column types.
2024-05-21 04:42:47,370:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-21 04:42:47,370:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-21 04:42:47,375:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-21 04:42:47,381:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-21 04:42:47,456:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-21 04:42:47,513:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 04:42:47,514:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:47,518:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:48,354:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,359:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,365:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,422:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,466:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:48,468:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:48,468:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-21 04:42:48,473:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,478:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,536:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,586:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,586:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:48,589:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:48,597:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,604:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,670:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,714:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,716:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:48,718:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:48,719:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-21 04:42:48,733:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,797:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,839:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,840:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:48,843:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:48,853:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-21 04:42:48,948:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-21 04:42:49,015:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 04:42:49,016:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:49,018:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:49,019:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-21 04:42:49,105:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-21 04:42:49,160:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 04:42:49,161:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:49,165:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:49,247:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-21 04:42:49,297:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 04:42:49,297:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:49,301:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:49,304:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-21 04:42:49,394:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-21 04:42:49,467:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:49,472:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:49,582:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-21 04:42:49,636:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:49,638:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:49,639:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-21 04:42:49,772:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:49,775:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:49,905:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:49,907:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:49,910:INFO:Preparing preprocessing pipeline...
2024-05-21 04:42:49,910:INFO:Set up simple imputation.
2024-05-21 04:42:49,950:INFO:Finished creating preprocessing pipeline.
2024-05-21 04:42:49,955:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-05-21 04:42:49,955:INFO:Creating final display dataframe.
2024-05-21 04:42:50,045:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         lastPrice
2                   Target type        Regression
3           Original data shape         (9563, 8)
4        Transformed data shape         (9563, 6)
5   Transformed train set shape         (6694, 6)
6    Transformed test set shape         (2869, 6)
7               Ignore features                 3
8              Numeric features                 5
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              c20b
2024-05-21 04:42:50,199:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:50,202:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:50,340:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 04:42:50,343:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-21 04:42:50,344:INFO:setup() successfully completed in 3.39s...............
2024-05-21 04:43:27,409:INFO:Initializing create_model()
2024-05-21 04:43:27,409:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000012D0DAFB9A0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 04:43:27,409:INFO:Checking exceptions
2024-05-21 04:43:27,460:INFO:Importing libraries
2024-05-21 04:43:27,460:INFO:Copying training dataset
2024-05-21 04:43:27,471:INFO:Defining folds
2024-05-21 04:43:27,471:INFO:Declaring metric variables
2024-05-21 04:43:27,478:INFO:Importing untrained model
2024-05-21 04:43:27,486:INFO:Extra Trees Regressor Imported successfully
2024-05-21 04:43:27,497:INFO:Starting cross validation
2024-05-21 04:43:27,517:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 04:43:42,105:INFO:Calculating mean and std
2024-05-21 04:43:42,110:INFO:Creating metrics dataframe
2024-05-21 04:43:42,125:INFO:Finalizing model
2024-05-21 04:43:42,584:INFO:Uploading results into container
2024-05-21 04:43:42,586:INFO:Uploading model into container now
2024-05-21 04:43:42,612:INFO:_master_model_container: 1
2024-05-21 04:43:42,612:INFO:_display_container: 2
2024-05-21 04:43:42,616:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-05-21 04:43:42,616:INFO:create_model() successfully completed......................................
2024-05-21 04:44:01,215:INFO:Initializing save_model()
2024-05-21 04:44:01,216:INFO:save_model(model=ExtraTreesRegressor(n_jobs=-1, random_state=123), model_name=model_et, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-05-21 04:44:01,216:INFO:Adding model into prep_pipe
2024-05-21 04:44:01,333:INFO:model_et.pkl saved in current working directory
2024-05-21 04:44:01,340:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))])
2024-05-21 04:44:01,340:INFO:save_model() successfully completed......................................
2024-05-21 04:44:03,878:INFO:Initializing create_model()
2024-05-21 04:44:03,879:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000012D0DAFB9A0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 04:44:03,879:INFO:Checking exceptions
2024-05-21 04:44:03,931:INFO:Importing libraries
2024-05-21 04:44:03,932:INFO:Copying training dataset
2024-05-21 04:44:03,944:INFO:Defining folds
2024-05-21 04:44:03,945:INFO:Declaring metric variables
2024-05-21 04:44:03,952:INFO:Importing untrained model
2024-05-21 04:44:03,961:INFO:Random Forest Regressor Imported successfully
2024-05-21 04:44:03,973:INFO:Starting cross validation
2024-05-21 04:44:03,975:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 04:44:10,526:INFO:Calculating mean and std
2024-05-21 04:44:10,530:INFO:Creating metrics dataframe
2024-05-21 04:44:10,545:INFO:Finalizing model
2024-05-21 04:44:11,414:INFO:Uploading results into container
2024-05-21 04:44:11,417:INFO:Uploading model into container now
2024-05-21 04:44:11,436:INFO:_master_model_container: 2
2024-05-21 04:44:11,437:INFO:_display_container: 3
2024-05-21 04:44:11,437:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-05-21 04:44:11,438:INFO:create_model() successfully completed......................................
2024-05-21 04:44:11,591:INFO:Initializing save_model()
2024-05-21 04:44:11,591:INFO:save_model(model=RandomForestRegressor(n_jobs=-1, random_state=123), model_name=model_rf, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Admin\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-05-21 04:44:11,591:INFO:Adding model into prep_pipe
2024-05-21 04:44:11,760:INFO:model_rf.pkl saved in current working directory
2024-05-21 04:44:11,772:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 RandomForestRegressor(n_jobs=-1, random_state=123))])
2024-05-21 04:44:11,772:INFO:save_model() successfully completed......................................
2024-05-21 05:30:39,105:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 05:30:39,106:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 05:30:39,106:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 05:30:39,106:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 05:30:39,339:INFO:Initializing load_model()
2024-05-21 05:30:39,339:INFO:load_model(model_name=model_et.pkl, platform=None, authentication=None, verbose=True)
2024-05-21 05:31:25,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 05:31:25,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 05:31:25,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 05:31:25,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 05:31:26,063:INFO:Initializing load_model()
2024-05-21 05:31:26,063:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:03:54,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:03:54,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:03:54,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:03:54,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:03:54,499:INFO:Initializing load_model()
2024-05-21 06:03:54,499:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:03:54,793:INFO:Initializing predict_model()
2024-05-21 06:03:54,793:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000257B14BB100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257B1694C10>)
2024-05-21 06:03:54,793:INFO:Checking exceptions
2024-05-21 06:03:54,793:INFO:Preloading libraries
2024-05-21 06:05:02,191:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:05:02,192:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:05:02,192:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:05:02,192:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:05:02,399:INFO:Initializing load_model()
2024-05-21 06:05:02,400:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:05:02,721:INFO:Initializing predict_model()
2024-05-21 06:05:02,722:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021932E5BE80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021932E52C10>)
2024-05-21 06:05:02,722:INFO:Checking exceptions
2024-05-21 06:05:02,722:INFO:Preloading libraries
2024-05-21 06:05:02,725:INFO:Set up data.
2024-05-21 06:05:02,732:INFO:Set up index.
2024-05-21 06:05:03,881:INFO:Initializing load_model()
2024-05-21 06:05:03,882:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:05:04,058:INFO:Initializing predict_model()
2024-05-21 06:05:04,058:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002193A3A6C70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021944351820>)
2024-05-21 06:05:04,058:INFO:Checking exceptions
2024-05-21 06:05:04,058:INFO:Preloading libraries
2024-05-21 06:05:04,058:INFO:Set up data.
2024-05-21 06:05:04,060:INFO:Set up index.
2024-05-21 06:05:05,191:INFO:Initializing load_model()
2024-05-21 06:05:05,191:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:05:05,374:INFO:Initializing predict_model()
2024-05-21 06:05:05,374:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021932C7B520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021932E52C10>)
2024-05-21 06:05:05,375:INFO:Checking exceptions
2024-05-21 06:05:05,375:INFO:Preloading libraries
2024-05-21 06:05:05,375:INFO:Set up data.
2024-05-21 06:05:05,377:INFO:Set up index.
2024-05-21 06:05:06,500:INFO:Initializing load_model()
2024-05-21 06:05:06,500:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:05:06,670:INFO:Initializing predict_model()
2024-05-21 06:05:06,670:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021933B75790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021944351820>)
2024-05-21 06:05:06,670:INFO:Checking exceptions
2024-05-21 06:05:06,670:INFO:Preloading libraries
2024-05-21 06:05:06,670:INFO:Set up data.
2024-05-21 06:05:06,672:INFO:Set up index.
2024-05-21 06:05:07,809:INFO:Initializing load_model()
2024-05-21 06:05:07,809:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:05:08,015:INFO:Initializing predict_model()
2024-05-21 06:05:08,016:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021944330D60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021932E52C10>)
2024-05-21 06:05:08,016:INFO:Checking exceptions
2024-05-21 06:05:08,016:INFO:Preloading libraries
2024-05-21 06:05:08,016:INFO:Set up data.
2024-05-21 06:05:08,019:INFO:Set up index.
2024-05-21 06:05:09,182:INFO:Initializing load_model()
2024-05-21 06:05:09,182:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:05:09,347:INFO:Initializing predict_model()
2024-05-21 06:05:09,347:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021932C7B520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021944351820>)
2024-05-21 06:05:09,347:INFO:Checking exceptions
2024-05-21 06:05:09,347:INFO:Preloading libraries
2024-05-21 06:05:09,348:INFO:Set up data.
2024-05-21 06:05:09,350:INFO:Set up index.
2024-05-21 06:05:10,485:INFO:Initializing load_model()
2024-05-21 06:05:10,486:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:05:10,698:INFO:Initializing predict_model()
2024-05-21 06:05:10,698:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000218E7FCA040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021932E52C10>)
2024-05-21 06:05:10,699:INFO:Checking exceptions
2024-05-21 06:05:10,699:INFO:Preloading libraries
2024-05-21 06:05:10,699:INFO:Set up data.
2024-05-21 06:05:10,704:INFO:Set up index.
2024-05-21 06:07:03,538:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:07:03,538:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:07:03,538:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:07:03,538:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:07:03,781:INFO:Initializing load_model()
2024-05-21 06:07:03,782:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:07:04,070:INFO:Initializing predict_model()
2024-05-21 06:07:04,070:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023A3E525F40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A3A44D0D0>)
2024-05-21 06:07:04,070:INFO:Checking exceptions
2024-05-21 06:07:04,070:INFO:Preloading libraries
2024-05-21 06:07:04,070:INFO:Set up data.
2024-05-21 06:07:04,073:INFO:Set up index.
2024-05-21 06:07:05,184:INFO:Initializing load_model()
2024-05-21 06:07:05,184:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:07:05,363:INFO:Initializing predict_model()
2024-05-21 06:07:05,363:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002399DC63370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A3A44D0D0>)
2024-05-21 06:07:05,363:INFO:Checking exceptions
2024-05-21 06:07:05,363:INFO:Preloading libraries
2024-05-21 06:07:05,363:INFO:Set up data.
2024-05-21 06:07:05,366:INFO:Set up index.
2024-05-21 06:07:06,490:INFO:Initializing load_model()
2024-05-21 06:07:06,490:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:07:06,649:INFO:Initializing predict_model()
2024-05-21 06:07:06,649:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023A3355EEE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A3A44D0D0>)
2024-05-21 06:07:06,649:INFO:Checking exceptions
2024-05-21 06:07:06,649:INFO:Preloading libraries
2024-05-21 06:07:06,649:INFO:Set up data.
2024-05-21 06:07:06,651:INFO:Set up index.
2024-05-21 06:07:07,780:INFO:Initializing load_model()
2024-05-21 06:07:07,780:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:07:07,947:INFO:Initializing predict_model()
2024-05-21 06:07:07,948:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023A44521910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A3A44D0D0>)
2024-05-21 06:07:07,948:INFO:Checking exceptions
2024-05-21 06:07:07,948:INFO:Preloading libraries
2024-05-21 06:07:07,948:INFO:Set up data.
2024-05-21 06:07:07,951:INFO:Set up index.
2024-05-21 06:07:09,090:INFO:Initializing load_model()
2024-05-21 06:07:09,090:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:07:09,313:INFO:Initializing predict_model()
2024-05-21 06:07:09,313:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002399DC63370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A44526280>)
2024-05-21 06:07:09,313:INFO:Checking exceptions
2024-05-21 06:07:09,313:INFO:Preloading libraries
2024-05-21 06:07:09,314:INFO:Set up data.
2024-05-21 06:07:09,319:INFO:Set up index.
2024-05-21 06:07:10,442:INFO:Initializing load_model()
2024-05-21 06:07:10,443:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:07:10,613:INFO:Initializing predict_model()
2024-05-21 06:07:10,615:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023A44424040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A44526280>)
2024-05-21 06:07:10,615:INFO:Checking exceptions
2024-05-21 06:07:10,615:INFO:Preloading libraries
2024-05-21 06:07:10,615:INFO:Set up data.
2024-05-21 06:07:10,618:INFO:Set up index.
2024-05-21 06:07:11,749:INFO:Initializing load_model()
2024-05-21 06:07:11,749:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:07:11,927:INFO:Initializing predict_model()
2024-05-21 06:07:11,927:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023A44521E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A44526280>)
2024-05-21 06:07:11,927:INFO:Checking exceptions
2024-05-21 06:07:11,927:INFO:Preloading libraries
2024-05-21 06:07:11,928:INFO:Set up data.
2024-05-21 06:07:11,930:INFO:Set up index.
2024-05-21 06:07:13,052:INFO:Initializing load_model()
2024-05-21 06:07:13,053:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:07:13,227:INFO:Initializing predict_model()
2024-05-21 06:07:13,228:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002399DC63370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A44526280>)
2024-05-21 06:07:13,228:INFO:Checking exceptions
2024-05-21 06:07:13,228:INFO:Preloading libraries
2024-05-21 06:07:13,228:INFO:Set up data.
2024-05-21 06:07:13,232:INFO:Set up index.
2024-05-21 06:07:14,343:INFO:Initializing load_model()
2024-05-21 06:07:14,343:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:07:14,510:INFO:Initializing predict_model()
2024-05-21 06:07:14,511:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023A3355EEE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A44526280>)
2024-05-21 06:07:14,511:INFO:Checking exceptions
2024-05-21 06:07:14,511:INFO:Preloading libraries
2024-05-21 06:07:14,511:INFO:Set up data.
2024-05-21 06:07:14,513:INFO:Set up index.
2024-05-21 06:07:15,632:INFO:Initializing load_model()
2024-05-21 06:07:15,632:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:07:15,832:INFO:Initializing predict_model()
2024-05-21 06:07:15,833:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023A44521E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023A44526280>)
2024-05-21 06:07:15,833:INFO:Checking exceptions
2024-05-21 06:07:15,833:INFO:Preloading libraries
2024-05-21 06:07:15,833:INFO:Set up data.
2024-05-21 06:07:15,835:INFO:Set up index.
2024-05-21 06:09:13,244:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:09:13,245:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:09:13,245:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:09:13,245:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:09:13,471:INFO:Initializing load_model()
2024-05-21 06:09:13,471:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:09:13,764:INFO:Initializing predict_model()
2024-05-21 06:09:13,765:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EB72C55E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022EB72D0040>)
2024-05-21 06:09:13,765:INFO:Checking exceptions
2024-05-21 06:09:13,765:INFO:Preloading libraries
2024-05-21 06:09:13,765:INFO:Set up data.
2024-05-21 06:09:13,768:INFO:Set up index.
2024-05-21 06:09:31,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:09:31,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:09:31,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:09:31,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:09:58,466:INFO:Initializing load_model()
2024-05-21 06:09:58,466:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:09:58,733:INFO:Initializing predict_model()
2024-05-21 06:09:58,734:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000203380555E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020338060040>)
2024-05-21 06:09:58,734:INFO:Checking exceptions
2024-05-21 06:09:58,734:INFO:Preloading libraries
2024-05-21 06:09:58,734:INFO:Set up data.
2024-05-21 06:09:58,736:INFO:Set up index.
2024-05-21 06:10:01,847:INFO:Initializing load_model()
2024-05-21 06:10:01,847:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:10:01,987:INFO:Initializing predict_model()
2024-05-21 06:10:01,987:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000202DB882340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020338060040>)
2024-05-21 06:10:01,987:INFO:Checking exceptions
2024-05-21 06:10:01,987:INFO:Preloading libraries
2024-05-21 06:10:01,987:INFO:Set up data.
2024-05-21 06:10:01,989:INFO:Set up index.
2024-05-21 06:10:05,098:INFO:Initializing load_model()
2024-05-21 06:10:05,098:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:10:05,261:INFO:Initializing predict_model()
2024-05-21 06:10:05,261:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020342137A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020338060040>)
2024-05-21 06:10:05,261:INFO:Checking exceptions
2024-05-21 06:10:05,261:INFO:Preloading libraries
2024-05-21 06:10:05,262:INFO:Set up data.
2024-05-21 06:10:05,264:INFO:Set up index.
2024-05-21 06:10:08,392:INFO:Initializing load_model()
2024-05-21 06:10:08,392:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:10:08,539:INFO:Initializing predict_model()
2024-05-21 06:10:08,539:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020342125850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020338060040>)
2024-05-21 06:10:08,539:INFO:Checking exceptions
2024-05-21 06:10:08,539:INFO:Preloading libraries
2024-05-21 06:10:08,539:INFO:Set up data.
2024-05-21 06:10:08,541:INFO:Set up index.
2024-05-21 06:10:11,667:INFO:Initializing load_model()
2024-05-21 06:10:11,667:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:10:11,800:INFO:Initializing predict_model()
2024-05-21 06:10:11,800:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002033805F8B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020338060040>)
2024-05-21 06:10:11,800:INFO:Checking exceptions
2024-05-21 06:10:11,800:INFO:Preloading libraries
2024-05-21 06:10:11,801:INFO:Set up data.
2024-05-21 06:10:11,803:INFO:Set up index.
2024-05-21 06:10:14,911:INFO:Initializing load_model()
2024-05-21 06:10:14,911:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:10:15,052:INFO:Initializing predict_model()
2024-05-21 06:10:15,053:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020342137490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020338060040>)
2024-05-21 06:10:15,053:INFO:Checking exceptions
2024-05-21 06:10:15,053:INFO:Preloading libraries
2024-05-21 06:10:15,053:INFO:Set up data.
2024-05-21 06:10:15,057:INFO:Set up index.
2024-05-21 06:10:18,176:INFO:Initializing load_model()
2024-05-21 06:10:18,176:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:10:18,413:INFO:Initializing predict_model()
2024-05-21 06:10:18,413:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002033805F8B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020338060040>)
2024-05-21 06:10:18,413:INFO:Checking exceptions
2024-05-21 06:10:18,413:INFO:Preloading libraries
2024-05-21 06:10:18,414:INFO:Set up data.
2024-05-21 06:10:18,419:INFO:Set up index.
2024-05-21 06:10:21,543:INFO:Initializing load_model()
2024-05-21 06:10:21,543:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:10:21,691:INFO:Initializing predict_model()
2024-05-21 06:10:21,692:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020342137A00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020338060040>)
2024-05-21 06:10:21,692:INFO:Checking exceptions
2024-05-21 06:10:21,692:INFO:Preloading libraries
2024-05-21 06:10:21,692:INFO:Set up data.
2024-05-21 06:10:21,695:INFO:Set up index.
2024-05-21 06:10:24,814:INFO:Initializing load_model()
2024-05-21 06:10:24,814:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:10:24,972:INFO:Initializing predict_model()
2024-05-21 06:10:24,972:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002033805FE80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020338060040>)
2024-05-21 06:10:24,972:INFO:Checking exceptions
2024-05-21 06:10:24,972:INFO:Preloading libraries
2024-05-21 06:10:24,972:INFO:Set up data.
2024-05-21 06:10:24,975:INFO:Set up index.
2024-05-21 06:31:51,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:31:51,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:31:51,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:31:51,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:31:51,354:INFO:Initializing load_model()
2024-05-21 06:31:51,354:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:31:51,681:INFO:Initializing predict_model()
2024-05-21 06:31:51,681:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A3C1F46A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3C200040>)
2024-05-21 06:31:51,681:INFO:Checking exceptions
2024-05-21 06:31:51,681:INFO:Preloading libraries
2024-05-21 06:31:51,681:INFO:Set up data.
2024-05-21 06:31:51,685:INFO:Set up index.
2024-05-21 06:31:54,824:INFO:Initializing load_model()
2024-05-21 06:31:54,825:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:31:54,990:INFO:Initializing predict_model()
2024-05-21 06:31:54,990:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000219A7A23370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3C200040>)
2024-05-21 06:31:54,990:INFO:Checking exceptions
2024-05-21 06:31:54,990:INFO:Preloading libraries
2024-05-21 06:31:54,990:INFO:Set up data.
2024-05-21 06:31:54,992:INFO:Set up index.
2024-05-21 06:31:58,122:INFO:Initializing load_model()
2024-05-21 06:31:58,122:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:31:58,326:INFO:Initializing predict_model()
2024-05-21 06:31:58,327:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A3C1F4670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462D61F0>)
2024-05-21 06:31:58,327:INFO:Checking exceptions
2024-05-21 06:31:58,327:INFO:Preloading libraries
2024-05-21 06:31:58,327:INFO:Set up data.
2024-05-21 06:31:58,331:INFO:Set up index.
2024-05-21 06:32:01,463:INFO:Initializing load_model()
2024-05-21 06:32:01,464:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:01,621:INFO:Initializing predict_model()
2024-05-21 06:32:01,621:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A3C1FF070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462D61F0>)
2024-05-21 06:32:01,621:INFO:Checking exceptions
2024-05-21 06:32:01,621:INFO:Preloading libraries
2024-05-21 06:32:01,622:INFO:Set up data.
2024-05-21 06:32:01,627:INFO:Set up index.
2024-05-21 06:32:04,760:INFO:Initializing load_model()
2024-05-21 06:32:04,761:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:04,930:INFO:Initializing predict_model()
2024-05-21 06:32:04,931:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A3C1F4E20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462D61F0>)
2024-05-21 06:32:04,931:INFO:Checking exceptions
2024-05-21 06:32:04,931:INFO:Preloading libraries
2024-05-21 06:32:04,931:INFO:Set up data.
2024-05-21 06:32:04,936:INFO:Set up index.
2024-05-21 06:32:08,077:INFO:Initializing load_model()
2024-05-21 06:32:08,078:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:08,259:INFO:Initializing predict_model()
2024-05-21 06:32:08,259:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A35892760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462D61F0>)
2024-05-21 06:32:08,259:INFO:Checking exceptions
2024-05-21 06:32:08,259:INFO:Preloading libraries
2024-05-21 06:32:08,259:INFO:Set up data.
2024-05-21 06:32:08,264:INFO:Set up index.
2024-05-21 06:32:11,409:INFO:Initializing load_model()
2024-05-21 06:32:11,409:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:11,556:INFO:Initializing predict_model()
2024-05-21 06:32:11,556:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A3C1F4E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462D61F0>)
2024-05-21 06:32:11,556:INFO:Checking exceptions
2024-05-21 06:32:11,556:INFO:Preloading libraries
2024-05-21 06:32:11,556:INFO:Set up data.
2024-05-21 06:32:11,559:INFO:Set up index.
2024-05-21 06:32:14,691:INFO:Initializing load_model()
2024-05-21 06:32:14,691:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:14,853:INFO:Initializing predict_model()
2024-05-21 06:32:14,853:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A358927F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3C200040>)
2024-05-21 06:32:14,853:INFO:Checking exceptions
2024-05-21 06:32:14,853:INFO:Preloading libraries
2024-05-21 06:32:14,854:INFO:Set up data.
2024-05-21 06:32:14,856:INFO:Set up index.
2024-05-21 06:32:18,005:INFO:Initializing load_model()
2024-05-21 06:32:18,006:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:18,201:INFO:Initializing predict_model()
2024-05-21 06:32:18,201:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A35892760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3C200040>)
2024-05-21 06:32:18,201:INFO:Checking exceptions
2024-05-21 06:32:18,201:INFO:Preloading libraries
2024-05-21 06:32:18,201:INFO:Set up data.
2024-05-21 06:32:18,206:INFO:Set up index.
2024-05-21 06:32:21,326:INFO:Initializing load_model()
2024-05-21 06:32:21,326:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:21,480:INFO:Initializing predict_model()
2024-05-21 06:32:21,481:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A35892790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3C200040>)
2024-05-21 06:32:21,481:INFO:Checking exceptions
2024-05-21 06:32:21,481:INFO:Preloading libraries
2024-05-21 06:32:21,481:INFO:Set up data.
2024-05-21 06:32:21,488:INFO:Set up index.
2024-05-21 06:32:24,616:INFO:Initializing load_model()
2024-05-21 06:32:24,616:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:24,765:INFO:Initializing predict_model()
2024-05-21 06:32:24,766:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A358927F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3C200040>)
2024-05-21 06:32:24,766:INFO:Checking exceptions
2024-05-21 06:32:24,766:INFO:Preloading libraries
2024-05-21 06:32:24,767:INFO:Set up data.
2024-05-21 06:32:24,772:INFO:Set up index.
2024-05-21 06:32:27,917:INFO:Initializing load_model()
2024-05-21 06:32:27,917:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:28,130:INFO:Initializing predict_model()
2024-05-21 06:32:28,131:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A35892760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3C200040>)
2024-05-21 06:32:28,131:INFO:Checking exceptions
2024-05-21 06:32:28,131:INFO:Preloading libraries
2024-05-21 06:32:28,132:INFO:Set up data.
2024-05-21 06:32:28,134:INFO:Set up index.
2024-05-21 06:32:31,271:INFO:Initializing load_model()
2024-05-21 06:32:31,271:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:31,413:INFO:Initializing predict_model()
2024-05-21 06:32:31,413:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A35892790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3C200040>)
2024-05-21 06:32:31,413:INFO:Checking exceptions
2024-05-21 06:32:31,413:INFO:Preloading libraries
2024-05-21 06:32:31,414:INFO:Set up data.
2024-05-21 06:32:31,417:INFO:Set up index.
2024-05-21 06:32:34,560:INFO:Initializing load_model()
2024-05-21 06:32:34,560:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:34,708:INFO:Initializing predict_model()
2024-05-21 06:32:34,708:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A358927F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3C200040>)
2024-05-21 06:32:34,708:INFO:Checking exceptions
2024-05-21 06:32:34,708:INFO:Preloading libraries
2024-05-21 06:32:34,708:INFO:Set up data.
2024-05-21 06:32:34,713:INFO:Set up index.
2024-05-21 06:32:37,844:INFO:Initializing load_model()
2024-05-21 06:32:37,845:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:38,009:INFO:Initializing predict_model()
2024-05-21 06:32:38,009:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A35892760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3C200040>)
2024-05-21 06:32:38,009:INFO:Checking exceptions
2024-05-21 06:32:38,009:INFO:Preloading libraries
2024-05-21 06:32:38,010:INFO:Set up data.
2024-05-21 06:32:38,016:INFO:Set up index.
2024-05-21 06:32:41,176:INFO:Initializing load_model()
2024-05-21 06:32:41,176:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:41,339:INFO:Initializing predict_model()
2024-05-21 06:32:41,340:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A462C58E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3C200040>)
2024-05-21 06:32:41,340:INFO:Checking exceptions
2024-05-21 06:32:41,340:INFO:Preloading libraries
2024-05-21 06:32:41,341:INFO:Set up data.
2024-05-21 06:32:41,347:INFO:Set up index.
2024-05-21 06:32:44,476:INFO:Initializing load_model()
2024-05-21 06:32:44,476:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:44,638:INFO:Initializing predict_model()
2024-05-21 06:32:44,638:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A35892790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A3C200040>)
2024-05-21 06:32:44,638:INFO:Checking exceptions
2024-05-21 06:32:44,638:INFO:Preloading libraries
2024-05-21 06:32:44,638:INFO:Set up data.
2024-05-21 06:32:44,642:INFO:Set up index.
2024-05-21 06:32:47,780:INFO:Initializing load_model()
2024-05-21 06:32:47,781:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:47,932:INFO:Initializing predict_model()
2024-05-21 06:32:47,932:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A358929A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462E3820>)
2024-05-21 06:32:47,932:INFO:Checking exceptions
2024-05-21 06:32:47,932:INFO:Preloading libraries
2024-05-21 06:32:47,932:INFO:Set up data.
2024-05-21 06:32:47,936:INFO:Set up index.
2024-05-21 06:32:51,110:INFO:Initializing load_model()
2024-05-21 06:32:51,110:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:51,275:INFO:Initializing predict_model()
2024-05-21 06:32:51,276:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A462C58E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462E3820>)
2024-05-21 06:32:51,276:INFO:Checking exceptions
2024-05-21 06:32:51,276:INFO:Preloading libraries
2024-05-21 06:32:51,277:INFO:Set up data.
2024-05-21 06:32:51,282:INFO:Set up index.
2024-05-21 06:32:54,407:INFO:Initializing load_model()
2024-05-21 06:32:54,407:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:54,560:INFO:Initializing predict_model()
2024-05-21 06:32:54,560:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A35892790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462E3820>)
2024-05-21 06:32:54,560:INFO:Checking exceptions
2024-05-21 06:32:54,560:INFO:Preloading libraries
2024-05-21 06:32:54,560:INFO:Set up data.
2024-05-21 06:32:54,563:INFO:Set up index.
2024-05-21 06:32:57,716:INFO:Initializing load_model()
2024-05-21 06:32:57,716:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:32:57,854:INFO:Initializing predict_model()
2024-05-21 06:32:57,854:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A358929A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462E3820>)
2024-05-21 06:32:57,855:INFO:Checking exceptions
2024-05-21 06:32:57,855:INFO:Preloading libraries
2024-05-21 06:32:57,855:INFO:Set up data.
2024-05-21 06:32:57,857:INFO:Set up index.
2024-05-21 06:33:00,998:INFO:Initializing load_model()
2024-05-21 06:33:00,999:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:33:01,169:INFO:Initializing predict_model()
2024-05-21 06:33:01,169:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A462C58E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462E3820>)
2024-05-21 06:33:01,169:INFO:Checking exceptions
2024-05-21 06:33:01,169:INFO:Preloading libraries
2024-05-21 06:33:01,169:INFO:Set up data.
2024-05-21 06:33:01,172:INFO:Set up index.
2024-05-21 06:33:04,303:INFO:Initializing load_model()
2024-05-21 06:33:04,303:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:33:04,465:INFO:Initializing predict_model()
2024-05-21 06:33:04,467:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A3C1FF8B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462E3820>)
2024-05-21 06:33:04,467:INFO:Checking exceptions
2024-05-21 06:33:04,467:INFO:Preloading libraries
2024-05-21 06:33:04,467:INFO:Set up data.
2024-05-21 06:33:04,470:INFO:Set up index.
2024-05-21 06:33:07,605:INFO:Initializing load_model()
2024-05-21 06:33:07,605:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:33:07,774:INFO:Initializing predict_model()
2024-05-21 06:33:07,774:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A35892790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462D61F0>)
2024-05-21 06:33:07,774:INFO:Checking exceptions
2024-05-21 06:33:07,775:INFO:Preloading libraries
2024-05-21 06:33:07,775:INFO:Set up data.
2024-05-21 06:33:07,780:INFO:Set up index.
2024-05-21 06:33:10,939:INFO:Initializing load_model()
2024-05-21 06:33:10,939:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:33:11,109:INFO:Initializing predict_model()
2024-05-21 06:33:11,109:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A3C1FFEB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462D61F0>)
2024-05-21 06:33:11,109:INFO:Checking exceptions
2024-05-21 06:33:11,109:INFO:Preloading libraries
2024-05-21 06:33:11,109:INFO:Set up data.
2024-05-21 06:33:11,111:INFO:Set up index.
2024-05-21 06:33:14,238:INFO:Initializing load_model()
2024-05-21 06:33:14,238:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:33:14,397:INFO:Initializing predict_model()
2024-05-21 06:33:14,398:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A462D3610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462D61F0>)
2024-05-21 06:33:14,399:INFO:Checking exceptions
2024-05-21 06:33:14,399:INFO:Preloading libraries
2024-05-21 06:33:14,400:INFO:Set up data.
2024-05-21 06:33:14,404:INFO:Set up index.
2024-05-21 06:33:17,558:INFO:Initializing load_model()
2024-05-21 06:33:17,558:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:33:17,699:INFO:Initializing predict_model()
2024-05-21 06:33:17,699:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021A3C1F4E20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A462D61F0>)
2024-05-21 06:33:17,699:INFO:Checking exceptions
2024-05-21 06:33:17,699:INFO:Preloading libraries
2024-05-21 06:33:17,700:INFO:Set up data.
2024-05-21 06:33:17,703:INFO:Set up index.
2024-05-21 06:34:33,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:34:33,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:34:33,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:34:33,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:34:33,610:INFO:Initializing load_model()
2024-05-21 06:34:33,610:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:34:33,903:INFO:Initializing predict_model()
2024-05-21 06:34:33,903:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B36CA46D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B36CB0040>)
2024-05-21 06:34:33,903:INFO:Checking exceptions
2024-05-21 06:34:33,904:INFO:Preloading libraries
2024-05-21 06:34:33,904:INFO:Set up data.
2024-05-21 06:34:33,909:INFO:Set up index.
2024-05-21 06:34:37,058:INFO:Initializing load_model()
2024-05-21 06:34:37,058:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:34:37,222:INFO:Initializing predict_model()
2024-05-21 06:34:37,222:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028A824D3370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B40D94820>)
2024-05-21 06:34:37,222:INFO:Checking exceptions
2024-05-21 06:34:37,222:INFO:Preloading libraries
2024-05-21 06:34:37,222:INFO:Set up data.
2024-05-21 06:34:37,224:INFO:Set up index.
2024-05-21 06:34:40,376:INFO:Initializing load_model()
2024-05-21 06:34:40,376:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:34:40,537:INFO:Initializing predict_model()
2024-05-21 06:34:40,538:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B36CA4E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B36CB0040>)
2024-05-21 06:34:40,538:INFO:Checking exceptions
2024-05-21 06:34:40,538:INFO:Preloading libraries
2024-05-21 06:34:40,538:INFO:Set up data.
2024-05-21 06:34:40,542:INFO:Set up index.
2024-05-21 06:34:43,677:INFO:Initializing load_model()
2024-05-21 06:34:43,677:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:34:43,823:INFO:Initializing predict_model()
2024-05-21 06:34:43,823:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B40D759A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B40D94820>)
2024-05-21 06:34:43,823:INFO:Checking exceptions
2024-05-21 06:34:43,823:INFO:Preloading libraries
2024-05-21 06:34:43,823:INFO:Set up data.
2024-05-21 06:34:43,826:INFO:Set up index.
2024-05-21 06:34:46,979:INFO:Initializing load_model()
2024-05-21 06:34:46,979:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:34:47,128:INFO:Initializing predict_model()
2024-05-21 06:34:47,128:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028A824D3370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B36CB0040>)
2024-05-21 06:34:47,128:INFO:Checking exceptions
2024-05-21 06:34:47,128:INFO:Preloading libraries
2024-05-21 06:34:47,128:INFO:Set up data.
2024-05-21 06:34:47,131:INFO:Set up index.
2024-05-21 06:34:50,272:INFO:Initializing load_model()
2024-05-21 06:34:50,272:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:34:50,417:INFO:Initializing predict_model()
2024-05-21 06:34:50,417:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B40D84B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B40D94820>)
2024-05-21 06:34:50,417:INFO:Checking exceptions
2024-05-21 06:34:50,418:INFO:Preloading libraries
2024-05-21 06:34:50,418:INFO:Set up data.
2024-05-21 06:34:50,421:INFO:Set up index.
2024-05-21 06:34:53,561:INFO:Initializing load_model()
2024-05-21 06:34:53,561:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:34:53,710:INFO:Initializing predict_model()
2024-05-21 06:34:53,710:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B40D75940>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B40D94820>)
2024-05-21 06:34:53,710:INFO:Checking exceptions
2024-05-21 06:34:53,710:INFO:Preloading libraries
2024-05-21 06:34:53,710:INFO:Set up data.
2024-05-21 06:34:53,712:INFO:Set up index.
2024-05-21 06:35:25,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:35:25,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:35:25,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:35:25,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:35:39,863:INFO:Initializing load_model()
2024-05-21 06:35:39,863:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:35:40,680:INFO:Initializing predict_model()
2024-05-21 06:35:40,680:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EABB3A46D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EABB3B0040>)
2024-05-21 06:35:40,680:INFO:Checking exceptions
2024-05-21 06:35:40,680:INFO:Preloading libraries
2024-05-21 06:35:40,681:INFO:Set up data.
2024-05-21 06:35:40,689:INFO:Set up index.
2024-05-21 06:35:43,968:INFO:Initializing load_model()
2024-05-21 06:35:43,968:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:35:44,426:INFO:Initializing predict_model()
2024-05-21 06:35:44,428:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA26BE3370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EAC5493820>)
2024-05-21 06:35:44,428:INFO:Checking exceptions
2024-05-21 06:35:44,428:INFO:Preloading libraries
2024-05-21 06:35:44,429:INFO:Set up data.
2024-05-21 06:35:44,437:INFO:Set up index.
2024-05-21 06:35:47,687:INFO:Initializing load_model()
2024-05-21 06:35:47,688:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:35:48,155:INFO:Initializing predict_model()
2024-05-21 06:35:48,155:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EABB3A46A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EABB3B0040>)
2024-05-21 06:35:48,155:INFO:Checking exceptions
2024-05-21 06:35:48,156:INFO:Preloading libraries
2024-05-21 06:35:48,156:INFO:Set up data.
2024-05-21 06:35:48,159:INFO:Set up index.
2024-05-21 06:35:51,452:INFO:Initializing load_model()
2024-05-21 06:35:51,453:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:35:51,923:INFO:Initializing predict_model()
2024-05-21 06:35:51,924:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EA28683820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EAC5493820>)
2024-05-21 06:35:51,924:INFO:Checking exceptions
2024-05-21 06:35:51,924:INFO:Preloading libraries
2024-05-21 06:35:51,925:INFO:Set up data.
2024-05-21 06:35:51,932:INFO:Set up index.
2024-05-21 06:35:55,175:INFO:Initializing load_model()
2024-05-21 06:35:55,175:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:35:55,645:INFO:Initializing predict_model()
2024-05-21 06:35:55,645:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAB4A52640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EABB3B0040>)
2024-05-21 06:35:55,645:INFO:Checking exceptions
2024-05-21 06:35:55,646:INFO:Preloading libraries
2024-05-21 06:35:55,647:INFO:Set up data.
2024-05-21 06:35:55,672:INFO:Set up index.
2024-05-21 06:35:58,874:INFO:Initializing load_model()
2024-05-21 06:35:58,875:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:35:59,277:INFO:Initializing predict_model()
2024-05-21 06:35:59,277:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EABB3A4E80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EAC5493820>)
2024-05-21 06:35:59,277:INFO:Checking exceptions
2024-05-21 06:35:59,277:INFO:Preloading libraries
2024-05-21 06:35:59,278:INFO:Set up data.
2024-05-21 06:35:59,286:INFO:Set up index.
2024-05-21 06:36:02,496:INFO:Initializing load_model()
2024-05-21 06:36:02,496:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:36:02,926:INFO:Initializing predict_model()
2024-05-21 06:36:02,927:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAC5475880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EABB3B0040>)
2024-05-21 06:36:02,927:INFO:Checking exceptions
2024-05-21 06:36:02,927:INFO:Preloading libraries
2024-05-21 06:36:02,927:INFO:Set up data.
2024-05-21 06:36:02,934:INFO:Set up index.
2024-05-21 06:36:06,168:INFO:Initializing load_model()
2024-05-21 06:36:06,169:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:36:06,636:INFO:Initializing predict_model()
2024-05-21 06:36:06,637:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAB4A52820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EAC5493820>)
2024-05-21 06:36:06,637:INFO:Checking exceptions
2024-05-21 06:36:06,637:INFO:Preloading libraries
2024-05-21 06:36:06,638:INFO:Set up data.
2024-05-21 06:36:06,645:INFO:Set up index.
2024-05-21 06:36:09,908:INFO:Initializing load_model()
2024-05-21 06:36:09,908:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:36:10,404:INFO:Initializing predict_model()
2024-05-21 06:36:10,404:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAC5484640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EAC5493820>)
2024-05-21 06:36:10,405:INFO:Checking exceptions
2024-05-21 06:36:10,405:INFO:Preloading libraries
2024-05-21 06:36:10,406:INFO:Set up data.
2024-05-21 06:36:10,413:INFO:Set up index.
2024-05-21 06:36:13,669:INFO:Initializing load_model()
2024-05-21 06:36:13,670:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:36:14,094:INFO:Initializing predict_model()
2024-05-21 06:36:14,094:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAC5475910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EABB3B0040>)
2024-05-21 06:36:14,095:INFO:Checking exceptions
2024-05-21 06:36:14,095:INFO:Preloading libraries
2024-05-21 06:36:14,096:INFO:Set up data.
2024-05-21 06:36:14,106:INFO:Set up index.
2024-05-21 06:36:17,326:INFO:Initializing load_model()
2024-05-21 06:36:17,326:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:36:17,561:INFO:Initializing predict_model()
2024-05-21 06:36:17,561:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EAB4A527C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EAC5493820>)
2024-05-21 06:36:17,561:INFO:Checking exceptions
2024-05-21 06:36:17,561:INFO:Preloading libraries
2024-05-21 06:36:17,561:INFO:Set up data.
2024-05-21 06:36:17,563:INFO:Set up index.
2024-05-21 06:36:24,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:36:24,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:36:24,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:36:24,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:37:04,395:INFO:Initializing load_model()
2024-05-21 06:37:04,395:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:37:04,642:INFO:Initializing predict_model()
2024-05-21 06:37:04,642:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018A3EAE2370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018ABB2E0040>)
2024-05-21 06:37:04,642:INFO:Checking exceptions
2024-05-21 06:37:04,642:INFO:Preloading libraries
2024-05-21 06:37:04,642:INFO:Set up data.
2024-05-21 06:37:04,644:INFO:Set up index.
2024-05-21 06:37:24,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:37:24,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:37:24,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:37:24,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:37:49,412:INFO:Initializing load_model()
2024-05-21 06:37:49,412:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:37:49,684:INFO:Initializing predict_model()
2024-05-21 06:37:49,685:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AFF0A23370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B03D200040>)
2024-05-21 06:37:49,685:INFO:Checking exceptions
2024-05-21 06:37:49,685:INFO:Preloading libraries
2024-05-21 06:37:49,685:INFO:Set up data.
2024-05-21 06:37:49,689:INFO:Set up index.
2024-05-21 06:38:51,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:38:51,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:38:51,005:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:38:51,005:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:38:51,263:INFO:Initializing load_model()
2024-05-21 06:38:51,263:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:38:51,572:INFO:Initializing predict_model()
2024-05-21 06:38:51,572:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000218B89646D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000218B8970040>)
2024-05-21 06:38:51,572:INFO:Checking exceptions
2024-05-21 06:38:51,572:INFO:Preloading libraries
2024-05-21 06:38:51,572:INFO:Set up data.
2024-05-21 06:38:51,577:INFO:Set up index.
2024-05-21 06:39:19,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:39:19,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:39:19,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:39:19,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:39:36,283:INFO:Initializing load_model()
2024-05-21 06:39:36,283:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:39:36,576:INFO:Initializing predict_model()
2024-05-21 06:39:36,577:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CBBCAC46D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CBBCAD0040>)
2024-05-21 06:39:36,577:INFO:Checking exceptions
2024-05-21 06:39:36,577:INFO:Preloading libraries
2024-05-21 06:39:36,577:INFO:Set up data.
2024-05-21 06:39:36,583:INFO:Set up index.
2024-05-21 06:39:39,716:INFO:Initializing load_model()
2024-05-21 06:39:39,716:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:39:39,879:INFO:Initializing predict_model()
2024-05-21 06:39:39,879:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CB082F2370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CBBCAD0040>)
2024-05-21 06:39:39,879:INFO:Checking exceptions
2024-05-21 06:39:39,879:INFO:Preloading libraries
2024-05-21 06:39:39,880:INFO:Set up data.
2024-05-21 06:39:39,884:INFO:Set up index.
2024-05-21 06:39:43,012:INFO:Initializing load_model()
2024-05-21 06:39:43,012:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:39:43,179:INFO:Initializing predict_model()
2024-05-21 06:39:43,179:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CB09D82850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CBBCAD0040>)
2024-05-21 06:39:43,179:INFO:Checking exceptions
2024-05-21 06:39:43,179:INFO:Preloading libraries
2024-05-21 06:39:43,179:INFO:Set up data.
2024-05-21 06:39:43,183:INFO:Set up index.
2024-05-21 06:39:46,309:INFO:Initializing load_model()
2024-05-21 06:39:46,309:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:39:46,503:INFO:Initializing predict_model()
2024-05-21 06:39:46,503:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CBB5BD9F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CBBCAD0040>)
2024-05-21 06:39:46,504:INFO:Checking exceptions
2024-05-21 06:39:46,504:INFO:Preloading libraries
2024-05-21 06:39:46,504:INFO:Set up data.
2024-05-21 06:39:46,507:INFO:Set up index.
2024-05-21 06:45:33,145:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:45:33,145:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:45:33,145:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:45:33,145:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:45:33,425:INFO:Initializing load_model()
2024-05-21 06:45:33,425:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:45:33,755:INFO:Initializing predict_model()
2024-05-21 06:45:33,756:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8E94F3370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B935CD0040>)
2024-05-21 06:45:33,756:INFO:Checking exceptions
2024-05-21 06:45:33,756:INFO:Preloading libraries
2024-05-21 06:45:33,757:INFO:Set up data.
2024-05-21 06:45:33,760:INFO:Set up index.
2024-05-21 06:47:04,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:47:04,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:47:04,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:47:04,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:47:05,040:INFO:Initializing load_model()
2024-05-21 06:47:05,040:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:47:05,374:INFO:Initializing predict_model()
2024-05-21 06:47:05,374:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002542C5D3370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000254B8DD0040>)
2024-05-21 06:47:05,374:INFO:Checking exceptions
2024-05-21 06:47:05,374:INFO:Preloading libraries
2024-05-21 06:47:05,374:INFO:Set up data.
2024-05-21 06:47:05,378:INFO:Set up index.
2024-05-21 06:47:35,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:47:35,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:47:35,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:47:35,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 06:47:50,063:INFO:Initializing load_model()
2024-05-21 06:47:50,064:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:47:50,386:INFO:Initializing predict_model()
2024-05-21 06:47:50,386:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016CBB253820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016CBB260040>)
2024-05-21 06:47:50,387:INFO:Checking exceptions
2024-05-21 06:47:50,387:INFO:Preloading libraries
2024-05-21 06:47:50,387:INFO:Set up data.
2024-05-21 06:47:50,389:INFO:Set up index.
2024-05-21 06:47:53,566:INFO:Initializing load_model()
2024-05-21 06:47:53,566:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:47:53,729:INFO:Initializing predict_model()
2024-05-21 06:47:53,729:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016CB43280D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016CBB260040>)
2024-05-21 06:47:53,730:INFO:Checking exceptions
2024-05-21 06:47:53,730:INFO:Preloading libraries
2024-05-21 06:47:53,731:INFO:Set up data.
2024-05-21 06:47:53,734:INFO:Set up index.
2024-05-21 06:47:56,859:INFO:Initializing load_model()
2024-05-21 06:47:56,859:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:47:57,046:INFO:Initializing predict_model()
2024-05-21 06:47:57,047:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016CBB2537F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016CBB260040>)
2024-05-21 06:47:57,047:INFO:Checking exceptions
2024-05-21 06:47:57,047:INFO:Preloading libraries
2024-05-21 06:47:57,048:INFO:Set up data.
2024-05-21 06:47:57,051:INFO:Set up index.
2024-05-21 06:48:00,196:INFO:Initializing load_model()
2024-05-21 06:48:00,196:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:48:00,388:INFO:Initializing predict_model()
2024-05-21 06:48:00,388:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016CB48F1B80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016CBB260040>)
2024-05-21 06:48:00,388:INFO:Checking exceptions
2024-05-21 06:48:00,388:INFO:Preloading libraries
2024-05-21 06:48:00,388:INFO:Set up data.
2024-05-21 06:48:00,390:INFO:Set up index.
2024-05-21 06:48:03,567:INFO:Initializing load_model()
2024-05-21 06:48:03,567:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 06:48:03,957:INFO:Initializing predict_model()
2024-05-21 06:48:03,957:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016CBB253820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016CC53371F0>)
2024-05-21 06:48:03,957:INFO:Checking exceptions
2024-05-21 06:48:03,957:INFO:Preloading libraries
2024-05-21 06:48:03,959:INFO:Set up data.
2024-05-21 06:48:03,965:INFO:Set up index.
2024-05-21 16:32:17,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 16:32:17,519:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 16:32:17,519:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 16:32:17,519:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 16:34:04,928:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 16:34:04,928:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 16:34:04,928:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 16:34:04,928:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 16:34:05,332:INFO:Initializing load_model()
2024-05-21 16:34:05,332:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 16:34:05,933:INFO:Initializing predict_model()
2024-05-21 16:34:05,933:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026FECB60370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000270393580D0>)
2024-05-21 16:34:05,933:INFO:Checking exceptions
2024-05-21 16:34:05,934:INFO:Preloading libraries
2024-05-21 16:34:05,937:INFO:Set up data.
2024-05-21 16:34:05,941:INFO:Set up index.
2024-05-21 16:34:09,117:INFO:Initializing load_model()
2024-05-21 16:34:09,118:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 16:34:09,392:INFO:Initializing predict_model()
2024-05-21 16:34:09,392:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027039351FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000270393580D0>)
2024-05-21 16:34:09,392:INFO:Checking exceptions
2024-05-21 16:34:09,392:INFO:Preloading libraries
2024-05-21 16:34:09,393:INFO:Set up data.
2024-05-21 16:34:09,396:INFO:Set up index.
2024-05-21 16:34:12,534:INFO:Initializing load_model()
2024-05-21 16:34:12,534:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 16:34:12,799:INFO:Initializing predict_model()
2024-05-21 16:34:12,799:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027039351FA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000270393580D0>)
2024-05-21 16:34:12,799:INFO:Checking exceptions
2024-05-21 16:34:12,799:INFO:Preloading libraries
2024-05-21 16:34:12,801:INFO:Set up data.
2024-05-21 16:34:12,807:INFO:Set up index.
2024-05-21 16:34:15,955:INFO:Initializing load_model()
2024-05-21 16:34:15,955:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 16:34:16,215:INFO:Initializing predict_model()
2024-05-21 16:34:16,215:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002704342FD60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000270393580D0>)
2024-05-21 16:34:16,216:INFO:Checking exceptions
2024-05-21 16:34:16,216:INFO:Preloading libraries
2024-05-21 16:34:16,216:INFO:Set up data.
2024-05-21 16:34:16,224:INFO:Set up index.
2024-05-21 16:34:19,397:INFO:Initializing load_model()
2024-05-21 16:34:19,397:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 16:34:19,775:INFO:Initializing predict_model()
2024-05-21 16:34:19,775:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027039351FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000270393580D0>)
2024-05-21 16:34:19,775:INFO:Checking exceptions
2024-05-21 16:34:19,776:INFO:Preloading libraries
2024-05-21 16:34:19,776:INFO:Set up data.
2024-05-21 16:34:19,781:INFO:Set up index.
2024-05-21 16:34:22,991:INFO:Initializing load_model()
2024-05-21 16:34:22,992:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 16:34:23,335:INFO:Initializing predict_model()
2024-05-21 16:34:23,335:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027039351FA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000270393580D0>)
2024-05-21 16:34:23,335:INFO:Checking exceptions
2024-05-21 16:34:23,335:INFO:Preloading libraries
2024-05-21 16:34:23,336:INFO:Set up data.
2024-05-21 16:34:23,342:INFO:Set up index.
2024-05-21 16:37:13,267:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 16:37:13,267:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 16:37:13,267:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 16:37:13,267:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 16:37:15,164:INFO:Initializing load_model()
2024-05-21 16:37:15,164:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 16:37:15,543:INFO:Initializing predict_model()
2024-05-21 16:37:15,543:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BB798F0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BBB60B80D0>)
2024-05-21 16:37:15,543:INFO:Checking exceptions
2024-05-21 16:37:15,543:INFO:Preloading libraries
2024-05-21 16:37:15,543:INFO:Set up data.
2024-05-21 16:37:15,546:INFO:Set up index.
2024-05-21 16:37:18,674:INFO:Initializing load_model()
2024-05-21 16:37:18,674:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 16:37:18,972:INFO:Initializing predict_model()
2024-05-21 16:37:18,973:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BBB60B1FA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BBB60B80D0>)
2024-05-21 16:37:18,973:INFO:Checking exceptions
2024-05-21 16:37:18,973:INFO:Preloading libraries
2024-05-21 16:37:18,973:INFO:Set up data.
2024-05-21 16:37:18,978:INFO:Set up index.
2024-05-21 16:37:22,160:INFO:Initializing load_model()
2024-05-21 16:37:22,160:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 16:37:22,418:INFO:Initializing predict_model()
2024-05-21 16:37:22,418:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BB798F0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BBB60B80D0>)
2024-05-21 16:37:22,418:INFO:Checking exceptions
2024-05-21 16:37:22,418:INFO:Preloading libraries
2024-05-21 16:37:22,419:INFO:Set up data.
2024-05-21 16:37:22,423:INFO:Set up index.
2024-05-21 16:37:25,563:INFO:Initializing load_model()
2024-05-21 16:37:25,563:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 16:37:25,833:INFO:Initializing predict_model()
2024-05-21 16:37:25,833:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BBAF1750D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BBB60B80D0>)
2024-05-21 16:37:25,833:INFO:Checking exceptions
2024-05-21 16:37:25,833:INFO:Preloading libraries
2024-05-21 16:37:25,833:INFO:Set up data.
2024-05-21 16:37:25,838:INFO:Set up index.
2024-05-21 16:37:28,992:INFO:Initializing load_model()
2024-05-21 16:37:28,993:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 16:37:29,246:INFO:Initializing predict_model()
2024-05-21 16:37:29,246:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BBAF74E970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BBB60B80D0>)
2024-05-21 16:37:29,246:INFO:Checking exceptions
2024-05-21 16:37:29,246:INFO:Preloading libraries
2024-05-21 16:37:29,247:INFO:Set up data.
2024-05-21 16:37:29,249:INFO:Set up index.
2024-05-21 16:37:32,393:INFO:Initializing load_model()
2024-05-21 16:37:32,394:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 16:37:32,643:INFO:Initializing predict_model()
2024-05-21 16:37:32,643:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BBC0074100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BBB60B80D0>)
2024-05-21 16:37:32,643:INFO:Checking exceptions
2024-05-21 16:37:32,643:INFO:Preloading libraries
2024-05-21 16:37:32,644:INFO:Set up data.
2024-05-21 16:37:32,647:INFO:Set up index.
2024-05-21 17:26:23,924:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 17:26:23,925:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 17:26:23,925:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 17:26:23,925:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 17:26:27,682:INFO:Initializing load_model()
2024-05-21 17:26:27,683:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:26:28,423:INFO:Initializing predict_model()
2024-05-21 17:26:28,424:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:26:28,424:INFO:Checking exceptions
2024-05-21 17:26:28,424:INFO:Preloading libraries
2024-05-21 17:26:28,428:INFO:Set up data.
2024-05-21 17:26:28,445:INFO:Set up index.
2024-05-21 17:26:31,683:INFO:Initializing load_model()
2024-05-21 17:26:31,683:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:26:32,037:INFO:Initializing predict_model()
2024-05-21 17:26:32,038:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BB6061FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:26:32,038:INFO:Checking exceptions
2024-05-21 17:26:32,038:INFO:Preloading libraries
2024-05-21 17:26:32,039:INFO:Set up data.
2024-05-21 17:26:32,043:INFO:Set up index.
2024-05-21 17:26:35,240:INFO:Initializing load_model()
2024-05-21 17:26:35,241:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:26:35,610:INFO:Initializing predict_model()
2024-05-21 17:26:35,610:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BB6061FA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:26:35,610:INFO:Checking exceptions
2024-05-21 17:26:35,610:INFO:Preloading libraries
2024-05-21 17:26:35,611:INFO:Set up data.
2024-05-21 17:26:35,616:INFO:Set up index.
2024-05-21 17:26:38,825:INFO:Initializing load_model()
2024-05-21 17:26:38,825:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:26:39,163:INFO:Initializing predict_model()
2024-05-21 17:26:39,163:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:26:39,163:INFO:Checking exceptions
2024-05-21 17:26:39,163:INFO:Preloading libraries
2024-05-21 17:26:39,163:INFO:Set up data.
2024-05-21 17:26:39,168:INFO:Set up index.
2024-05-21 17:26:42,397:INFO:Initializing load_model()
2024-05-21 17:26:42,397:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:26:42,701:INFO:Initializing predict_model()
2024-05-21 17:26:42,701:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC0021130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:26:42,701:INFO:Checking exceptions
2024-05-21 17:26:42,701:INFO:Preloading libraries
2024-05-21 17:26:42,701:INFO:Set up data.
2024-05-21 17:26:42,708:INFO:Set up index.
2024-05-21 17:26:45,950:INFO:Initializing load_model()
2024-05-21 17:26:45,951:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:26:46,306:INFO:Initializing predict_model()
2024-05-21 17:26:46,307:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B1B34F9A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:26:46,308:INFO:Checking exceptions
2024-05-21 17:26:46,308:INFO:Preloading libraries
2024-05-21 17:26:46,309:INFO:Set up data.
2024-05-21 17:26:46,312:INFO:Set up index.
2024-05-21 17:26:49,488:INFO:Initializing load_model()
2024-05-21 17:26:49,489:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:26:49,882:INFO:Initializing predict_model()
2024-05-21 17:26:49,882:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:26:49,882:INFO:Checking exceptions
2024-05-21 17:26:49,882:INFO:Preloading libraries
2024-05-21 17:26:49,883:INFO:Set up data.
2024-05-21 17:26:49,890:INFO:Set up index.
2024-05-21 17:26:53,097:INFO:Initializing load_model()
2024-05-21 17:26:53,098:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:26:53,427:INFO:Initializing predict_model()
2024-05-21 17:26:53,428:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70F970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:26:53,428:INFO:Checking exceptions
2024-05-21 17:26:53,428:INFO:Preloading libraries
2024-05-21 17:26:53,430:INFO:Set up data.
2024-05-21 17:26:53,433:INFO:Set up index.
2024-05-21 17:26:56,616:INFO:Initializing load_model()
2024-05-21 17:26:56,616:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:26:56,937:INFO:Initializing predict_model()
2024-05-21 17:26:56,937:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B1B34F9A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:26:56,938:INFO:Checking exceptions
2024-05-21 17:26:56,938:INFO:Preloading libraries
2024-05-21 17:26:56,938:INFO:Set up data.
2024-05-21 17:26:56,943:INFO:Set up index.
2024-05-21 17:27:00,138:INFO:Initializing load_model()
2024-05-21 17:27:00,138:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:00,487:INFO:Initializing predict_model()
2024-05-21 17:27:00,489:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:00,489:INFO:Checking exceptions
2024-05-21 17:27:00,489:INFO:Preloading libraries
2024-05-21 17:27:00,489:INFO:Set up data.
2024-05-21 17:27:00,498:INFO:Set up index.
2024-05-21 17:27:03,672:INFO:Initializing load_model()
2024-05-21 17:27:03,672:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:03,985:INFO:Initializing predict_model()
2024-05-21 17:27:03,985:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:03,985:INFO:Checking exceptions
2024-05-21 17:27:03,985:INFO:Preloading libraries
2024-05-21 17:27:03,986:INFO:Set up data.
2024-05-21 17:27:03,991:INFO:Set up index.
2024-05-21 17:27:07,191:INFO:Initializing load_model()
2024-05-21 17:27:07,192:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:07,492:INFO:Initializing predict_model()
2024-05-21 17:27:07,492:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B1B34F9A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:07,492:INFO:Checking exceptions
2024-05-21 17:27:07,492:INFO:Preloading libraries
2024-05-21 17:27:07,492:INFO:Set up data.
2024-05-21 17:27:07,497:INFO:Set up index.
2024-05-21 17:27:10,708:INFO:Initializing load_model()
2024-05-21 17:27:10,709:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:11,013:INFO:Initializing predict_model()
2024-05-21 17:27:11,014:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:11,014:INFO:Checking exceptions
2024-05-21 17:27:11,014:INFO:Preloading libraries
2024-05-21 17:27:11,014:INFO:Set up data.
2024-05-21 17:27:11,018:INFO:Set up index.
2024-05-21 17:27:14,193:INFO:Initializing load_model()
2024-05-21 17:27:14,193:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:14,589:INFO:Initializing predict_model()
2024-05-21 17:27:14,590:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:14,590:INFO:Checking exceptions
2024-05-21 17:27:14,590:INFO:Preloading libraries
2024-05-21 17:27:14,591:INFO:Set up data.
2024-05-21 17:27:14,597:INFO:Set up index.
2024-05-21 17:27:17,847:INFO:Initializing load_model()
2024-05-21 17:27:17,847:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:18,260:INFO:Initializing predict_model()
2024-05-21 17:27:18,260:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B1B34F9A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:18,261:INFO:Checking exceptions
2024-05-21 17:27:18,261:INFO:Preloading libraries
2024-05-21 17:27:18,261:INFO:Set up data.
2024-05-21 17:27:18,270:INFO:Set up index.
2024-05-21 17:27:21,509:INFO:Initializing load_model()
2024-05-21 17:27:21,509:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:21,927:INFO:Initializing predict_model()
2024-05-21 17:27:21,927:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:21,927:INFO:Checking exceptions
2024-05-21 17:27:21,928:INFO:Preloading libraries
2024-05-21 17:27:21,928:INFO:Set up data.
2024-05-21 17:27:21,933:INFO:Set up index.
2024-05-21 17:27:25,131:INFO:Initializing load_model()
2024-05-21 17:27:25,132:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:25,477:INFO:Initializing predict_model()
2024-05-21 17:27:25,477:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:25,477:INFO:Checking exceptions
2024-05-21 17:27:25,477:INFO:Preloading libraries
2024-05-21 17:27:25,478:INFO:Set up data.
2024-05-21 17:27:25,481:INFO:Set up index.
2024-05-21 17:27:28,696:INFO:Initializing load_model()
2024-05-21 17:27:28,696:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:29,012:INFO:Initializing predict_model()
2024-05-21 17:27:29,013:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70F970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:29,013:INFO:Checking exceptions
2024-05-21 17:27:29,013:INFO:Preloading libraries
2024-05-21 17:27:29,014:INFO:Set up data.
2024-05-21 17:27:29,017:INFO:Set up index.
2024-05-21 17:27:32,198:INFO:Initializing load_model()
2024-05-21 17:27:32,198:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:32,477:INFO:Initializing predict_model()
2024-05-21 17:27:32,477:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70F760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:32,477:INFO:Checking exceptions
2024-05-21 17:27:32,477:INFO:Preloading libraries
2024-05-21 17:27:32,478:INFO:Set up data.
2024-05-21 17:27:32,484:INFO:Set up index.
2024-05-21 17:27:35,674:INFO:Initializing load_model()
2024-05-21 17:27:35,675:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:36,025:INFO:Initializing predict_model()
2024-05-21 17:27:36,025:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BB606C9A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:36,025:INFO:Checking exceptions
2024-05-21 17:27:36,025:INFO:Preloading libraries
2024-05-21 17:27:36,026:INFO:Set up data.
2024-05-21 17:27:36,034:INFO:Set up index.
2024-05-21 17:27:39,243:INFO:Initializing load_model()
2024-05-21 17:27:39,243:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:39,590:INFO:Initializing predict_model()
2024-05-21 17:27:39,590:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:39,590:INFO:Checking exceptions
2024-05-21 17:27:39,590:INFO:Preloading libraries
2024-05-21 17:27:39,591:INFO:Set up data.
2024-05-21 17:27:39,596:INFO:Set up index.
2024-05-21 17:27:42,770:INFO:Initializing load_model()
2024-05-21 17:27:42,770:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:43,118:INFO:Initializing predict_model()
2024-05-21 17:27:43,118:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B1B34F9A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:43,118:INFO:Checking exceptions
2024-05-21 17:27:43,118:INFO:Preloading libraries
2024-05-21 17:27:43,119:INFO:Set up data.
2024-05-21 17:27:43,126:INFO:Set up index.
2024-05-21 17:27:46,306:INFO:Initializing load_model()
2024-05-21 17:27:46,307:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:46,743:INFO:Initializing predict_model()
2024-05-21 17:27:46,743:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:46,743:INFO:Checking exceptions
2024-05-21 17:27:46,743:INFO:Preloading libraries
2024-05-21 17:27:46,744:INFO:Set up data.
2024-05-21 17:27:46,750:INFO:Set up index.
2024-05-21 17:27:50,048:INFO:Initializing load_model()
2024-05-21 17:27:50,048:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:50,374:INFO:Initializing predict_model()
2024-05-21 17:27:50,374:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70F760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:50,374:INFO:Checking exceptions
2024-05-21 17:27:50,374:INFO:Preloading libraries
2024-05-21 17:27:50,375:INFO:Set up data.
2024-05-21 17:27:50,379:INFO:Set up index.
2024-05-21 17:27:53,562:INFO:Initializing load_model()
2024-05-21 17:27:53,562:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:53,896:INFO:Initializing predict_model()
2024-05-21 17:27:53,896:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BB606C9A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:53,896:INFO:Checking exceptions
2024-05-21 17:27:53,896:INFO:Preloading libraries
2024-05-21 17:27:53,897:INFO:Set up data.
2024-05-21 17:27:53,904:INFO:Set up index.
2024-05-21 17:27:57,106:INFO:Initializing load_model()
2024-05-21 17:27:57,106:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:27:57,481:INFO:Initializing predict_model()
2024-05-21 17:27:57,481:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70F8E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:27:57,481:INFO:Checking exceptions
2024-05-21 17:27:57,482:INFO:Preloading libraries
2024-05-21 17:27:57,482:INFO:Set up data.
2024-05-21 17:27:57,490:INFO:Set up index.
2024-05-21 17:28:00,707:INFO:Initializing load_model()
2024-05-21 17:28:00,707:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:01,073:INFO:Initializing predict_model()
2024-05-21 17:28:01,073:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:28:01,073:INFO:Checking exceptions
2024-05-21 17:28:01,074:INFO:Preloading libraries
2024-05-21 17:28:01,074:INFO:Set up data.
2024-05-21 17:28:01,080:INFO:Set up index.
2024-05-21 17:28:04,267:INFO:Initializing load_model()
2024-05-21 17:28:04,267:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:04,658:INFO:Initializing predict_model()
2024-05-21 17:28:04,658:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70FAF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:28:04,658:INFO:Checking exceptions
2024-05-21 17:28:04,658:INFO:Preloading libraries
2024-05-21 17:28:04,658:INFO:Set up data.
2024-05-21 17:28:04,663:INFO:Set up index.
2024-05-21 17:28:07,892:INFO:Initializing load_model()
2024-05-21 17:28:07,893:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:08,299:INFO:Initializing predict_model()
2024-05-21 17:28:08,299:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B1B34F9A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:28:08,299:INFO:Checking exceptions
2024-05-21 17:28:08,300:INFO:Preloading libraries
2024-05-21 17:28:08,301:INFO:Set up data.
2024-05-21 17:28:08,309:INFO:Set up index.
2024-05-21 17:28:11,497:INFO:Initializing load_model()
2024-05-21 17:28:11,497:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:11,847:INFO:Initializing predict_model()
2024-05-21 17:28:11,847:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:28:11,847:INFO:Checking exceptions
2024-05-21 17:28:11,847:INFO:Preloading libraries
2024-05-21 17:28:11,848:INFO:Set up data.
2024-05-21 17:28:11,853:INFO:Set up index.
2024-05-21 17:28:15,056:INFO:Initializing load_model()
2024-05-21 17:28:15,058:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:15,441:INFO:Initializing predict_model()
2024-05-21 17:28:15,441:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70FB20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:28:15,441:INFO:Checking exceptions
2024-05-21 17:28:15,441:INFO:Preloading libraries
2024-05-21 17:28:15,442:INFO:Set up data.
2024-05-21 17:28:15,448:INFO:Set up index.
2024-05-21 17:28:18,690:INFO:Initializing load_model()
2024-05-21 17:28:18,691:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:19,094:INFO:Initializing predict_model()
2024-05-21 17:28:19,094:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:28:19,094:INFO:Checking exceptions
2024-05-21 17:28:19,095:INFO:Preloading libraries
2024-05-21 17:28:19,096:INFO:Set up data.
2024-05-21 17:28:19,107:INFO:Set up index.
2024-05-21 17:28:22,304:INFO:Initializing load_model()
2024-05-21 17:28:22,304:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:22,608:INFO:Initializing predict_model()
2024-05-21 17:28:22,608:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70F970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:28:22,610:INFO:Checking exceptions
2024-05-21 17:28:22,610:INFO:Preloading libraries
2024-05-21 17:28:22,610:INFO:Set up data.
2024-05-21 17:28:22,613:INFO:Set up index.
2024-05-21 17:28:25,801:INFO:Initializing load_model()
2024-05-21 17:28:25,801:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:26,116:INFO:Initializing predict_model()
2024-05-21 17:28:26,116:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:28:26,116:INFO:Checking exceptions
2024-05-21 17:28:26,117:INFO:Preloading libraries
2024-05-21 17:28:26,117:INFO:Set up data.
2024-05-21 17:28:26,122:INFO:Set up index.
2024-05-21 17:28:29,298:INFO:Initializing load_model()
2024-05-21 17:28:29,298:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:29,593:INFO:Initializing predict_model()
2024-05-21 17:28:29,594:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70FAF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:28:29,594:INFO:Checking exceptions
2024-05-21 17:28:29,594:INFO:Preloading libraries
2024-05-21 17:28:29,595:INFO:Set up data.
2024-05-21 17:28:29,603:INFO:Set up index.
2024-05-21 17:28:32,792:INFO:Initializing load_model()
2024-05-21 17:28:32,792:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:33,097:INFO:Initializing predict_model()
2024-05-21 17:28:33,098:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:28:33,098:INFO:Checking exceptions
2024-05-21 17:28:33,098:INFO:Preloading libraries
2024-05-21 17:28:33,098:INFO:Set up data.
2024-05-21 17:28:33,106:INFO:Set up index.
2024-05-21 17:28:36,305:INFO:Initializing load_model()
2024-05-21 17:28:36,305:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:36,669:INFO:Initializing predict_model()
2024-05-21 17:28:36,670:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70FB20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:28:36,670:INFO:Checking exceptions
2024-05-21 17:28:36,670:INFO:Preloading libraries
2024-05-21 17:28:36,671:INFO:Set up data.
2024-05-21 17:28:36,680:INFO:Set up index.
2024-05-21 17:28:39,873:INFO:Initializing load_model()
2024-05-21 17:28:39,873:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:40,170:INFO:Initializing predict_model()
2024-05-21 17:28:40,171:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:28:40,171:INFO:Checking exceptions
2024-05-21 17:28:40,171:INFO:Preloading libraries
2024-05-21 17:28:40,173:INFO:Set up data.
2024-05-21 17:28:40,180:INFO:Set up index.
2024-05-21 17:28:43,389:INFO:Initializing load_model()
2024-05-21 17:28:43,389:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:43,761:INFO:Initializing predict_model()
2024-05-21 17:28:43,762:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70F970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC00408B0>)
2024-05-21 17:28:43,762:INFO:Checking exceptions
2024-05-21 17:28:43,762:INFO:Preloading libraries
2024-05-21 17:28:43,763:INFO:Set up data.
2024-05-21 17:28:43,773:INFO:Set up index.
2024-05-21 17:28:46,973:INFO:Initializing load_model()
2024-05-21 17:28:46,973:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:47,523:INFO:Initializing predict_model()
2024-05-21 17:28:47,523:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:28:47,523:INFO:Checking exceptions
2024-05-21 17:28:47,524:INFO:Preloading libraries
2024-05-21 17:28:47,524:INFO:Set up data.
2024-05-21 17:28:47,541:INFO:Set up index.
2024-05-21 17:28:50,794:INFO:Initializing load_model()
2024-05-21 17:28:50,794:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:51,284:INFO:Initializing predict_model()
2024-05-21 17:28:51,285:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70FAF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:28:51,285:INFO:Checking exceptions
2024-05-21 17:28:51,285:INFO:Preloading libraries
2024-05-21 17:28:51,286:INFO:Set up data.
2024-05-21 17:28:51,293:INFO:Set up index.
2024-05-21 17:28:54,583:INFO:Initializing load_model()
2024-05-21 17:28:54,583:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:55,196:INFO:Initializing predict_model()
2024-05-21 17:28:55,196:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:28:55,197:INFO:Checking exceptions
2024-05-21 17:28:55,197:INFO:Preloading libraries
2024-05-21 17:28:55,197:INFO:Set up data.
2024-05-21 17:28:55,216:INFO:Set up index.
2024-05-21 17:28:59,108:INFO:Initializing load_model()
2024-05-21 17:28:59,108:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:28:59,458:INFO:Initializing predict_model()
2024-05-21 17:28:59,458:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70FB20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:28:59,458:INFO:Checking exceptions
2024-05-21 17:28:59,458:INFO:Preloading libraries
2024-05-21 17:28:59,458:INFO:Set up data.
2024-05-21 17:28:59,463:INFO:Set up index.
2024-05-21 17:29:02,648:INFO:Initializing load_model()
2024-05-21 17:29:02,648:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:02,928:INFO:Initializing predict_model()
2024-05-21 17:29:02,929:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:29:02,929:INFO:Checking exceptions
2024-05-21 17:29:02,930:INFO:Preloading libraries
2024-05-21 17:29:02,930:INFO:Set up data.
2024-05-21 17:29:02,941:INFO:Set up index.
2024-05-21 17:29:06,137:INFO:Initializing load_model()
2024-05-21 17:29:06,137:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:06,462:INFO:Initializing predict_model()
2024-05-21 17:29:06,462:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70F970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:29:06,462:INFO:Checking exceptions
2024-05-21 17:29:06,462:INFO:Preloading libraries
2024-05-21 17:29:06,463:INFO:Set up data.
2024-05-21 17:29:06,469:INFO:Set up index.
2024-05-21 17:29:09,648:INFO:Initializing load_model()
2024-05-21 17:29:09,648:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:10,026:INFO:Initializing predict_model()
2024-05-21 17:29:10,026:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:29:10,027:INFO:Checking exceptions
2024-05-21 17:29:10,027:INFO:Preloading libraries
2024-05-21 17:29:10,028:INFO:Set up data.
2024-05-21 17:29:10,033:INFO:Set up index.
2024-05-21 17:29:13,245:INFO:Initializing load_model()
2024-05-21 17:29:13,245:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:13,625:INFO:Initializing predict_model()
2024-05-21 17:29:13,625:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70FAF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:29:13,625:INFO:Checking exceptions
2024-05-21 17:29:13,625:INFO:Preloading libraries
2024-05-21 17:29:13,626:INFO:Set up data.
2024-05-21 17:29:13,631:INFO:Set up index.
2024-05-21 17:29:16,830:INFO:Initializing load_model()
2024-05-21 17:29:16,830:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:17,415:INFO:Initializing predict_model()
2024-05-21 17:29:17,416:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:29:17,416:INFO:Checking exceptions
2024-05-21 17:29:17,416:INFO:Preloading libraries
2024-05-21 17:29:17,417:INFO:Set up data.
2024-05-21 17:29:17,436:INFO:Set up index.
2024-05-21 17:29:20,683:INFO:Initializing load_model()
2024-05-21 17:29:20,683:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:21,144:INFO:Initializing predict_model()
2024-05-21 17:29:21,145:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70FB20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:29:21,145:INFO:Checking exceptions
2024-05-21 17:29:21,145:INFO:Preloading libraries
2024-05-21 17:29:21,146:INFO:Set up data.
2024-05-21 17:29:21,157:INFO:Set up index.
2024-05-21 17:29:24,425:INFO:Initializing load_model()
2024-05-21 17:29:24,425:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:24,798:INFO:Initializing predict_model()
2024-05-21 17:29:24,798:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:29:24,798:INFO:Checking exceptions
2024-05-21 17:29:24,798:INFO:Preloading libraries
2024-05-21 17:29:24,800:INFO:Set up data.
2024-05-21 17:29:24,809:INFO:Set up index.
2024-05-21 17:29:28,098:INFO:Initializing load_model()
2024-05-21 17:29:28,098:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:28,549:INFO:Initializing predict_model()
2024-05-21 17:29:28,549:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70F970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:29:28,550:INFO:Checking exceptions
2024-05-21 17:29:28,550:INFO:Preloading libraries
2024-05-21 17:29:28,551:INFO:Set up data.
2024-05-21 17:29:28,560:INFO:Set up index.
2024-05-21 17:29:31,830:INFO:Initializing load_model()
2024-05-21 17:29:31,830:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:32,337:INFO:Initializing predict_model()
2024-05-21 17:29:32,337:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:29:32,337:INFO:Checking exceptions
2024-05-21 17:29:32,337:INFO:Preloading libraries
2024-05-21 17:29:32,339:INFO:Set up data.
2024-05-21 17:29:32,350:INFO:Set up index.
2024-05-21 17:29:35,696:INFO:Initializing load_model()
2024-05-21 17:29:35,696:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:36,279:INFO:Initializing predict_model()
2024-05-21 17:29:36,279:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70FAF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:29:36,280:INFO:Checking exceptions
2024-05-21 17:29:36,280:INFO:Preloading libraries
2024-05-21 17:29:36,280:INFO:Set up data.
2024-05-21 17:29:36,293:INFO:Set up index.
2024-05-21 17:29:39,579:INFO:Initializing load_model()
2024-05-21 17:29:39,580:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:40,086:INFO:Initializing predict_model()
2024-05-21 17:29:40,090:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BB60680D0>)
2024-05-21 17:29:40,094:INFO:Checking exceptions
2024-05-21 17:29:40,094:INFO:Preloading libraries
2024-05-21 17:29:40,096:INFO:Set up data.
2024-05-21 17:29:40,135:INFO:Set up index.
2024-05-21 17:29:43,608:INFO:Initializing load_model()
2024-05-21 17:29:43,608:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:43,928:INFO:Initializing predict_model()
2024-05-21 17:29:43,928:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70FB20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:29:43,928:INFO:Checking exceptions
2024-05-21 17:29:43,930:INFO:Preloading libraries
2024-05-21 17:29:43,930:INFO:Set up data.
2024-05-21 17:29:43,935:INFO:Set up index.
2024-05-21 17:29:47,144:INFO:Initializing load_model()
2024-05-21 17:29:47,144:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:47,403:INFO:Initializing predict_model()
2024-05-21 17:29:47,404:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:29:47,404:INFO:Checking exceptions
2024-05-21 17:29:47,404:INFO:Preloading libraries
2024-05-21 17:29:47,405:INFO:Set up data.
2024-05-21 17:29:47,415:INFO:Set up index.
2024-05-21 17:29:50,604:INFO:Initializing load_model()
2024-05-21 17:29:50,604:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:50,938:INFO:Initializing predict_model()
2024-05-21 17:29:50,938:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70F970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:29:50,940:INFO:Checking exceptions
2024-05-21 17:29:50,940:INFO:Preloading libraries
2024-05-21 17:29:50,940:INFO:Set up data.
2024-05-21 17:29:50,947:INFO:Set up index.
2024-05-21 17:29:54,156:INFO:Initializing load_model()
2024-05-21 17:29:54,156:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:54,390:INFO:Initializing predict_model()
2024-05-21 17:29:54,390:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:29:54,390:INFO:Checking exceptions
2024-05-21 17:29:54,391:INFO:Preloading libraries
2024-05-21 17:29:54,391:INFO:Set up data.
2024-05-21 17:29:54,397:INFO:Set up index.
2024-05-21 17:29:57,591:INFO:Initializing load_model()
2024-05-21 17:29:57,591:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:29:58,007:INFO:Initializing predict_model()
2024-05-21 17:29:58,007:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70FAF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:29:58,008:INFO:Checking exceptions
2024-05-21 17:29:58,008:INFO:Preloading libraries
2024-05-21 17:29:58,008:INFO:Set up data.
2024-05-21 17:29:58,015:INFO:Set up index.
2024-05-21 17:30:01,234:INFO:Initializing load_model()
2024-05-21 17:30:01,235:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:30:01,653:INFO:Initializing predict_model()
2024-05-21 17:30:01,653:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:30:01,653:INFO:Checking exceptions
2024-05-21 17:30:01,653:INFO:Preloading libraries
2024-05-21 17:30:01,655:INFO:Set up data.
2024-05-21 17:30:01,661:INFO:Set up index.
2024-05-21 17:30:04,885:INFO:Initializing load_model()
2024-05-21 17:30:04,885:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:30:05,272:INFO:Initializing predict_model()
2024-05-21 17:30:05,272:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70FB20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:30:05,272:INFO:Checking exceptions
2024-05-21 17:30:05,272:INFO:Preloading libraries
2024-05-21 17:30:05,273:INFO:Set up data.
2024-05-21 17:30:05,280:INFO:Set up index.
2024-05-21 17:30:08,477:INFO:Initializing load_model()
2024-05-21 17:30:08,477:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:30:08,742:INFO:Initializing predict_model()
2024-05-21 17:30:08,743:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028B198C0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:30:08,743:INFO:Checking exceptions
2024-05-21 17:30:08,743:INFO:Preloading libraries
2024-05-21 17:30:08,743:INFO:Set up data.
2024-05-21 17:30:08,750:INFO:Set up index.
2024-05-21 17:30:11,932:INFO:Initializing load_model()
2024-05-21 17:30:11,932:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:30:12,417:INFO:Initializing predict_model()
2024-05-21 17:30:12,418:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70F970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:30:12,418:INFO:Checking exceptions
2024-05-21 17:30:12,418:INFO:Preloading libraries
2024-05-21 17:30:12,418:INFO:Set up data.
2024-05-21 17:30:12,426:INFO:Set up index.
2024-05-21 17:30:15,685:INFO:Initializing load_model()
2024-05-21 17:30:15,685:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:30:15,952:INFO:Initializing predict_model()
2024-05-21 17:30:15,952:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BC002FE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:30:15,952:INFO:Checking exceptions
2024-05-21 17:30:15,952:INFO:Preloading libraries
2024-05-21 17:30:15,953:INFO:Set up data.
2024-05-21 17:30:15,957:INFO:Set up index.
2024-05-21 17:30:19,138:INFO:Initializing load_model()
2024-05-21 17:30:19,138:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-05-21 17:30:19,508:INFO:Initializing predict_model()
2024-05-21 17:30:19,508:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028BAF70FAF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028BC0032280>)
2024-05-21 17:30:19,508:INFO:Checking exceptions
2024-05-21 17:30:19,508:INFO:Preloading libraries
2024-05-21 17:30:19,510:INFO:Set up data.
2024-05-21 17:30:19,517:INFO:Set up index.
2024-06-04 19:11:37,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:11:37,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:11:37,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:11:37,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:11:40,030:INFO:Initializing load_model()
2024-06-04 19:11:40,030:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:11:40,529:INFO:Initializing predict_model()
2024-06-04 19:11:40,529:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B44D8A0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4B57290D0>)
2024-06-04 19:11:40,529:INFO:Checking exceptions
2024-06-04 19:11:40,529:INFO:Preloading libraries
2024-06-04 19:11:40,533:INFO:Set up data.
2024-06-04 19:11:40,538:INFO:Set up index.
2024-06-04 19:11:43,673:INFO:Initializing load_model()
2024-06-04 19:11:43,673:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:11:43,973:INFO:Initializing predict_model()
2024-06-04 19:11:43,973:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4B5722FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4B57290D0>)
2024-06-04 19:11:43,973:INFO:Checking exceptions
2024-06-04 19:11:43,973:INFO:Preloading libraries
2024-06-04 19:11:43,974:INFO:Set up data.
2024-06-04 19:11:43,979:INFO:Set up index.
2024-06-04 19:11:47,126:INFO:Initializing load_model()
2024-06-04 19:11:47,126:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:11:47,458:INFO:Initializing predict_model()
2024-06-04 19:11:47,459:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B44B70F790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4B57290D0>)
2024-06-04 19:11:47,459:INFO:Checking exceptions
2024-06-04 19:11:47,459:INFO:Preloading libraries
2024-06-04 19:11:47,459:INFO:Set up data.
2024-06-04 19:11:47,463:INFO:Set up index.
2024-06-04 19:11:50,618:INFO:Initializing load_model()
2024-06-04 19:11:50,618:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:11:50,817:INFO:Initializing predict_model()
2024-06-04 19:11:50,817:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4B5722FA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4B57290D0>)
2024-06-04 19:11:50,817:INFO:Checking exceptions
2024-06-04 19:11:50,817:INFO:Preloading libraries
2024-06-04 19:11:50,818:INFO:Set up data.
2024-06-04 19:11:50,820:INFO:Set up index.
2024-06-04 19:11:53,940:INFO:Initializing load_model()
2024-06-04 19:11:53,941:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:11:54,195:INFO:Initializing predict_model()
2024-06-04 19:11:54,195:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B44F34F9A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4B57290D0>)
2024-06-04 19:11:54,195:INFO:Checking exceptions
2024-06-04 19:11:54,195:INFO:Preloading libraries
2024-06-04 19:11:54,195:INFO:Set up data.
2024-06-04 19:11:54,197:INFO:Set up index.
2024-06-04 19:11:57,339:INFO:Initializing load_model()
2024-06-04 19:11:57,339:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:11:57,545:INFO:Initializing predict_model()
2024-06-04 19:11:57,546:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4B5722FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4B57290D0>)
2024-06-04 19:11:57,546:INFO:Checking exceptions
2024-06-04 19:11:57,546:INFO:Preloading libraries
2024-06-04 19:11:57,546:INFO:Set up data.
2024-06-04 19:11:57,548:INFO:Set up index.
2024-06-04 19:12:00,664:INFO:Initializing load_model()
2024-06-04 19:12:00,664:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:12:00,883:INFO:Initializing predict_model()
2024-06-04 19:12:00,883:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4BF6E0B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B4B57290D0>)
2024-06-04 19:12:00,884:INFO:Checking exceptions
2024-06-04 19:12:00,884:INFO:Preloading libraries
2024-06-04 19:12:00,885:INFO:Set up data.
2024-06-04 19:12:00,892:INFO:Set up index.
2024-06-04 19:14:05,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:14:05,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:14:05,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:14:05,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:14:06,318:INFO:Initializing load_model()
2024-06-04 19:14:06,318:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:06,778:INFO:Initializing predict_model()
2024-06-04 19:14:06,778:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EA66E0370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:14:06,779:INFO:Checking exceptions
2024-06-04 19:14:06,779:INFO:Preloading libraries
2024-06-04 19:14:06,779:INFO:Set up data.
2024-06-04 19:14:06,784:INFO:Set up index.
2024-06-04 19:14:09,940:INFO:Initializing load_model()
2024-06-04 19:14:09,941:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:10,264:INFO:Initializing predict_model()
2024-06-04 19:14:10,264:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEA2FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:14:10,269:INFO:Checking exceptions
2024-06-04 19:14:10,269:INFO:Preloading libraries
2024-06-04 19:14:10,270:INFO:Set up data.
2024-06-04 19:14:10,273:INFO:Set up index.
2024-06-04 19:14:13,454:INFO:Initializing load_model()
2024-06-04 19:14:13,454:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:13,780:INFO:Initializing predict_model()
2024-06-04 19:14:13,780:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3453FAF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F44E808B0>)
2024-06-04 19:14:13,781:INFO:Checking exceptions
2024-06-04 19:14:13,781:INFO:Preloading libraries
2024-06-04 19:14:13,781:INFO:Set up data.
2024-06-04 19:14:13,788:INFO:Set up index.
2024-06-04 19:14:16,986:INFO:Initializing load_model()
2024-06-04 19:14:16,987:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:17,383:INFO:Initializing predict_model()
2024-06-04 19:14:17,383:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F33F760D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F44E808B0>)
2024-06-04 19:14:17,383:INFO:Checking exceptions
2024-06-04 19:14:17,384:INFO:Preloading libraries
2024-06-04 19:14:17,384:INFO:Set up data.
2024-06-04 19:14:17,388:INFO:Set up index.
2024-06-04 19:14:20,547:INFO:Initializing load_model()
2024-06-04 19:14:20,547:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:20,965:INFO:Initializing predict_model()
2024-06-04 19:14:20,965:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F47E44AC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F44E808B0>)
2024-06-04 19:14:20,970:INFO:Checking exceptions
2024-06-04 19:14:20,970:INFO:Preloading libraries
2024-06-04 19:14:20,971:INFO:Set up data.
2024-06-04 19:14:20,978:INFO:Set up index.
2024-06-04 19:14:24,220:INFO:Initializing load_model()
2024-06-04 19:14:24,221:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:24,649:INFO:Initializing predict_model()
2024-06-04 19:14:24,649:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEA2FA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:14:24,649:INFO:Checking exceptions
2024-06-04 19:14:24,649:INFO:Preloading libraries
2024-06-04 19:14:24,649:INFO:Set up data.
2024-06-04 19:14:24,656:INFO:Set up index.
2024-06-04 19:14:27,860:INFO:Initializing load_model()
2024-06-04 19:14:27,860:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:28,433:INFO:Initializing predict_model()
2024-06-04 19:14:28,433:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F33F760D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:14:28,433:INFO:Checking exceptions
2024-06-04 19:14:28,434:INFO:Preloading libraries
2024-06-04 19:14:28,435:INFO:Set up data.
2024-06-04 19:14:28,448:INFO:Set up index.
2024-06-04 19:14:31,697:INFO:Initializing load_model()
2024-06-04 19:14:31,698:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:32,170:INFO:Initializing predict_model()
2024-06-04 19:14:32,171:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F44E6E820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:14:32,171:INFO:Checking exceptions
2024-06-04 19:14:32,171:INFO:Preloading libraries
2024-06-04 19:14:32,171:INFO:Set up data.
2024-06-04 19:14:32,180:INFO:Set up index.
2024-06-04 19:14:35,429:INFO:Initializing load_model()
2024-06-04 19:14:35,430:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:36,235:INFO:Initializing predict_model()
2024-06-04 19:14:36,235:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F44E60AF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:14:36,235:INFO:Checking exceptions
2024-06-04 19:14:36,236:INFO:Preloading libraries
2024-06-04 19:14:36,237:INFO:Set up data.
2024-06-04 19:14:36,251:INFO:Set up index.
2024-06-04 19:14:39,878:INFO:Initializing load_model()
2024-06-04 19:14:39,878:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:40,339:INFO:Initializing predict_model()
2024-06-04 19:14:40,339:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3453F8E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:14:40,339:INFO:Checking exceptions
2024-06-04 19:14:40,340:INFO:Preloading libraries
2024-06-04 19:14:40,341:INFO:Set up data.
2024-06-04 19:14:40,346:INFO:Set up index.
2024-06-04 19:14:43,519:INFO:Initializing load_model()
2024-06-04 19:14:43,519:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:43,834:INFO:Initializing predict_model()
2024-06-04 19:14:43,835:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F44E6E7C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:14:43,835:INFO:Checking exceptions
2024-06-04 19:14:43,835:INFO:Preloading libraries
2024-06-04 19:14:43,836:INFO:Set up data.
2024-06-04 19:14:43,844:INFO:Set up index.
2024-06-04 19:14:47,033:INFO:Initializing load_model()
2024-06-04 19:14:47,034:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:47,331:INFO:Initializing predict_model()
2024-06-04 19:14:47,331:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3453FAC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:14:47,331:INFO:Checking exceptions
2024-06-04 19:14:47,331:INFO:Preloading libraries
2024-06-04 19:14:47,332:INFO:Set up data.
2024-06-04 19:14:47,338:INFO:Set up index.
2024-06-04 19:14:50,494:INFO:Initializing load_model()
2024-06-04 19:14:50,495:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:50,801:INFO:Initializing predict_model()
2024-06-04 19:14:50,802:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3453FB80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:14:50,802:INFO:Checking exceptions
2024-06-04 19:14:50,802:INFO:Preloading libraries
2024-06-04 19:14:50,802:INFO:Set up data.
2024-06-04 19:14:50,804:INFO:Set up index.
2024-06-04 19:14:53,965:INFO:Initializing load_model()
2024-06-04 19:14:53,965:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:54,302:INFO:Initializing predict_model()
2024-06-04 19:14:54,302:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F44E6E7C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:14:54,303:INFO:Checking exceptions
2024-06-04 19:14:54,303:INFO:Preloading libraries
2024-06-04 19:14:54,304:INFO:Set up data.
2024-06-04 19:14:54,314:INFO:Set up index.
2024-06-04 19:14:57,544:INFO:Initializing load_model()
2024-06-04 19:14:57,544:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:14:57,845:INFO:Initializing predict_model()
2024-06-04 19:14:57,845:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F44E6EC70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:14:57,845:INFO:Checking exceptions
2024-06-04 19:14:57,845:INFO:Preloading libraries
2024-06-04 19:14:57,846:INFO:Set up data.
2024-06-04 19:14:57,851:INFO:Set up index.
2024-06-04 19:15:00,998:INFO:Initializing load_model()
2024-06-04 19:15:00,998:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:01,260:INFO:Initializing predict_model()
2024-06-04 19:15:01,260:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F33F760D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:01,260:INFO:Checking exceptions
2024-06-04 19:15:01,260:INFO:Preloading libraries
2024-06-04 19:15:01,261:INFO:Set up data.
2024-06-04 19:15:01,266:INFO:Set up index.
2024-06-04 19:15:04,430:INFO:Initializing load_model()
2024-06-04 19:15:04,431:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:04,774:INFO:Initializing predict_model()
2024-06-04 19:15:04,774:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3453FAC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:04,774:INFO:Checking exceptions
2024-06-04 19:15:04,774:INFO:Preloading libraries
2024-06-04 19:15:04,775:INFO:Set up data.
2024-06-04 19:15:04,781:INFO:Set up index.
2024-06-04 19:15:08,000:INFO:Initializing load_model()
2024-06-04 19:15:08,000:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:08,343:INFO:Initializing predict_model()
2024-06-04 19:15:08,343:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F44E6EC70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:08,343:INFO:Checking exceptions
2024-06-04 19:15:08,343:INFO:Preloading libraries
2024-06-04 19:15:08,344:INFO:Set up data.
2024-06-04 19:15:08,351:INFO:Set up index.
2024-06-04 19:15:11,505:INFO:Initializing load_model()
2024-06-04 19:15:11,505:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:11,824:INFO:Initializing predict_model()
2024-06-04 19:15:11,825:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEAD2B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:11,826:INFO:Checking exceptions
2024-06-04 19:15:11,826:INFO:Preloading libraries
2024-06-04 19:15:11,827:INFO:Set up data.
2024-06-04 19:15:11,831:INFO:Set up index.
2024-06-04 19:15:15,001:INFO:Initializing load_model()
2024-06-04 19:15:15,001:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:15,305:INFO:Initializing predict_model()
2024-06-04 19:15:15,306:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F33F760D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:15,306:INFO:Checking exceptions
2024-06-04 19:15:15,306:INFO:Preloading libraries
2024-06-04 19:15:15,307:INFO:Set up data.
2024-06-04 19:15:15,314:INFO:Set up index.
2024-06-04 19:15:18,510:INFO:Initializing load_model()
2024-06-04 19:15:18,510:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:18,813:INFO:Initializing predict_model()
2024-06-04 19:15:18,813:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEAD190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:18,813:INFO:Checking exceptions
2024-06-04 19:15:18,814:INFO:Preloading libraries
2024-06-04 19:15:18,814:INFO:Set up data.
2024-06-04 19:15:18,819:INFO:Set up index.
2024-06-04 19:15:22,003:INFO:Initializing load_model()
2024-06-04 19:15:22,004:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:22,362:INFO:Initializing predict_model()
2024-06-04 19:15:22,362:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEAD2E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:22,362:INFO:Checking exceptions
2024-06-04 19:15:22,362:INFO:Preloading libraries
2024-06-04 19:15:22,363:INFO:Set up data.
2024-06-04 19:15:22,368:INFO:Set up index.
2024-06-04 19:15:25,543:INFO:Initializing load_model()
2024-06-04 19:15:25,543:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:25,844:INFO:Initializing predict_model()
2024-06-04 19:15:25,844:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEAD040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:25,846:INFO:Checking exceptions
2024-06-04 19:15:25,846:INFO:Preloading libraries
2024-06-04 19:15:25,846:INFO:Set up data.
2024-06-04 19:15:25,852:INFO:Set up index.
2024-06-04 19:15:29,043:INFO:Initializing load_model()
2024-06-04 19:15:29,043:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:29,349:INFO:Initializing predict_model()
2024-06-04 19:15:29,349:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F33F760D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:29,349:INFO:Checking exceptions
2024-06-04 19:15:29,349:INFO:Preloading libraries
2024-06-04 19:15:29,350:INFO:Set up data.
2024-06-04 19:15:29,353:INFO:Set up index.
2024-06-04 19:15:32,510:INFO:Initializing load_model()
2024-06-04 19:15:32,510:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:32,763:INFO:Initializing predict_model()
2024-06-04 19:15:32,763:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEAD220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:32,763:INFO:Checking exceptions
2024-06-04 19:15:32,763:INFO:Preloading libraries
2024-06-04 19:15:32,763:INFO:Set up data.
2024-06-04 19:15:32,767:INFO:Set up index.
2024-06-04 19:15:35,910:INFO:Initializing load_model()
2024-06-04 19:15:35,910:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:36,304:INFO:Initializing predict_model()
2024-06-04 19:15:36,304:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F44E6EC70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:36,304:INFO:Checking exceptions
2024-06-04 19:15:36,304:INFO:Preloading libraries
2024-06-04 19:15:36,306:INFO:Set up data.
2024-06-04 19:15:36,316:INFO:Set up index.
2024-06-04 19:15:39,561:INFO:Initializing load_model()
2024-06-04 19:15:39,561:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:39,898:INFO:Initializing predict_model()
2024-06-04 19:15:39,898:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEAD040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:39,898:INFO:Checking exceptions
2024-06-04 19:15:39,898:INFO:Preloading libraries
2024-06-04 19:15:39,899:INFO:Set up data.
2024-06-04 19:15:39,904:INFO:Set up index.
2024-06-04 19:15:43,100:INFO:Initializing load_model()
2024-06-04 19:15:43,101:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:43,485:INFO:Initializing predict_model()
2024-06-04 19:15:43,485:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEAD190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:43,486:INFO:Checking exceptions
2024-06-04 19:15:43,486:INFO:Preloading libraries
2024-06-04 19:15:43,486:INFO:Set up data.
2024-06-04 19:15:43,495:INFO:Set up index.
2024-06-04 19:15:46,687:INFO:Initializing load_model()
2024-06-04 19:15:46,688:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:47,042:INFO:Initializing predict_model()
2024-06-04 19:15:47,042:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F44E6EC70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:47,043:INFO:Checking exceptions
2024-06-04 19:15:47,043:INFO:Preloading libraries
2024-06-04 19:15:47,044:INFO:Set up data.
2024-06-04 19:15:47,050:INFO:Set up index.
2024-06-04 19:15:50,203:INFO:Initializing load_model()
2024-06-04 19:15:50,203:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:50,400:INFO:Initializing predict_model()
2024-06-04 19:15:50,400:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F33F760D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:50,400:INFO:Checking exceptions
2024-06-04 19:15:50,400:INFO:Preloading libraries
2024-06-04 19:15:50,401:INFO:Set up data.
2024-06-04 19:15:50,405:INFO:Set up index.
2024-06-04 19:15:53,567:INFO:Initializing load_model()
2024-06-04 19:15:53,568:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:53,817:INFO:Initializing predict_model()
2024-06-04 19:15:53,818:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEAD760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:53,818:INFO:Checking exceptions
2024-06-04 19:15:53,818:INFO:Preloading libraries
2024-06-04 19:15:53,818:INFO:Set up data.
2024-06-04 19:15:53,822:INFO:Set up index.
2024-06-04 19:15:56,989:INFO:Initializing load_model()
2024-06-04 19:15:56,989:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:15:57,267:INFO:Initializing predict_model()
2024-06-04 19:15:57,267:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEAD190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:15:57,267:INFO:Checking exceptions
2024-06-04 19:15:57,267:INFO:Preloading libraries
2024-06-04 19:15:57,268:INFO:Set up data.
2024-06-04 19:15:57,272:INFO:Set up index.
2024-06-04 19:16:00,422:INFO:Initializing load_model()
2024-06-04 19:16:00,422:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:16:00,736:INFO:Initializing predict_model()
2024-06-04 19:16:00,737:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3453F8E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:16:00,737:INFO:Checking exceptions
2024-06-04 19:16:00,737:INFO:Preloading libraries
2024-06-04 19:16:00,737:INFO:Set up data.
2024-06-04 19:16:00,743:INFO:Set up index.
2024-06-04 19:16:03,949:INFO:Initializing load_model()
2024-06-04 19:16:03,950:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:16:04,282:INFO:Initializing predict_model()
2024-06-04 19:16:04,282:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F33F760D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:16:04,282:INFO:Checking exceptions
2024-06-04 19:16:04,282:INFO:Preloading libraries
2024-06-04 19:16:04,283:INFO:Set up data.
2024-06-04 19:16:04,292:INFO:Set up index.
2024-06-04 19:16:07,490:INFO:Initializing load_model()
2024-06-04 19:16:07,490:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:16:07,696:INFO:Initializing predict_model()
2024-06-04 19:16:07,696:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3453FB80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:16:07,697:INFO:Checking exceptions
2024-06-04 19:16:07,697:INFO:Preloading libraries
2024-06-04 19:16:07,697:INFO:Set up data.
2024-06-04 19:16:07,701:INFO:Set up index.
2024-06-04 19:16:10,849:INFO:Initializing load_model()
2024-06-04 19:16:10,849:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:16:11,068:INFO:Initializing predict_model()
2024-06-04 19:16:11,068:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEAD760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:16:11,068:INFO:Checking exceptions
2024-06-04 19:16:11,069:INFO:Preloading libraries
2024-06-04 19:16:11,069:INFO:Set up data.
2024-06-04 19:16:11,073:INFO:Set up index.
2024-06-04 19:16:14,250:INFO:Initializing load_model()
2024-06-04 19:16:14,251:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:16:14,478:INFO:Initializing predict_model()
2024-06-04 19:16:14,479:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F44E6EC70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:16:14,479:INFO:Checking exceptions
2024-06-04 19:16:14,479:INFO:Preloading libraries
2024-06-04 19:16:14,479:INFO:Set up data.
2024-06-04 19:16:14,487:INFO:Set up index.
2024-06-04 19:16:17,655:INFO:Initializing load_model()
2024-06-04 19:16:17,655:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:16:17,882:INFO:Initializing predict_model()
2024-06-04 19:16:17,882:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F33F760D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:16:17,882:INFO:Checking exceptions
2024-06-04 19:16:17,883:INFO:Preloading libraries
2024-06-04 19:16:17,883:INFO:Set up data.
2024-06-04 19:16:17,886:INFO:Set up index.
2024-06-04 19:16:21,035:INFO:Initializing load_model()
2024-06-04 19:16:21,035:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:16:21,256:INFO:Initializing predict_model()
2024-06-04 19:16:21,256:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3453F8E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:16:21,256:INFO:Checking exceptions
2024-06-04 19:16:21,256:INFO:Preloading libraries
2024-06-04 19:16:21,256:INFO:Set up data.
2024-06-04 19:16:21,264:INFO:Set up index.
2024-06-04 19:16:24,406:INFO:Initializing load_model()
2024-06-04 19:16:24,406:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:16:24,663:INFO:Initializing predict_model()
2024-06-04 19:16:24,663:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEAD760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3AEA90D0>)
2024-06-04 19:16:24,663:INFO:Checking exceptions
2024-06-04 19:16:24,663:INFO:Preloading libraries
2024-06-04 19:16:24,664:INFO:Set up data.
2024-06-04 19:16:24,670:INFO:Set up index.
2024-06-04 19:16:27,885:INFO:Initializing load_model()
2024-06-04 19:16:27,885:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:16:28,085:INFO:Initializing predict_model()
2024-06-04 19:16:28,085:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F44E6EC70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F44E808B0>)
2024-06-04 19:16:28,086:INFO:Checking exceptions
2024-06-04 19:16:28,086:INFO:Preloading libraries
2024-06-04 19:16:28,086:INFO:Set up data.
2024-06-04 19:16:28,091:INFO:Set up index.
2024-06-04 19:16:31,218:INFO:Initializing load_model()
2024-06-04 19:16:31,218:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:16:31,467:INFO:Initializing predict_model()
2024-06-04 19:16:31,467:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F33F760D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F44E808B0>)
2024-06-04 19:16:31,467:INFO:Checking exceptions
2024-06-04 19:16:31,467:INFO:Preloading libraries
2024-06-04 19:16:31,468:INFO:Set up data.
2024-06-04 19:16:31,477:INFO:Set up index.
2024-06-04 19:16:34,631:INFO:Initializing load_model()
2024-06-04 19:16:34,631:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:16:34,840:INFO:Initializing predict_model()
2024-06-04 19:16:34,840:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3453FAC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F44E808B0>)
2024-06-04 19:16:34,840:INFO:Checking exceptions
2024-06-04 19:16:34,841:INFO:Preloading libraries
2024-06-04 19:16:34,842:INFO:Set up data.
2024-06-04 19:16:34,847:INFO:Set up index.
2024-06-04 19:16:37,999:INFO:Initializing load_model()
2024-06-04 19:16:38,000:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:16:38,316:INFO:Initializing predict_model()
2024-06-04 19:16:38,317:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022F3AEAD760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F44E808B0>)
2024-06-04 19:16:38,317:INFO:Checking exceptions
2024-06-04 19:16:38,317:INFO:Preloading libraries
2024-06-04 19:16:38,317:INFO:Set up data.
2024-06-04 19:16:38,322:INFO:Set up index.
2024-06-04 19:21:28,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:21:28,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:21:28,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:21:28,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:24:56,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:24:56,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:24:56,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:24:56,290:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:25:29,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:25:29,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:25:29,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:25:29,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:25:29,815:INFO:Initializing load_model()
2024-06-04 19:25:29,815:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:25:30,112:INFO:Initializing predict_model()
2024-06-04 19:25:30,112:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002E93AB06CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002E93AB01700>)
2024-06-04 19:25:30,112:INFO:Checking exceptions
2024-06-04 19:25:30,112:INFO:Preloading libraries
2024-06-04 19:25:30,113:INFO:Set up data.
2024-06-04 19:25:30,116:INFO:Set up index.
2024-06-04 19:25:33,236:INFO:Initializing load_model()
2024-06-04 19:25:33,236:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:25:33,438:INFO:Initializing predict_model()
2024-06-04 19:25:33,438:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002E93AAFBEE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002E93AB01700>)
2024-06-04 19:25:33,438:INFO:Checking exceptions
2024-06-04 19:25:33,438:INFO:Preloading libraries
2024-06-04 19:25:33,438:INFO:Set up data.
2024-06-04 19:25:33,441:INFO:Set up index.
2024-06-04 19:25:36,554:INFO:Initializing load_model()
2024-06-04 19:25:36,554:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:25:36,772:INFO:Initializing predict_model()
2024-06-04 19:25:36,772:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002E944AFFCA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002E93AB01700>)
2024-06-04 19:25:36,772:INFO:Checking exceptions
2024-06-04 19:25:36,772:INFO:Preloading libraries
2024-06-04 19:25:36,773:INFO:Set up data.
2024-06-04 19:25:36,778:INFO:Set up index.
2024-06-04 19:26:02,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:26:02,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:26:02,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:26:02,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:26:23,915:INFO:Initializing load_model()
2024-06-04 19:26:23,915:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:26:24,208:INFO:Initializing predict_model()
2024-06-04 19:26:24,209:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AAB7BB6850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AAB7BB1700>)
2024-06-04 19:26:24,209:INFO:Checking exceptions
2024-06-04 19:26:24,209:INFO:Preloading libraries
2024-06-04 19:26:24,209:INFO:Set up data.
2024-06-04 19:26:24,212:INFO:Set up index.
2024-06-04 19:26:27,335:INFO:Initializing load_model()
2024-06-04 19:26:27,335:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:26:27,559:INFO:Initializing predict_model()
2024-06-04 19:26:27,559:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AAB7BABFA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AAB7BB1700>)
2024-06-04 19:26:27,559:INFO:Checking exceptions
2024-06-04 19:26:27,559:INFO:Preloading libraries
2024-06-04 19:26:27,560:INFO:Set up data.
2024-06-04 19:26:27,562:INFO:Set up index.
2024-06-04 19:26:30,686:INFO:Initializing load_model()
2024-06-04 19:26:30,686:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:26:30,920:INFO:Initializing predict_model()
2024-06-04 19:26:30,920:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AAB7BAB820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AAB7BB1700>)
2024-06-04 19:26:30,920:INFO:Checking exceptions
2024-06-04 19:26:30,921:INFO:Preloading libraries
2024-06-04 19:26:30,922:INFO:Set up data.
2024-06-04 19:26:30,926:INFO:Set up index.
2024-06-04 19:26:34,085:INFO:Initializing load_model()
2024-06-04 19:26:34,085:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:26:34,307:INFO:Initializing predict_model()
2024-06-04 19:26:34,307:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AAC1B93850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AAB7BB1700>)
2024-06-04 19:26:34,307:INFO:Checking exceptions
2024-06-04 19:26:34,307:INFO:Preloading libraries
2024-06-04 19:26:34,308:INFO:Set up data.
2024-06-04 19:26:34,312:INFO:Set up index.
2024-06-04 19:26:37,430:INFO:Initializing load_model()
2024-06-04 19:26:37,431:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:26:37,678:INFO:Initializing predict_model()
2024-06-04 19:26:37,678:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AAB7BABAF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AAB7BB1700>)
2024-06-04 19:26:37,678:INFO:Checking exceptions
2024-06-04 19:26:37,678:INFO:Preloading libraries
2024-06-04 19:26:37,679:INFO:Set up data.
2024-06-04 19:26:37,682:INFO:Set up index.
2024-06-04 19:26:40,805:INFO:Initializing load_model()
2024-06-04 19:26:40,805:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:26:40,991:INFO:Initializing predict_model()
2024-06-04 19:26:40,991:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AAC1B93760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AAB7BB1700>)
2024-06-04 19:26:40,992:INFO:Checking exceptions
2024-06-04 19:26:40,992:INFO:Preloading libraries
2024-06-04 19:26:40,992:INFO:Set up data.
2024-06-04 19:26:40,997:INFO:Set up index.
2024-06-04 19:26:44,132:INFO:Initializing load_model()
2024-06-04 19:26:44,133:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:26:44,359:INFO:Initializing predict_model()
2024-06-04 19:26:44,359:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AAC1B93850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AAB7BB1700>)
2024-06-04 19:26:44,359:INFO:Checking exceptions
2024-06-04 19:26:44,359:INFO:Preloading libraries
2024-06-04 19:26:44,359:INFO:Set up data.
2024-06-04 19:26:44,362:INFO:Set up index.
2024-06-04 19:26:47,492:INFO:Initializing load_model()
2024-06-04 19:26:47,493:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:26:47,708:INFO:Initializing predict_model()
2024-06-04 19:26:47,709:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AA559C5550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AAB7BB1700>)
2024-06-04 19:26:47,709:INFO:Checking exceptions
2024-06-04 19:26:47,709:INFO:Preloading libraries
2024-06-04 19:26:47,710:INFO:Set up data.
2024-06-04 19:26:47,714:INFO:Set up index.
2024-06-04 19:26:50,842:INFO:Initializing load_model()
2024-06-04 19:26:50,842:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:26:51,080:INFO:Initializing predict_model()
2024-06-04 19:26:51,081:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AAB7BAB340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AAB7BB1700>)
2024-06-04 19:26:51,081:INFO:Checking exceptions
2024-06-04 19:26:51,081:INFO:Preloading libraries
2024-06-04 19:26:51,081:INFO:Set up data.
2024-06-04 19:26:51,084:INFO:Set up index.
2024-06-04 19:26:54,248:INFO:Initializing load_model()
2024-06-04 19:26:54,248:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:26:54,503:INFO:Initializing predict_model()
2024-06-04 19:26:54,503:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AAC0AD1040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AAB7BB1700>)
2024-06-04 19:26:54,503:INFO:Checking exceptions
2024-06-04 19:26:54,503:INFO:Preloading libraries
2024-06-04 19:26:54,504:INFO:Set up data.
2024-06-04 19:26:54,507:INFO:Set up index.
2024-06-04 19:26:57,676:INFO:Initializing load_model()
2024-06-04 19:26:57,676:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:26:57,962:INFO:Initializing predict_model()
2024-06-04 19:26:57,962:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AAC0AD12E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AAB7BB1700>)
2024-06-04 19:26:57,963:INFO:Checking exceptions
2024-06-04 19:26:57,963:INFO:Preloading libraries
2024-06-04 19:26:57,963:INFO:Set up data.
2024-06-04 19:26:57,969:INFO:Set up index.
2024-06-04 19:27:28,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:27:28,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:27:28,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:27:28,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:27:45,244:INFO:Initializing load_model()
2024-06-04 19:27:45,244:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:27:45,510:INFO:Initializing predict_model()
2024-06-04 19:27:45,511:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214BA567BE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000214BA561700>)
2024-06-04 19:27:45,511:INFO:Checking exceptions
2024-06-04 19:27:45,511:INFO:Preloading libraries
2024-06-04 19:27:45,511:INFO:Set up data.
2024-06-04 19:27:45,514:INFO:Set up index.
2024-06-04 19:27:48,652:INFO:Initializing load_model()
2024-06-04 19:27:48,652:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:27:48,846:INFO:Initializing predict_model()
2024-06-04 19:27:48,847:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214C348C370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000214BA561700>)
2024-06-04 19:27:48,847:INFO:Checking exceptions
2024-06-04 19:27:48,847:INFO:Preloading libraries
2024-06-04 19:27:48,847:INFO:Set up data.
2024-06-04 19:27:48,851:INFO:Set up index.
2024-06-04 19:27:51,977:INFO:Initializing load_model()
2024-06-04 19:27:51,977:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:27:52,164:INFO:Initializing predict_model()
2024-06-04 19:27:52,164:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214477A7C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000214BA561700>)
2024-06-04 19:27:52,164:INFO:Checking exceptions
2024-06-04 19:27:52,164:INFO:Preloading libraries
2024-06-04 19:27:52,165:INFO:Set up data.
2024-06-04 19:27:52,169:INFO:Set up index.
2024-06-04 19:27:55,302:INFO:Initializing load_model()
2024-06-04 19:27:55,302:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:27:55,542:INFO:Initializing predict_model()
2024-06-04 19:27:55,542:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214BA55BFA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000214BA561700>)
2024-06-04 19:27:55,542:INFO:Checking exceptions
2024-06-04 19:27:55,543:INFO:Preloading libraries
2024-06-04 19:27:55,543:INFO:Set up data.
2024-06-04 19:27:55,546:INFO:Set up index.
2024-06-04 19:30:31,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:30:31,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:30:31,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:30:31,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:30:32,243:INFO:Initializing load_model()
2024-06-04 19:30:32,244:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:30:32,528:INFO:Initializing predict_model()
2024-06-04 19:30:32,529:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B03AE12B20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:30:32,529:INFO:Checking exceptions
2024-06-04 19:30:32,529:INFO:Preloading libraries
2024-06-04 19:30:32,529:INFO:Set up data.
2024-06-04 19:30:32,532:INFO:Set up index.
2024-06-04 19:30:35,652:INFO:Initializing load_model()
2024-06-04 19:30:35,652:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:30:35,910:INFO:Initializing predict_model()
2024-06-04 19:30:35,910:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B044DE89A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:30:35,910:INFO:Checking exceptions
2024-06-04 19:30:35,910:INFO:Preloading libraries
2024-06-04 19:30:35,910:INFO:Set up data.
2024-06-04 19:30:35,914:INFO:Set up index.
2024-06-04 19:30:39,049:INFO:Initializing load_model()
2024-06-04 19:30:39,049:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:30:39,316:INFO:Initializing predict_model()
2024-06-04 19:30:39,316:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B03AE03F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:30:39,316:INFO:Checking exceptions
2024-06-04 19:30:39,316:INFO:Preloading libraries
2024-06-04 19:30:39,316:INFO:Set up data.
2024-06-04 19:30:39,320:INFO:Set up index.
2024-06-04 19:30:42,444:INFO:Initializing load_model()
2024-06-04 19:30:42,444:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:30:42,646:INFO:Initializing predict_model()
2024-06-04 19:30:42,646:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B044DE8AC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:30:42,647:INFO:Checking exceptions
2024-06-04 19:30:42,647:INFO:Preloading libraries
2024-06-04 19:30:42,647:INFO:Set up data.
2024-06-04 19:30:42,650:INFO:Set up index.
2024-06-04 19:30:45,768:INFO:Initializing load_model()
2024-06-04 19:30:45,768:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:30:45,976:INFO:Initializing predict_model()
2024-06-04 19:30:45,976:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B034352D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:30:45,976:INFO:Checking exceptions
2024-06-04 19:30:45,976:INFO:Preloading libraries
2024-06-04 19:30:45,977:INFO:Set up data.
2024-06-04 19:30:45,980:INFO:Set up index.
2024-06-04 19:30:49,147:INFO:Initializing load_model()
2024-06-04 19:30:49,148:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:30:49,337:INFO:Initializing predict_model()
2024-06-04 19:30:49,337:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B033D9CCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:30:49,337:INFO:Checking exceptions
2024-06-04 19:30:49,338:INFO:Preloading libraries
2024-06-04 19:30:49,338:INFO:Set up data.
2024-06-04 19:30:49,342:INFO:Set up index.
2024-06-04 19:30:52,478:INFO:Initializing load_model()
2024-06-04 19:30:52,478:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:30:52,747:INFO:Initializing predict_model()
2024-06-04 19:30:52,748:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B034352C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:30:52,748:INFO:Checking exceptions
2024-06-04 19:30:52,748:INFO:Preloading libraries
2024-06-04 19:30:52,748:INFO:Set up data.
2024-06-04 19:30:52,750:INFO:Set up index.
2024-06-04 19:30:55,858:INFO:Initializing load_model()
2024-06-04 19:30:55,859:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:30:56,115:INFO:Initializing predict_model()
2024-06-04 19:30:56,115:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B044DD5790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:30:56,115:INFO:Checking exceptions
2024-06-04 19:30:56,115:INFO:Preloading libraries
2024-06-04 19:30:56,117:INFO:Set up data.
2024-06-04 19:30:56,119:INFO:Set up index.
2024-06-04 19:30:59,274:INFO:Initializing load_model()
2024-06-04 19:30:59,274:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:30:59,489:INFO:Initializing predict_model()
2024-06-04 19:30:59,489:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B033D9CCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:30:59,489:INFO:Checking exceptions
2024-06-04 19:30:59,489:INFO:Preloading libraries
2024-06-04 19:30:59,489:INFO:Set up data.
2024-06-04 19:30:59,495:INFO:Set up index.
2024-06-04 19:31:02,654:INFO:Initializing load_model()
2024-06-04 19:31:02,654:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:02,884:INFO:Initializing predict_model()
2024-06-04 19:31:02,884:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B044DE83A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:02,884:INFO:Checking exceptions
2024-06-04 19:31:02,884:INFO:Preloading libraries
2024-06-04 19:31:02,884:INFO:Set up data.
2024-06-04 19:31:02,887:INFO:Set up index.
2024-06-04 19:31:06,015:INFO:Initializing load_model()
2024-06-04 19:31:06,015:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:06,226:INFO:Initializing predict_model()
2024-06-04 19:31:06,226:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B034352D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:06,226:INFO:Checking exceptions
2024-06-04 19:31:06,226:INFO:Preloading libraries
2024-06-04 19:31:06,226:INFO:Set up data.
2024-06-04 19:31:06,229:INFO:Set up index.
2024-06-04 19:31:09,345:INFO:Initializing load_model()
2024-06-04 19:31:09,345:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:09,575:INFO:Initializing predict_model()
2024-06-04 19:31:09,576:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B03AE12340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:09,576:INFO:Checking exceptions
2024-06-04 19:31:09,576:INFO:Preloading libraries
2024-06-04 19:31:09,576:INFO:Set up data.
2024-06-04 19:31:09,578:INFO:Set up index.
2024-06-04 19:31:12,709:INFO:Initializing load_model()
2024-06-04 19:31:12,709:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:12,919:INFO:Initializing predict_model()
2024-06-04 19:31:12,919:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B033D9CCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:12,919:INFO:Checking exceptions
2024-06-04 19:31:12,919:INFO:Preloading libraries
2024-06-04 19:31:12,920:INFO:Set up data.
2024-06-04 19:31:12,922:INFO:Set up index.
2024-06-04 19:31:16,049:INFO:Initializing load_model()
2024-06-04 19:31:16,049:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:16,310:INFO:Initializing predict_model()
2024-06-04 19:31:16,311:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B03AE12AC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:16,311:INFO:Checking exceptions
2024-06-04 19:31:16,311:INFO:Preloading libraries
2024-06-04 19:31:16,311:INFO:Set up data.
2024-06-04 19:31:16,316:INFO:Set up index.
2024-06-04 19:31:19,461:INFO:Initializing load_model()
2024-06-04 19:31:19,461:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:19,708:INFO:Initializing predict_model()
2024-06-04 19:31:19,709:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B03AE12340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:19,709:INFO:Checking exceptions
2024-06-04 19:31:19,709:INFO:Preloading libraries
2024-06-04 19:31:19,710:INFO:Set up data.
2024-06-04 19:31:19,713:INFO:Set up index.
2024-06-04 19:31:22,836:INFO:Initializing load_model()
2024-06-04 19:31:22,836:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:23,085:INFO:Initializing predict_model()
2024-06-04 19:31:23,086:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B033D9CCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:23,086:INFO:Checking exceptions
2024-06-04 19:31:23,086:INFO:Preloading libraries
2024-06-04 19:31:23,086:INFO:Set up data.
2024-06-04 19:31:23,091:INFO:Set up index.
2024-06-04 19:31:26,242:INFO:Initializing load_model()
2024-06-04 19:31:26,242:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:26,462:INFO:Initializing predict_model()
2024-06-04 19:31:26,462:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B03AE2D250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:26,462:INFO:Checking exceptions
2024-06-04 19:31:26,462:INFO:Preloading libraries
2024-06-04 19:31:26,463:INFO:Set up data.
2024-06-04 19:31:26,467:INFO:Set up index.
2024-06-04 19:31:29,597:INFO:Initializing load_model()
2024-06-04 19:31:29,597:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:29,799:INFO:Initializing predict_model()
2024-06-04 19:31:29,799:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B034352D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:29,800:INFO:Checking exceptions
2024-06-04 19:31:29,800:INFO:Preloading libraries
2024-06-04 19:31:29,801:INFO:Set up data.
2024-06-04 19:31:29,804:INFO:Set up index.
2024-06-04 19:31:32,956:INFO:Initializing load_model()
2024-06-04 19:31:32,957:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:33,173:INFO:Initializing predict_model()
2024-06-04 19:31:33,175:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B03AE122E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:33,175:INFO:Checking exceptions
2024-06-04 19:31:33,175:INFO:Preloading libraries
2024-06-04 19:31:33,175:INFO:Set up data.
2024-06-04 19:31:33,178:INFO:Set up index.
2024-06-04 19:31:36,318:INFO:Initializing load_model()
2024-06-04 19:31:36,318:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:36,550:INFO:Initializing predict_model()
2024-06-04 19:31:36,550:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B044DD5880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:36,551:INFO:Checking exceptions
2024-06-04 19:31:36,551:INFO:Preloading libraries
2024-06-04 19:31:36,551:INFO:Set up data.
2024-06-04 19:31:36,554:INFO:Set up index.
2024-06-04 19:31:39,676:INFO:Initializing load_model()
2024-06-04 19:31:39,676:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:39,882:INFO:Initializing predict_model()
2024-06-04 19:31:39,882:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B03AE2D580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:39,882:INFO:Checking exceptions
2024-06-04 19:31:39,882:INFO:Preloading libraries
2024-06-04 19:31:39,883:INFO:Set up data.
2024-06-04 19:31:39,887:INFO:Set up index.
2024-06-04 19:31:43,015:INFO:Initializing load_model()
2024-06-04 19:31:43,015:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:43,231:INFO:Initializing predict_model()
2024-06-04 19:31:43,231:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B03AE2D310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:43,231:INFO:Checking exceptions
2024-06-04 19:31:43,232:INFO:Preloading libraries
2024-06-04 19:31:43,232:INFO:Set up data.
2024-06-04 19:31:43,235:INFO:Set up index.
2024-06-04 19:31:46,366:INFO:Initializing load_model()
2024-06-04 19:31:46,366:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:46,679:INFO:Initializing predict_model()
2024-06-04 19:31:46,680:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B03AE2D2E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:46,680:INFO:Checking exceptions
2024-06-04 19:31:46,680:INFO:Preloading libraries
2024-06-04 19:31:46,680:INFO:Set up data.
2024-06-04 19:31:46,684:INFO:Set up index.
2024-06-04 19:31:49,808:INFO:Initializing load_model()
2024-06-04 19:31:49,808:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:50,017:INFO:Initializing predict_model()
2024-06-04 19:31:50,017:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B044DD5880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:50,017:INFO:Checking exceptions
2024-06-04 19:31:50,017:INFO:Preloading libraries
2024-06-04 19:31:50,017:INFO:Set up data.
2024-06-04 19:31:50,021:INFO:Set up index.
2024-06-04 19:31:53,154:INFO:Initializing load_model()
2024-06-04 19:31:53,154:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:31:53,449:INFO:Initializing predict_model()
2024-06-04 19:31:53,449:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B034352D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B03AE10700>)
2024-06-04 19:31:53,449:INFO:Checking exceptions
2024-06-04 19:31:53,449:INFO:Preloading libraries
2024-06-04 19:31:53,450:INFO:Set up data.
2024-06-04 19:31:53,453:INFO:Set up index.
2024-06-04 19:36:10,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:36:10,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:36:10,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:36:10,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:36:11,971:INFO:Initializing load_model()
2024-06-04 19:36:11,971:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:36:12,239:INFO:Initializing predict_model()
2024-06-04 19:36:12,239:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EB97816A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022EB97884C0>)
2024-06-04 19:36:12,239:INFO:Checking exceptions
2024-06-04 19:36:12,239:INFO:Preloading libraries
2024-06-04 19:36:12,240:INFO:Set up data.
2024-06-04 19:36:12,246:INFO:Set up index.
2024-06-04 19:36:15,393:INFO:Initializing load_model()
2024-06-04 19:36:15,393:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:36:15,598:INFO:Initializing predict_model()
2024-06-04 19:36:15,598:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EB9781F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022EB97884C0>)
2024-06-04 19:36:15,598:INFO:Checking exceptions
2024-06-04 19:36:15,598:INFO:Preloading libraries
2024-06-04 19:36:15,599:INFO:Set up data.
2024-06-04 19:36:15,602:INFO:Set up index.
2024-06-04 19:36:18,761:INFO:Initializing load_model()
2024-06-04 19:36:18,761:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:36:18,997:INFO:Initializing predict_model()
2024-06-04 19:36:18,997:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EB9781EE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022EB97884C0>)
2024-06-04 19:36:18,997:INFO:Checking exceptions
2024-06-04 19:36:18,997:INFO:Preloading libraries
2024-06-04 19:36:18,997:INFO:Set up data.
2024-06-04 19:36:19,000:INFO:Set up index.
2024-06-04 19:36:22,149:INFO:Initializing load_model()
2024-06-04 19:36:22,149:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:36:22,393:INFO:Initializing predict_model()
2024-06-04 19:36:22,394:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EC86E3220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022EB97884C0>)
2024-06-04 19:36:22,395:INFO:Checking exceptions
2024-06-04 19:36:22,395:INFO:Preloading libraries
2024-06-04 19:36:22,396:INFO:Set up data.
2024-06-04 19:36:22,398:INFO:Set up index.
2024-06-04 19:36:25,533:INFO:Initializing load_model()
2024-06-04 19:36:25,534:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:36:25,768:INFO:Initializing predict_model()
2024-06-04 19:36:25,769:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EC3761B80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022EB97884C0>)
2024-06-04 19:36:25,769:INFO:Checking exceptions
2024-06-04 19:36:25,769:INFO:Preloading libraries
2024-06-04 19:36:25,769:INFO:Set up data.
2024-06-04 19:36:25,778:INFO:Set up index.
2024-06-04 19:36:28,953:INFO:Initializing load_model()
2024-06-04 19:36:28,953:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:36:29,168:INFO:Initializing predict_model()
2024-06-04 19:36:29,168:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EC3761910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022EB97884C0>)
2024-06-04 19:36:29,168:INFO:Checking exceptions
2024-06-04 19:36:29,168:INFO:Preloading libraries
2024-06-04 19:36:29,169:INFO:Set up data.
2024-06-04 19:36:29,172:INFO:Set up index.
2024-06-04 19:36:32,329:INFO:Initializing load_model()
2024-06-04 19:36:32,330:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:36:32,587:INFO:Initializing predict_model()
2024-06-04 19:36:32,587:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EC3761A00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022EB97884C0>)
2024-06-04 19:36:32,587:INFO:Checking exceptions
2024-06-04 19:36:32,587:INFO:Preloading libraries
2024-06-04 19:36:32,588:INFO:Set up data.
2024-06-04 19:36:32,592:INFO:Set up index.
2024-06-04 19:36:35,734:INFO:Initializing load_model()
2024-06-04 19:36:35,734:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:36:35,954:INFO:Initializing predict_model()
2024-06-04 19:36:35,954:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EB9795550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022EB97884C0>)
2024-06-04 19:36:35,955:INFO:Checking exceptions
2024-06-04 19:36:35,955:INFO:Preloading libraries
2024-06-04 19:36:35,955:INFO:Set up data.
2024-06-04 19:36:35,962:INFO:Set up index.
2024-06-04 19:36:39,119:INFO:Initializing load_model()
2024-06-04 19:36:39,119:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:36:39,338:INFO:Initializing predict_model()
2024-06-04 19:36:39,338:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EB97956A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022EB97884C0>)
2024-06-04 19:36:39,338:INFO:Checking exceptions
2024-06-04 19:36:39,338:INFO:Preloading libraries
2024-06-04 19:36:39,339:INFO:Set up data.
2024-06-04 19:36:39,342:INFO:Set up index.
2024-06-04 19:36:42,494:INFO:Initializing load_model()
2024-06-04 19:36:42,494:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:36:42,722:INFO:Initializing predict_model()
2024-06-04 19:36:42,722:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EB97959D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022EB97884C0>)
2024-06-04 19:36:42,722:INFO:Checking exceptions
2024-06-04 19:36:42,722:INFO:Preloading libraries
2024-06-04 19:36:42,722:INFO:Set up data.
2024-06-04 19:36:42,728:INFO:Set up index.
2024-06-04 19:36:45,879:INFO:Initializing load_model()
2024-06-04 19:36:45,880:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:36:46,077:INFO:Initializing predict_model()
2024-06-04 19:36:46,077:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EB809B610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022EB97884C0>)
2024-06-04 19:36:46,077:INFO:Checking exceptions
2024-06-04 19:36:46,077:INFO:Preloading libraries
2024-06-04 19:36:46,078:INFO:Set up data.
2024-06-04 19:36:46,081:INFO:Set up index.
2024-06-04 19:36:49,205:INFO:Initializing load_model()
2024-06-04 19:36:49,206:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:36:49,716:INFO:Initializing predict_model()
2024-06-04 19:36:49,716:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022EB809B340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022EB97884C0>)
2024-06-04 19:36:49,717:INFO:Checking exceptions
2024-06-04 19:36:49,717:INFO:Preloading libraries
2024-06-04 19:36:49,717:INFO:Set up data.
2024-06-04 19:36:49,725:INFO:Set up index.
2024-06-04 19:36:57,736:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:36:57,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:36:57,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:36:57,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:37:33,220:INFO:Initializing load_model()
2024-06-04 19:37:33,221:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:37:33,512:INFO:Initializing predict_model()
2024-06-04 19:37:33,512:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023EB88A16A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023EB88A84C0>)
2024-06-04 19:37:33,512:INFO:Checking exceptions
2024-06-04 19:37:33,512:INFO:Preloading libraries
2024-06-04 19:37:33,513:INFO:Set up data.
2024-06-04 19:37:33,516:INFO:Set up index.
2024-06-04 19:37:36,667:INFO:Initializing load_model()
2024-06-04 19:37:36,668:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:37:36,904:INFO:Initializing predict_model()
2024-06-04 19:37:36,904:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023EC28DFF40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023EB88A84C0>)
2024-06-04 19:37:36,905:INFO:Checking exceptions
2024-06-04 19:37:36,905:INFO:Preloading libraries
2024-06-04 19:37:36,905:INFO:Set up data.
2024-06-04 19:37:36,908:INFO:Set up index.
2024-06-04 19:37:40,057:INFO:Initializing load_model()
2024-06-04 19:37:40,057:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:37:40,249:INFO:Initializing predict_model()
2024-06-04 19:37:40,249:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023EB88A1F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023EC2881700>)
2024-06-04 19:37:40,249:INFO:Checking exceptions
2024-06-04 19:37:40,250:INFO:Preloading libraries
2024-06-04 19:37:40,250:INFO:Set up data.
2024-06-04 19:37:40,253:INFO:Set up index.
2024-06-04 19:40:36,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:40:36,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:40:36,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:40:36,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-04 19:40:37,368:INFO:Initializing load_model()
2024-06-04 19:40:37,368:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:40:37,744:INFO:Initializing predict_model()
2024-06-04 19:40:37,744:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4BA96F490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:40:37,744:INFO:Checking exceptions
2024-06-04 19:40:37,744:INFO:Preloading libraries
2024-06-04 19:40:37,745:INFO:Set up data.
2024-06-04 19:40:37,750:INFO:Set up index.
2024-06-04 19:40:40,918:INFO:Initializing load_model()
2024-06-04 19:40:40,918:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:40:41,331:INFO:Initializing predict_model()
2024-06-04 19:40:41,331:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4BA97E5E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:40:41,332:INFO:Checking exceptions
2024-06-04 19:40:41,332:INFO:Preloading libraries
2024-06-04 19:40:41,333:INFO:Set up data.
2024-06-04 19:40:41,335:INFO:Set up index.
2024-06-04 19:40:44,543:INFO:Initializing load_model()
2024-06-04 19:40:44,543:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:40:44,909:INFO:Initializing predict_model()
2024-06-04 19:40:44,909:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4B2292C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:40:44,911:INFO:Checking exceptions
2024-06-04 19:40:44,911:INFO:Preloading libraries
2024-06-04 19:40:44,911:INFO:Set up data.
2024-06-04 19:40:44,917:INFO:Set up index.
2024-06-04 19:40:48,139:INFO:Initializing load_model()
2024-06-04 19:40:48,139:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:40:48,486:INFO:Initializing predict_model()
2024-06-04 19:40:48,486:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4B2292BE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:40:48,486:INFO:Checking exceptions
2024-06-04 19:40:48,486:INFO:Preloading libraries
2024-06-04 19:40:48,486:INFO:Set up data.
2024-06-04 19:40:48,489:INFO:Set up index.
2024-06-04 19:40:51,661:INFO:Initializing load_model()
2024-06-04 19:40:51,661:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:40:51,980:INFO:Initializing predict_model()
2024-06-04 19:40:51,981:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4BA97E6A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:40:51,981:INFO:Checking exceptions
2024-06-04 19:40:51,981:INFO:Preloading libraries
2024-06-04 19:40:51,982:INFO:Set up data.
2024-06-04 19:40:51,988:INFO:Set up index.
2024-06-04 19:40:55,202:INFO:Initializing load_model()
2024-06-04 19:40:55,202:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:40:55,768:INFO:Initializing predict_model()
2024-06-04 19:40:55,768:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C493DE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:40:55,769:INFO:Checking exceptions
2024-06-04 19:40:55,769:INFO:Preloading libraries
2024-06-04 19:40:55,770:INFO:Set up data.
2024-06-04 19:40:55,781:INFO:Set up index.
2024-06-04 19:40:59,085:INFO:Initializing load_model()
2024-06-04 19:40:59,085:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:40:59,353:INFO:Initializing predict_model()
2024-06-04 19:40:59,353:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C492F9A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:40:59,353:INFO:Checking exceptions
2024-06-04 19:40:59,353:INFO:Preloading libraries
2024-06-04 19:40:59,354:INFO:Set up data.
2024-06-04 19:40:59,357:INFO:Set up index.
2024-06-04 19:41:02,553:INFO:Initializing load_model()
2024-06-04 19:41:02,553:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:41:02,905:INFO:Initializing predict_model()
2024-06-04 19:41:02,905:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4B2292BE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:41:02,905:INFO:Checking exceptions
2024-06-04 19:41:02,906:INFO:Preloading libraries
2024-06-04 19:41:02,906:INFO:Set up data.
2024-06-04 19:41:02,913:INFO:Set up index.
2024-06-04 19:41:06,085:INFO:Initializing load_model()
2024-06-04 19:41:06,086:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:41:06,362:INFO:Initializing predict_model()
2024-06-04 19:41:06,362:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4B9273B20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:41:06,362:INFO:Checking exceptions
2024-06-04 19:41:06,362:INFO:Preloading libraries
2024-06-04 19:41:06,363:INFO:Set up data.
2024-06-04 19:41:06,367:INFO:Set up index.
2024-06-04 19:41:09,520:INFO:Initializing load_model()
2024-06-04 19:41:09,520:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:41:09,776:INFO:Initializing predict_model()
2024-06-04 19:41:09,777:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4B2292BE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:41:09,777:INFO:Checking exceptions
2024-06-04 19:41:09,777:INFO:Preloading libraries
2024-06-04 19:41:09,777:INFO:Set up data.
2024-06-04 19:41:09,781:INFO:Set up index.
2024-06-04 19:41:12,925:INFO:Initializing load_model()
2024-06-04 19:41:12,926:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:41:13,158:INFO:Initializing predict_model()
2024-06-04 19:41:13,159:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4BA97E5E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:41:13,159:INFO:Checking exceptions
2024-06-04 19:41:13,159:INFO:Preloading libraries
2024-06-04 19:41:13,161:INFO:Set up data.
2024-06-04 19:41:13,166:INFO:Set up index.
2024-06-04 19:41:16,325:INFO:Initializing load_model()
2024-06-04 19:41:16,325:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:41:16,571:INFO:Initializing predict_model()
2024-06-04 19:41:16,571:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4B8CD16A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:41:16,571:INFO:Checking exceptions
2024-06-04 19:41:16,571:INFO:Preloading libraries
2024-06-04 19:41:16,571:INFO:Set up data.
2024-06-04 19:41:16,575:INFO:Set up index.
2024-06-04 19:41:19,723:INFO:Initializing load_model()
2024-06-04 19:41:19,723:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:41:20,083:INFO:Initializing predict_model()
2024-06-04 19:41:20,083:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4BA97EF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:41:20,083:INFO:Checking exceptions
2024-06-04 19:41:20,083:INFO:Preloading libraries
2024-06-04 19:41:20,084:INFO:Set up data.
2024-06-04 19:41:20,093:INFO:Set up index.
2024-06-04 19:41:23,368:INFO:Initializing load_model()
2024-06-04 19:41:23,368:INFO:load_model(model_name=model_et, platform=None, authentication=None, verbose=True)
2024-06-04 19:41:23,647:INFO:Initializing predict_model()
2024-06-04 19:41:23,647:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4BA8E6A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['volume', 'lowPrice', 'highPrice',
                                             'count', 'openPrice'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4BA97A310>)
2024-06-04 19:41:23,648:INFO:Checking exceptions
2024-06-04 19:41:23,648:INFO:Preloading libraries
2024-06-04 19:41:23,649:INFO:Set up data.
2024-06-04 19:41:23,655:INFO:Set up index.
